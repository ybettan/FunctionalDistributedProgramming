-module(tests_arik).
-export([test_all/0]).

test_all() ->

	matrix_server:start_server(),
	version_1 = matrix_server:get_version(),
	MsgRef = make_ref(),
	matrix_server ! sw_upgrade,
	matrix_server ! {self(), MsgRef, get_version},
	receive
		{MsgRef, version_1} -> ok;
		_Msg -> exit("Failed to get version in test")
	end,
	
	test_0(),
	test_1(),
	test_2(),
	test_3(),
	test_4(),
	test_5(),
	test_6(),
	test_7(),
	test_8(),
	test_9(),
	test_10(),
	test_11(),
	test_12(),
	test_13(),
	test_14(),
	test_15(),
	test_16(),
	test_17(),
	test_18(),
	test_19(),
	test_20(),
	test_21(),
	test_22(),
	test_23(),
	test_24(),
	test_25(),
	test_26(),
	test_27(),
	test_28(),
	test_29(),
	test_30(),
	test_31(),
	test_32(),
	test_33(),
	test_34(),
	test_35(),
	test_36(),
	test_37(),
	test_38(),
	test_39(),
	test_40(),
	test_41(),
	test_42(),
	test_43(),
	test_44(),
	test_45(),
	test_46(),
	test_47(),
	test_48(),
	test_49(),
	test_50(),
	test_51(),
	test_52(),
	test_53(),
	test_54(),
	test_55(),
	test_56(),
	test_57(),
	test_58(),
	test_59(),
	test_60(),
	test_61(),
	test_62(),
	test_63(),
	test_64(),
	test_65(),
	test_66(),
	test_67(),
	test_68(),
	test_69(),
	test_70(),
	test_71(),
	test_72(),
	test_73(),
	test_74(),
	test_75(),
	test_76(),
	test_77(),
	test_78(),
	test_79(),
	test_80(),
	test_81(),
	test_82(),
	test_83(),
	test_84(),
	test_85(),
	test_86(),
	test_87(),
	test_88(),
	test_89(),
	test_90(),
	test_91(),
	test_92(),
	test_93(),
	test_94(),
	test_95(),
	test_96(),
	test_97(),
	test_98(),
	test_99(),
	ok_100_tests.

test_0() ->
	A = {{89,41,17,98,96,69,23},{69,75,23,28,5,56,82},{44,55,16,4,91,64,22},{61,81,10,87,91,80,51},{14,49,40,51,30,76,92},{99,86,2,90,61,73,22},{22,26,11,15,44,9,66},{2,75,26,87,48,99,60},{49,96,62,86,49,77,60},{80,73,79,34,75,17,89},{38,82,11,33,2,12,36},{63,52,77,31,72,78,99},{52,67,97,62,65,60,40},{50,57,99,44,71,33,79}},
	B = {{23,73,84,94,17,60,24,57,95,16,73,81,53,83,5,35,73},{50,92,21,30,11,23,91,47,33,40,36,69,87,86,35,17,4},{63,85,41,59,62,28,19,96,4,53,90,75,1,36,46,50,19},{5,35,18,28,23,16,87,94,34,49,34,19,83,6,32,3,83},{57,45,69,79,75,82,26,35,26,97,83,8,43,74,26,61,92},{91,68,5,20,92,71,93,61,15,68,21,1,28,9,60,8,12},{53,10,97,79,12,75,78,73,3,61,99,1,68,80,40,52,47}},
	C = {{18628,24386,19998,24124,19096,22823,25423,27092,16808,24174,24529,14035,24059,21678,13354,12560,25859},{16653,19725,17397,18870,10579,17493,23088,21875,11290,15990,20468,13199,19888,20607,11694,9941,13084},{16967,18439,14312,17049,15414,18073,16747,15700,9587,18469,17843,9449,14666,18052,10095,10494,14242},{21688,25845,20427,24008,19346,24162,30378,28210,15185,26387,25509,13792,27132,24445,15590,13116,23917},{19049,18153,16137,17732,14776,18659,25016,24137,7037,20493,21314,8892,18952,17386,14277,10698,14207},{18439,26388,18532,22541,16378,21249,28161,26531,18058,21763,22337,16396,26364,23156,13323,10746,22601},{9399,8710,12598,12787,6607,11663,11537,11849,4979,11616,14417,5113,11316,13165,6330,7995,10422},{20794,21793,14002,16920,17900,19430,30071,26412,8640,23721,20147,9483,22794,17317,16203,9746,16585},{23243,28730,19808,23703,19190,22245,31687,32133,13604,25773,27161,17406,26492,24190,17503,13430,20529},{21176,25882,25997,28619,16100,23267,23495,28930,13953,23913,32127,18794,23245,28789,14207,17432,21742},{8946,13674,9649,10847,4675,8718,15430,13608,7822,9294,11820,10252,14768,13936,6834,5463,8070},{25504,26547,25060,27962,20894,26495,27252,30846,12402,27015,31870,15808,22525,26609,17181,17196,21056},{22252,27780,19533,23852,19936,20959,24972,30108,12357,24516,27661,17908,21023,22492,15941,14520,19633},{21694,25078,22975,25993,17936,21877,23173,29434,11101,24433,30515,16924,20709,24751,15193,16504,20052}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 0")
	end.

test_1() ->
	A = {{97,83,14,62,59,40,97,43,79,18,22,87,94,21,56,75,55,29,2,65,84,15,33,52,72,4,53,12},{9,54,95,28,58,57,22,93,48,46,14,41,91,60,89,95,5,2,45,21,71,18,82,18,81,41,90,95},{32,85,60,47,20,95,49,92,93,66,75,87,4,29,75,60,66,23,37,63,5,18,79,6,96,15,8,27},{49,12,38,23,83,76,14,12,28,26,27,44,98,78,81,13,13,43,24,5,28,46,6,19,72,7,78,59},{38,96,3,51,50,5,64,76,88,86,81,7,22,86,22,40,24,67,97,15,81,96,51,90,6,11,89,5},{48,94,98,18,6,1,2,98,17,13,46,46,83,3,13,59,84,4,28,17,26,84,46,71,76,15,81,39},{99,87,82,27,97,17,51,6,83,69,12,89,32,55,16,25,5,43,94,57,37,21,84,95,40,80,73,35},{84,75,84,10,29,24,97,11,63,70,2,92,39,87,46,2,54,50,93,45,46,19,96,66,1,23,2,68}},
	B = {{64},{16},{26},{92},{38},{91},{11},{58},{60},{88},{63},{84},{37},{96},{29},{55},{94},{42},{85},{2},{54},{90},{62},{45},{48},{82},{5},{41}},
	C = {{70809},{75064},{80884},{59691},{82063},{63083},{80104},{76723}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 1")
	end.

test_2() ->
	A = {{69,74,55,64,19,81,10},{54,69,82,66,83,91,97},{33,56,63,38,8,2,43},{14,58,95,86,82,13,85},{67,73,65,47,99,67,74},{32,25,85,6,47,52,62},{77,97,33,79,36,2,78},{69,4,94,95,64,93,90}},
	B = {{20,54},{81,46},{40,18},{49,3},{48,68},{74,29},{32,13}},
	C = {{19936,12083},{27005,17308},{11486,6767},{20610,12450},{24234,17924},{14447,9936},{18960,12971},{22953,14106}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 2")
	end.

test_3() ->
	A = {{82,20,39,29},{74,81,6,94},{4,19,88,50},{69,28,11,85},{11,57,6,3},{64,1,31,58},{9,4,70,35},{22,66,43,77},{86,97,6,49},{81,21,58,54},{16,59,13,40},{5,97,45,87},{74,34,97,22},{38,1,58,66},{40,3,79,87},{9,77,67,30},{27,86,27,37},{26,74,63,67},{31,99,81,19},{99,54,53,49},{88,84,36,61},{36,70,26,97},{70,4,39,32}},
	B = {{48,70,79,75,31,86,26,5,71,5,48,96,32,68,90,52},{5,81,72,52,24,24,39,63,87,82,45,11,60,70,71,38},{34,68,51,24,29,43,63,87,54,80,45,7,53,38,47,55},{20,64,78,27,41,11,33,90,44,93,47,67,51,7,43,27}},
	C = {{5942,11868,12169,8909,5342,9528,6326,7673,10944,7867,7954,10308,7370,8661,11880,7952},{6041,18165,19316,12444,8266,9600,8563,14455,16761,16234,11885,14335,12340,11588,16735,9794},{4279,11003,10072,4750,5182,5134,8039,13373,8889,13268,7357,4559,8482,5296,7995,7120},{5526,13286,14658,9190,6615,8014,6384,10716,11669,11426,9062,12704,8806,7665,12370,7552},{1077,5987,5513,4014,2006,2605,2986,4438,6196,5488,3504,1926,4243,4987,5448,3149},{5291,10381,11233,7162,5285,7499,5570,8300,8857,8276,7238,10258,6709,6006,9782,6637},{3532,7954,7299,3508,3840,4265,5955,9537,6307,9228,5407,3743,6023,3797,5889,5415},{4388,14738,14689,8193,6670,6172,8396,14939,13014,16123,9580,8298,10870,8289,11998,8096},{5797,17421,17906,12961,7177,10521,8014,11473,17025,13421,11066,12648,11389,13209,17016,9811},{7045,14771,15081,10017,6911,10558,8361,11634,13086,11789,9981,12031,9680,9560,13829,9658},{2305,9343,9295,5660,3929,3791,4856,8528,8731,9678,5888,4956,6781,5992,7960,4869},{3995,16835,16460,8848,7355,5650,9619,17881,15052,19670,10719,7691,12802,9449,13193,8770},{7460,15938,14957,10240,6825,11593,10087,12931,14418,12964,10481,9631,10671,11252,14579,11069},{5121,10909,11180,6076,5590,6512,6859,11239,8821,11050,7581,8487,7716,5320,9055,6986},{6361,13983,14191,7401,7170,7866,9005,15092,11195,14857,9699,10255,10084,6541,11267,8888},{3695,13343,12012,7097,5300,5833,8448,13425,12276,14509,8322,4190,9989,8758,10716,7889},{3384,13060,12588,8144,5201,5954,6978,11232,12485,12788,8120,6206,9342,9141,11396,7156},{5100,16386,15821,9119,7156,7458,9742,16303,14634,17469,10562,8240,12028,9811,13436,9438},{5117,16913,15190,9930,6465,8734,10397,15149,16024,16520,10481,5905,12194,12249,14443,10342},{7804,18044,18234,12828,7911,12628,9636,12918,16745,13720,11870,13752,11716,12869,17342,11438},{7088,19316,19594,13479,8289,11803,9845,14354,18184,15881,12491,13711,12875,13659,18199,11395},{4902,16166,16776,9583,7527,6961,8505,15582,14318,17021,10607,10907,11677,9015,13603,8581},{5346,9924,10303,7258,4709,8145,5489,6875,8832,6774,6799,9181,6179,6746,9793,6801}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 3")
	end.

test_4() ->
	A = {{84,98,71,85},{68,73,50,94},{46,33,36,31},{38,52,60,99},{37,60,2,6},{79,22,11,20},{42,62,61,73},{77,36,91,20}},
	B = {{8,52,32,86,38,69,26,22,75,44,99,32,73,71,69,46,53},{77,96,23,38,75,4,54,66,16,55,54,45,8,89,91,45,57},{68,74,12,42,41,96,40,71,29,57,14,78,40,74,47,13,36},{13,67,20,27,68,71,99,41,54,87,93,98,98,72,15,59,37}},
	C = {{14151,24725,7494,16225,19233,19039,18731,16842,14517,20528,22507,20966,18086,26060,19326,14212,15739},{10787,20542,6335,13260,16501,16458,17016,13718,12794,18035,20116,18573,16760,21793,15095,12609,13043},{5760,10301,3283,7559,7807,8963,7487,7017,6696,8588,9723,8803,8100,11099,8334,5898,6762},{9675,18041,5112,10437,14536,15619,15997,12587,10768,16565,16617,17938,15292,18894,11659,10709,10801},{5130,8234,2708,5708,6396,3411,4876,5162,4117,5564,7489,4628,3849,8547,8197,4782,5675},{3334,8374,3566,8632,6463,8015,5662,4791,7676,7053,11023,6336,8343,9821,8270,5947,6577},{10207,17541,4962,10501,13711,14185,14107,12340,9853,15086,15149,16046,13156,18270,12502,9822,10657},{9836,15534,4784,12352,10717,15613,9566,11351,10070,12295,12701,13142,11509,16845,13166,7525,10149}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 4")
	end.

test_5() ->
	A = {{49,89,18,37,61},{75,99,50,90,32},{72,45,36,38,8},{22,54,68,90,36},{55,15,1,76,28},{34,30,54,43,39},{97,21,93,50,84},{37,9,13,68,91},{8,91,95,95,74},{94,34,22,38,84},{81,33,25,54,84},{98,31,45,36,8},{30,47,5,33,75},{2,6,90,1,79},{94,49,19,7,24},{17,15,99,46,68}},
	B = {{69,79,18,31,6,68,18,27,81,43,3,2,91,59,8,91,81,79,52,66,46,83,13,77,77,59,44},{63,93,19,90,28,34,69,79,60,29,36,15,20,49,1,28,79,6,5,94,89,54,28,84,56,44,19},{69,51,31,58,6,15,9,62,20,88,94,65,32,72,83,74,61,10,73,89,11,34,83,50,56,38,9},{49,88,82,84,90,68,31,65,60,77,72,71,47,42,7,3,31,60,2,59,67,92,44,15,13,10,67},{48,49,99,40,73,64,50,72,15,49,31,38,83,4,87,24,55,18,41,62,69,20,70,82,73,17,36}},
	C = {{14971,19311,12204,16121,10677,13048,11382,16267,12804,12110,9598,7548,13617,10346,7541,9858,16600,7903,6882,19167,17061,14109,10521,17706,14699,8898,8684},{20808,27170,15329,22975,13958,17384,13021,21100,18895,18994,15961,12491,17291,16784,8263,14335,21496,12995,9537,26000,21049,22191,14097,20565,17625,12125,12813},{12533,15445,7175,11882,5912,10062,6303,10777,11652,10887,8204,6161,11054,10673,4571,10782,13201,8742,7001,14924,10811,13286,7416,12350,11158,8112,7181},{15750,19912,14474,18486,12780,12776,9324,17518,12322,17190,15998,13032,12476,12764,9636,9680,14966,8790,8034,20122,15080,16054,13922,13932,12324,7770,9932},{9877,13851,10310,10617,9640,11225,5790,9688,10355,10112,7139,6860,11233,7356,3506,6399,9597,9509,4308,11349,10900,12961,6522,8981,8163,5179,8814},{11941,13925,10243,12058,8085,9562,6451,12239,8799,12306,10563,8563,10680,9326,8478,8995,11896,6688,7545,14825,10400,11014,10386,11681,10728,6471,6837},{20915,22875,17444,17851,12360,17481,9782,19342,15237,20930,15993,13296,21545,15884,16174,18463,21359,13231,15482,24811,16500,18627,17648,21521,20635,12109,11878},{11717,14866,15825,12063,13315,13465,8062,13488,9242,12691,9374,9340,14712,6780,9777,6969,11614,8825,6785,14099,13481,12075,11174,12737,11608,5300,9748},{21047,25926,19934,24888,17118,16259,13923,24798,14818,22284,21364,17113,16195,16057,15143,12367,20647,9160,11030,27730,20983,19028,19897,20503,17669,10294,11965},{16040,19170,14452,13802,11200,15838,9614,15106,13634,14006,8914,8018,18696,10728,10186,13264,17440,11642,10184,18808,15934,15562,11552,18652,17000,9686,10550},{16071,19611,15604,14827,12552,16053,9834,15902,13541,14914,10273,9308,18341,10800,10442,12323,16987,11599,9754,19067,16352,16003,12308,17957,16319,9149,11058},{13968,16480,7492,11782,5550,11353,5824,10801,12978,12237,8480,6446,13334,12085,5498,13416,14688,10682,8936,16007,10726,14810,8021,13596,12854,9352,8006},{10593,13575,11719,11222,9971,10757,8601,12378,8455,9309,6953,6283,11606,6119,7458,6315,11596,6032,5301,13440,13004,9734,8823,13153,11126,5633,7169},{10567,9265,10843,9066,6577,6814,5241,11861,3567,12128,11203,9017,9786,7250,14372,8909,10502,2576,9945,13663,7134,5222,13238,11651,11310,5155,3923},{12379,14744,6162,9974,4432,10355,6661,9770,11714,8850,5080,3567,12463,9705,4515,11929,14181,8762,7518,14402,11019,12218,6159,14377,12889,8902,6571},{14467,15167,14164,14203,10220,10631,7058,15668,8037,16752,15317,12544,12821,11070,14606,11063,13767,6407,11066,18273,10980,11179,15642,13785,13255,7041,7454}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 5")
	end.

test_6() ->
	A = {{40,66,10,79,5,34,23,8,11,59,61,17,54,37,13,46,61,8,1,77},{23,69,55,18,11,36,23,38,12,72,39,81,94,31,40,68,62,91,6,49},{81,29,46,47,34,81,87,18,95,48,37,37,40,94,28,44,53,56,31,76},{15,41,46,89,83,69,16,11,70,25,60,16,46,17,37,87,61,5,20,21},{12,60,67,75,23,96,30,74,43,54,65,11,38,55,47,28,97,13,43,17},{90,12,24,15,2,69,78,28,30,93,75,45,77,98,7,82,80,80,77,61},{68,5,30,35,97,38,26,37,46,96,61,96,53,45,70,47,19,11,39,9},{90,3,36,45,12,5,35,34,88,21,53,79,49,10,42,11,96,85,45,25},{94,47,15,19,20,86,44,4,90,86,97,41,73,60,23,70,2,50,72,33},{3,78,17,71,50,47,81,5,34,13,7,91,86,40,58,4,84,36,31,66},{22,22,8,83,29,70,30,97,85,45,36,21,94,75,38,79,45,53,74,21},{58,55,89,13,56,75,83,85,18,15,43,41,89,9,70,12,98,20,17,54}},
	B = {{55,16,66,4,14,92,42,22,34,7,80,57,88,68,92,16,39,39},{74,92,39,3,72,43,82,4,91,45,41,7,61,41,56,84,29,69},{44,64,90,27,21,57,69,5,81,34,81,8,66,26,32,67,56,58},{65,8,87,58,9,2,57,77,81,56,31,65,27,98,85,91,10,63},{1,70,44,46,10,41,22,47,92,4,6,77,25,81,42,49,63,15},{34,99,59,56,4,94,3,56,57,84,79,73,14,20,77,49,90,5},{2,38,19,71,18,38,78,93,69,59,81,54,85,97,66,37,33,62},{64,90,33,79,21,84,66,81,37,77,39,63,95,71,64,7,94,61},{8,42,96,36,90,56,41,43,84,24,25,46,79,26,9,32,27,99},{85,34,11,11,32,43,20,25,60,47,90,13,76,66,65,47,68,60},{90,97,85,70,83,41,80,72,26,95,7,82,58,61,9,16,99,13},{22,45,44,38,13,38,58,24,5,20,49,83,24,31,34,87,8,29},{99,19,22,9,48,21,48,66,65,9,7,51,37,87,37,59,92,32},{62,99,15,53,43,14,56,64,16,79,90,67,57,75,38,75,83,16},{14,93,76,77,67,51,65,56,59,3,5,46,83,11,76,64,65,61},{62,95,81,57,92,40,71,57,91,33,60,69,46,33,74,40,72,26},{95,15,56,22,47,56,30,32,92,80,50,59,29,84,24,68,77,19},{10,66,65,73,6,14,14,89,82,73,41,26,2,28,41,85,69,66},{56,69,82,33,5,52,46,73,93,38,50,63,29,81,32,1,99,58},{44,11,11,50,39,79,46,46,93,14,98,53,8,7,30,25,59,53}},
	C = {{45338,35071,34874,27449,30372,32311,36621,34512,47568,33581,38408,37212,32686,40842,36260,37828,42281,29880},{50478,52312,45346,37117,35929,40697,45187,44340,59213,40668,46620,44326,41558,45853,43956,52679,57406,40276},{48361,57801,55617,46105,38689,52260,49983,55438,68526,48210,61435,56931,52820,56985,51944,52435,62797,48200},{42679,49356,52399,36417,36080,38183,40872,42038,60473,36330,35814,47365,38271,46267,41148,43704,50472,34641},{54099,58621,53597,41731,35843,47067,46820,48436,62604,51184,47469,49887,48149,54289,46800,48580,62859,40866},{62327,62447,55699,46974,40464,53591,52487,61405,69323,55686,66246,61379,53804,65146,54519,51891,76292,45514},{44070,54289,49578,39005,33145,43899,44186,45362,53661,34699,43038,53260,48942,52467,46916,45204,56430,38081},{41437,40513,52659,35949,30969,41337,40891,44436,54517,37039,39692,46803,42621,47928,38298,43281,49350,41986},{53276,61621,57150,41052,42148,50256,48781,53178,63081,45576,53773,55437,52482,54712,49965,45439,66006,44980},{42473,45074,43166,37603,31140,38433,45031,46228,61371,36999,42739,48651,37988,51283,42786,54112,48992,40448},{54728,61679,56811,47705,39478,46509,49337,60969,67381,49361,47775,57957,50510,60546,51404,49094,68814,47161},{50355,56008,50898,42548,34469,54377,50889,49302,65683,43463,49281,52249,52279,55392,49511,48932,64213,42618}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 6")
	end.

test_7() ->
	A = {{51,18,41,25,98,58,7,43,36,86,46,12,99,95,7,70,6,82,82,24,74,8,72,99,94,18},{31,70,25,97,27,97,13,43,1,15,44,16,31,90,31,21,6,44,50,62,19,25,72,13,36,59},{41,31,32,99,12,39,5,80,85,86,7,70,9,13,30,66,32,62,19,34,76,14,77,59,38,35},{67,90,32,53,11,37,45,76,89,39,16,74,29,92,24,11,9,6,73,96,54,26,8,46,56,55},{81,27,12,44,13,71,43,90,63,16,61,45,41,98,16,80,35,51,47,68,16,59,65,41,53,33},{41,98,63,41,74,87,34,49,7,5,94,71,47,97,40,62,44,91,65,79,86,80,79,76,14,8}},
	B = {{21,3,21,27,84,36,7,11,61,24,56,29,55,85,66,23,81,36,68,15,1,66,20,40},{59,99,15,86,26,41,90,33,34,19,99,22,32,29,68,79,70,86,22,17,78,24,75,63},{77,8,45,6,52,98,38,63,38,41,26,83,10,24,82,29,42,30,30,14,70,85,91,90},{59,58,89,66,12,20,92,73,58,44,76,20,85,52,11,44,75,40,88,80,39,56,22,47},{85,15,68,96,19,46,53,27,7,84,71,61,79,86,63,58,96,39,63,18,9,95,70,77},{95,57,95,56,36,20,15,92,35,63,66,12,43,93,50,57,74,88,66,43,24,64,22,42},{85,32,57,26,67,92,30,79,16,14,46,76,27,15,87,43,94,84,26,28,64,38,56,57},{64,49,99,72,51,31,87,81,50,14,51,86,76,15,65,44,93,92,6,2,73,13,30,36},{28,1,5,60,79,17,62,1,4,69,95,28,78,48,41,54,86,35,71,33,9,13,48,3},{31,53,89,30,78,42,72,92,50,59,91,4,88,78,49,78,3,84,77,89,45,98,41,22},{85,46,64,96,84,16,4,47,77,52,93,7,56,80,61,64,6,43,61,55,58,9,89,4},{47,74,25,57,93,92,71,11,36,20,51,78,5,33,10,72,21,76,32,86,49,83,68,10},{98,77,31,82,86,41,73,44,33,38,62,86,79,52,7,90,35,75,19,24,21,66,7,23},{65,98,17,82,2,57,33,10,49,23,3,22,53,67,84,4,59,72,97,25,56,5,89,13},{10,10,51,68,42,12,44,80,60,21,53,19,21,73,44,33,90,4,17,24,47,37,51,6},{9,22,45,43,81,27,16,95,87,91,86,1,7,73,32,96,87,9,90,28,98,25,64,54},{50,41,91,94,47,59,93,36,28,76,45,52,68,89,53,11,71,48,32,51,57,89,72,14},{87,97,65,64,91,6,54,86,60,79,5,8,3,66,15,22,78,6,92,84,48,17,90,36},{1,87,48,4,4,62,87,62,84,40,99,84,57,10,58,63,75,81,31,75,47,39,42,34},{9,65,46,45,18,76,99,77,86,80,9,3,12,56,64,43,72,99,37,29,3,91,10,10},{40,28,57,45,40,67,64,70,17,73,98,90,75,27,5,26,5,15,3,91,13,34,91,27},{84,62,40,38,24,26,74,16,2,60,4,77,93,43,1,18,10,46,81,84,26,48,2,7},{26,63,84,90,78,63,87,56,96,56,2,36,41,96,72,9,17,24,75,72,39,68,95,32},{37,58,70,23,67,22,99,70,5,72,11,52,95,56,28,67,74,43,36,85,49,59,4,91},{82,58,59,85,36,36,10,58,18,83,52,91,5,62,98,80,75,38,57,13,97,16,78,37},{71,94,15,18,49,21,15,94,51,1,4,86,84,97,33,76,48,10,47,21,33,88,28,89}},
	C = {{74562,73845,75758,77914,71167,55645,74199,77953,59890,76583,72346,63145,72363,81841,66522,71073,78631,66394,74823,64113,59944,65889,73936,54117},{59258,65189,57789,62522,43875,41960,58079,62014,53974,47696,50162,41154,51529,63789,52822,48840,62605,56344,58650,45737,45563,50635,53383,39519},{54138,57489,67255,63430,65328,46726,72342,69556,52829,60823,63802,48980,61001,66374,48654,57253,66518,53663,61935,60807,50912,58803,60037,42018},{59807,68234,55506,64088,55766,56643,72821,62448,52174,53111,65825,58531,62238,61324,62170,61607,75523,72125,57416,50645,51597,57747,58230,42786},{67245,68966,66781,73570,66436,51978,68042,68427,61383,62844,61383,53799,62864,75054,63879,59924,78815,67658,71655,54344,57229,56490,63134,41789},{85676,86742,82785,90719,74996,68593,89941,83229,70524,79274,76034,66531,73477,86891,71824,70156,86647,79160,78765,74865,67588,73908,85967,56060}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 7")
	end.

test_8() ->
	A = {{25,80,22,14,73,41,25,47,15,6},{69,75,1,81,11,85,1,97,14,59},{65,16,90,20,28,44,56,62,80,73},{82,38,74,22,13,78,88,6,33,67},{81,18,78,88,38,19,29,79,49,19},{94,61,89,29,61,36,78,32,55,68},{60,59,99,17,15,29,8,56,15,12},{57,9,60,32,11,1,65,65,72,77},{94,20,23,77,55,13,36,29,88,36},{16,14,81,51,65,96,12,5,94,28},{16,50,27,93,13,21,70,18,79,67},{64,34,15,5,86,93,1,21,91,51},{85,88,63,86,91,27,39,96,80,41},{18,48,78,12,4,61,81,51,9,13},{33,63,39,28,47,65,41,7,68,3},{41,55,41,14,99,8,16,18,35,43},{49,44,47,17,20,18,66,1,69,29},{81,48,31,47,65,15,98,80,85,50},{99,48,93,76,39,58,20,63,75,68},{27,27,25,65,99,73,90,67,97,4},{64,99,49,32,79,86,1,48,70,4},{30,83,78,39,58,81,55,89,71,49},{95,77,69,96,50,18,20,16,63,42},{80,7,98,58,42,51,65,83,71,7},{9,69,46,96,94,62,50,31,62,24},{96,96,48,52,7,75,16,86,22,39},{69,25,11,39,14,65,22,75,66,65},{76,82,44,60,94,12,48,23,80,46},{42,14,82,56,20,60,98,14,46,54}},
	B = {{26,43,72,32,67,52,94,3,64,58,61,10,40,62,41,60,16,42,73,66,2},{36,22,47,77,39,92,85,92,23,68,14,68,37,81,73,6,74,47,8,35,43},{57,11,90,60,84,35,82,97,61,10,75,85,68,26,79,90,47,2,80,92,33},{36,58,88,7,62,64,58,95,63,34,7,6,61,11,20,54,10,47,78,55,67},{87,49,60,38,6,70,46,24,22,55,43,79,88,28,68,11,50,51,61,27,21},{12,50,78,43,58,96,69,55,7,51,81,40,92,89,21,25,47,86,74,60,64},{83,88,31,38,26,82,1,32,68,95,38,79,23,28,91,91,24,53,79,4,2},{61,46,62,6,8,34,26,63,16,96,57,42,25,15,21,32,86,27,89,65,8},{16,21,1,89,69,73,22,17,85,72,79,94,37,44,98,1,83,46,77,1,82},{27,23,64,64,70,64,74,10,48,90,50,23,12,56,70,38,94,64,8,72,87}},
	C = {{17475,14331,20438,15866,12808,24499,19974,18982,11572,22199,15967,20548,18883,16850,19860,10566,19522,16429,20165,15277,11489},{17261,20316,32836,18325,23548,32815,31209,26809,17784,32531,22882,17456,23006,24546,20166,16751,27130,25195,29258,27694,21553},{22761,20008,30736,26100,29081,32678,29164,23177,27306,33824,31479,29707,23718,22692,33519,24518,30300,22808,35283,27216,22051},{20584,21243,30571,24597,28461,34273,30190,22037,24955,30863,27758,25820,23579,25392,31002,25868,23803,24415,31054,25390,19738},{22425,20305,32266,18688,25564,28571,28270,26710,25182,28330,25258,23606,24353,17448,25970,23571,23310,19252,36132,26826,17781},{27638,23889,35474,29517,31244,39048,35443,26853,30024,37229,31538,33326,27963,27206,38742,27914,30814,26443,36906,29272,22114},{16236,12009,25164,17082,19994,21358,25132,22940,16131,19660,20305,20144,18623,16657,20771,17663,19643,12943,24026,22764,11972},{19938,17747,24526,20998,23886,26530,22511,18347,25056,30791,24594,23787,16413,16847,28869,21741,25679,18528,29354,21815,18173},{19325,19724,26174,20794,24628,30225,25705,18538,26151,29128,23469,22744,22038,18921,27713,18578,22242,21519,31674,20229,19605},{17741,16734,27544,24049,26340,31793,26190,23455,21832,23803,27742,27916,28544,21272,27902,16613,24523,22347,31662,21801,24441},{18467,19354,24187,22117,24457,31662,22643,22956,25092,29642,19889,23533,18862,18458,28804,18951,23875,22034,27080,18369,23512},{16718,16957,25098,24395,23137,32952,27122,15841,19238,29070,27745,25459,25794,25055,27212,11727,27143,25005,28025,20103,22247},{31786,27552,40925,30299,32035,44113,39002,35367,31872,43221,33168,36550,33427,28281,39636,25877,37198,29800,44319,32721,26407},{18483,16592,23140,16828,17981,24851,19824,22715,15998,23236,20163,22588,18123,16862,22431,20111,18992,16098,25367,19056,11905},{16225,15838,21166,20868,19756,28955,21867,19980,18017,23173,20781,24404,21797,19985,24906,13659,20220,19410,25016,15583,17060},{18743,13447,21422,18794,16247,24452,22245,15977,15921,22495,17898,22159,19394,16367,24389,12226,20998,16480,20341,16691,14116},{15531,14428,17959,19940,19680,24796,19104,15477,20413,22844,19033,22288,15681,16696,25831,16231,18388,16142,22415,14139,14573},{28852,26780,31367,26561,26630,38872,28735,24637,30244,41820,29776,32968,25090,23872,37377,25029,31717,26998,39325,24395,20879},{24967,23352,40259,29117,35586,39590,39556,31644,31172,37091,34269,30856,31090,28147,35553,27076,33458,27712,41156,34629,27564},{28145,27432,30114,24510,23669,39856,24506,26346,26287,37356,29627,34496,30554,22512,34001,21039,28985,28132,41272,20755,22164},{21317,19354,31268,26347,25231,37065,32958,28005,20696,30856,28056,30177,30232,27531,29779,15440,29303,25193,32836,24732,21783},{28089,24680,36741,30070,29734,42113,34347,33908,26438,40102,33392,36514,31215,28616,37138,23873,36858,28794,39793,30236,26125},{21975,20241,33884,25606,30395,35282,35173,28511,28321,30120,25077,26437,26948,23903,31935,22547,25800,23435,33132,27230,23400},{26055,23834,34191,22909,28414,33565,29269,28299,28313,32864,31831,30768,28330,21009,31726,27439,26730,22539,42641,28155,18952},{25399,23365,32025,24411,24776,38318,28649,30470,23837,31620,24466,30806,30380,22486,31611,19378,27254,26226,34374,22784,24397},{20048,20600,34936,22777,27176,34860,35255,29703,21441,33424,26738,23274,25144,27309,25975,21128,28563,24569,32573,30145,20252},{15935,18103,26033,19713,23070,29321,25138,18391,20308,31115,25099,19852,19627,21480,23215,16103,26182,22619,28838,22573,20354},{25827,22262,31080,27920,27138,38110,32164,25461,28006,34914,26273,31678,27293,24643,36333,20518,29310,25569,33393,23571,22734},{21928,21720,29278,22432,26934,32412,25640,23808,25790,29098,25876,26554,23424,20388,30462,26192,22392,22542,32728,23262,20182}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 8")
	end.

test_9() ->
	A = {{83,99,77,66,12,28,80,5,16,28,13,55,12,32,28,55,60,39,58,42,26,36,43,73,24,53,25},{39,59,41,26,87,26,49,17,31,9,1,95,57,33,65,63,66,81,91,58,24,11,44,3,54,87,47},{70,62,24,25,19,25,70,4,29,91,61,71,34,57,51,88,26,83,87,19,78,55,29,6,13,65,76},{66,84,63,98,72,70,95,34,24,9,72,24,21,20,7,30,23,92,68,90,45,91,72,81,43,10,29},{33,92,73,83,4,38,16,67,79,14,88,99,75,68,53,1,55,21,84,87,4,22,80,47,21,67,20},{63,26,13,71,56,66,76,68,9,7,5,77,97,59,88,45,17,52,53,69,8,96,55,75,44,86,4},{68,90,92,28,38,39,62,49,87,53,97,36,50,31,65,21,25,97,28,90,75,99,89,50,69,15,75},{1,73,38,15,59,8,14,94,72,48,93,71,94,55,72,48,49,16,46,8,54,30,96,10,3,73,92},{79,10,64,58,41,68,77,75,88,24,77,2,1,40,33,55,35,32,30,77,28,92,94,17,71,29,17},{51,32,26,47,4,33,24,49,1,41,76,51,5,85,2,59,19,78,93,71,29,82,18,60,38,5,83},{49,35,9,26,90,79,87,34,67,47,61,71,43,49,69,52,41,95,39,23,69,60,19,96,80,64,93},{21,38,48,30,68,15,88,40,27,72,27,63,2,54,90,95,12,38,2,23,89,20,35,9,21,87,5},{28,14,33,75,19,62,41,42,88,95,15,52,45,70,71,77,65,40,60,62,65,25,88,16,89,21,82},{48,75,25,13,53,50,91,51,27,22,6,33,19,63,89,41,11,62,57,60,64,1,71,74,85,75,10},{81,77,9,83,4,38,99,42,50,7,21,39,89,73,51,79,21,5,12,85,77,68,22,86,47,15,60},{64,48,87,25,57,92,16,56,63,37,9,32,71,94,31,91,51,13,10,89,37,77,53,71,58,7,62},{79,60,89,90,8,90,33,40,12,92,64,57,34,73,8,32,78,31,24,48,28,83,88,46,39,58,22}},
	B = {{93,67,76,4,13,78,27},{30,65,60,51,8,3,79},{34,35,91,48,28,43,66},{84,96,80,39,72,2,21},{29,37,68,9,34,96,7},{44,25,26,55,80,73,50},{57,81,18,52,18,65,5},{85,93,71,76,43,64,51},{30,81,33,79,87,11,59},{97,62,11,8,4,49,61},{37,52,66,55,36,3,79},{82,29,26,7,55,76,38},{88,67,30,18,18,14,12},{79,2,41,97,66,46,41},{56,17,33,59,99,6,70},{25,44,65,16,32,61,2},{7,35,65,98,38,99,99},{7,78,75,20,15,16,82},{35,55,14,48,12,68,84},{21,35,41,44,56,87,38},{9,1,79,14,28,89,10},{21,55,59,85,12,68,72},{73,53,78,60,92,98,97},{61,90,5,98,93,12,10},{55,76,72,22,50,91,1},{89,35,31,63,62,43,27},{53,84,47,37,10,20,44}},
	C = {{59679,64619,58971,55521,47493,58837,53878},{61826,63427,62760,52132,52057,70002,57592},{66669,67344,63434,52996,45034,64877,62239},{65680,83675,77118,67313,58636,73856,66372},{76427,74692,68122,73015,67985,63051,73867},{79134,74757,64354,66929,65906,72267,56396},{75457,90073,87344,75404,66174,78539,81477},{72119,69264,67453,64503,57708,61717,68499},{64698,73491,73090,66525,60956,74627,62478},{56695,64859,58248,55649,42980,58094,56362},{76448,84838,72780,70290,67035,77024,63485},{58500,51224,56635,46388,49142,59824,44064},{75454,76473,71528,65138,66847,77583,66398},{66385,65998,61329,59941,61194,69034,52987},{71166,75517,65170,64055,58588,64189,47958},{69860,71831,72368,69055,63252,76833,59758},{77848,73899,74234,69305,60687,75211,70894}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 9")
	end.

test_10() ->
	A = {{83,10,83,68,11,86,62,45,18,17,70,96,84,44,90,46,54,40,29,93,12,4,11,78,57,46},{25,37,97,60,2,41,87,95,66,61,95,65,58,25,33,46,76,36,43,70,46,2,68,25,63,35},{78,15,51,5,85,49,3,88,24,61,16,9,38,2,39,10,74,7,76,71,4,27,27,79,49,30},{68,67,53,54,13,18,51,65,71,61,44,22,14,99,85,2,82,17,89,47,82,39,66,84,1,30},{55,38,71,4,42,99,34,1,79,12,70,92,10,8,87,60,29,51,37,26,80,40,86,63,81,78},{70,43,89,88,53,69,97,77,71,9,24,89,64,25,92,50,1,97,40,58,27,75,75,72,83,53},{37,39,73,90,4,83,8,20,81,96,22,21,95,95,31,84,55,70,73,21,86,1,94,79,61,89},{61,62,82,98,63,91,59,37,71,71,38,93,69,72,89,12,18,28,51,98,31,43,62,65,87,67},{3,53,25,54,2,61,96,52,5,24,33,31,91,99,10,1,22,99,68,27,6,69,91,41,69,13},{95,63,20,85,21,58,51,59,27,77,28,5,87,27,36,63,83,36,98,95,13,42,99,73,87,31},{76,85,38,70,90,94,99,86,83,89,92,76,58,34,53,28,45,99,85,39,54,53,19,97,30,68},{34,2,67,96,87,61,54,37,24,17,37,39,58,81,58,63,71,90,98,55,36,23,63,93,30,29},{23,57,49,3,39,9,28,69,34,8,91,70,21,15,4,91,78,22,97,69,88,37,98,72,90,54},{73,72,74,84,26,21,31,30,87,54,3,31,84,31,92,88,79,17,65,2,44,2,91,67,43,46},{99,32,36,9,54,47,90,86,3,31,79,71,76,92,36,33,62,7,52,37,12,99,86,50,88,59},{46,92,31,31,34,28,77,31,61,34,88,15,93,65,6,22,70,71,53,70,35,87,59,92,74,75}},
	B = {{57,66,19,30,89,51,4,48,66,67,21,12,75,62,59,68,24,11,67,63,14},{66,43,33,17,80,64,3,83,31,80,61,35,99,37,98,63,8,22,72,54,56},{30,4,41,78,20,7,79,3,70,53,10,81,73,43,6,2,36,38,13,60,39},{62,13,44,42,68,61,54,39,53,52,41,37,52,85,60,93,36,73,4,55,21},{65,23,94,21,73,11,5,56,72,66,26,56,55,50,54,21,68,1,88,73,57},{55,96,26,69,19,35,85,18,60,74,7,22,6,82,54,37,25,9,23,25,28},{28,60,45,16,57,33,29,51,74,72,82,75,20,72,92,54,42,13,4,61,20},{58,87,86,29,32,24,1,53,90,21,18,26,26,50,42,77,86,97,16,3,34},{40,71,50,19,60,40,75,87,40,40,75,47,79,9,15,87,59,17,95,54,23},{51,68,33,20,79,67,12,68,55,14,14,95,6,92,2,49,93,37,59,58,82},{63,28,64,68,35,13,21,76,18,92,91,44,80,98,43,71,86,28,96,39,1},{99,23,8,31,42,38,14,42,29,28,78,85,87,26,58,86,27,8,47,90,22},{96,12,86,29,89,90,88,53,4,73,18,78,69,35,61,30,70,92,12,82,52},{88,14,12,8,63,59,5,86,57,69,26,28,42,91,28,87,6,67,66,84,31},{94,35,96,16,56,38,40,82,26,72,19,2,57,45,42,65,47,99,74,21,84},{96,23,54,98,94,81,44,59,47,65,40,25,34,59,54,21,21,30,34,83,92},{73,63,20,21,15,11,27,81,40,96,66,13,6,13,44,19,48,29,9,57,62},{4,69,59,31,5,40,65,76,8,43,46,6,38,96,54,8,85,63,19,23,90},{16,58,71,12,6,84,32,87,63,81,47,77,48,36,53,75,43,17,77,71,50},{27,73,14,20,67,1,23,94,97,85,3,24,59,76,14,64,34,30,78,37,44},{7,68,44,7,54,26,75,41,97,83,38,57,13,90,65,75,10,19,23,9,7},{87,65,13,76,59,63,29,49,68,92,49,38,26,54,6,22,37,98,37,48,9},{30,27,94,23,37,99,77,21,46,64,98,41,25,71,5,37,79,39,20,6,53},{1,83,8,31,95,48,70,44,44,30,19,6,46,30,21,87,51,94,68,27,35},{80,87,73,98,92,70,73,24,29,58,59,81,47,7,82,69,65,25,58,30,26},{26,17,83,34,81,3,47,85,50,46,22,87,11,62,3,63,95,84,24,38,93}},
	C = {{75874,63923,60835,52397,75485,53826,58174,74138,65492,82507,49038,57509,66186,74293,59473,76264,63066,60875,58718,66407,55389},{71066,66245,68328,51155,70264,56424,58503,75920,69856,82345,61450,66702,62501,76125,58359,75643,71290,55979,56048,63096,55431},{51633,57965,51187,35389,57063,41227,37966,58668,57818,61329,32504,43842,44472,50454,39110,54141,55195,44523,51422,46776,45970},{65046,66921,60016,35829,71067,58685,50193,82149,72854,83604,54823,54319,59543,75222,52622,81547,60419,61356,64468,60807,53975},{68904,66709,67229,54542,72723,56494,65289,71129,64764,83237,60215,60913,62045,71865,56126,72804,64711,51011,63869,58552,56547},{84511,78335,81106,61926,89332,71864,72543,84660,80038,94355,65983,70809,76593,87123,70620,87052,78975,74664,67189,73401,66792},{75533,70616,74985,54529,86653,76462,76710,84914,73090,89164,58396,71346,62480,88134,59338,83692,75293,69512,62252,72201,71772},{89016,77395,77251,57976,94855,71545,69383,90490,83137,97501,62366,77512,78669,90068,67853,94887,77830,70755,76884,79003,67254},{60505,57049,56849,40714,58863,61784,51632,63542,53858,72595,52567,52862,48940,68958,53429,61256,58088,57041,43303,53955,46946},{77164,77365,71686,52960,86051,75401,61558,84157,74905,92719,58713,63050,63599,80245,63937,80584,73538,64780,64468,68904,65406},{87529,91079,84004,58514,95684,73556,68146,103547,88130,103879,71777,78929,80313,100685,78914,99056,89812,74112,82618,83413,73538},{70901,65112,70034,49053,73341,63258,62219,80125,71779,87989,54885,58201,61470,81485,60010,74595,68196,64047,60572,69502,63610},{66072,66313,67089,51805,71542,58902,55355,75300,69430,85134,63628,62411,59882,68356,56978,73711,65766,50851,62245,59631,54930},{74018,59447,70445,46167,79921,68719,62223,75845,63512,81098,56139,59695,63663,67053,57710,73951,64064,60566,58053,66884,64337},{84933,69680,69711,54660,82526,66569,51807,79111,73927,91876,62715,66872,63461,78503,61834,78725,71820,64868,63975,70735,54765},{73455,72970,67978,51773,84651,65813,61024,87763,69379,93979,64424,65299,66941,79662,62100,78882,74273,67103,67297,68864,59694}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 10")
	end.

test_11() ->
	A = {{62,90,73,74,72,85,70,55,10,45,80,58,96,61,62,89,4,54,92,27,7,45,90,85,15,42},{51,46,15,35,30,88,32,85,83,71,71,13,39,31,27,20,84,37,33,88,3,74,25,90,48,18},{46,25,26,29,25,25,57,33,7,23,96,92,3,68,15,13,51,59,49,17,14,78,95,81,12,3},{83,39,95,65,62,48,98,13,98,56,77,5,12,54,11,95,2,46,64,86,43,93,53,91,3,90},{20,49,71,78,32,64,83,95,37,38,97,20,27,92,79,65,21,37,12,74,13,43,65,16,10,39}},
	B = {{51,20,40},{12,7,92},{65,31,38},{24,97,1},{49,71,34},{38,28,5},{75,84,16},{75,36,11},{38,4,97},{96,74,88},{12,90,72},{31,69,17},{87,69,82},{19,87,83},{5,35,83},{79,59,52},{63,77,98},{79,45,69},{13,30,93},{91,8,72},{1,28,1},{88,57,35},{68,68,75},{19,22,68},{40,26,98},{5,14,16}},
	C = {{71889,78030,83463},{64066,55239,74238},{48520,58920,57848},{71980,67237,76733},{62162,67130,66049}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 11")
	end.

test_12() ->
	A = {{67,3,55,78,91,62,40,7,31,17,11,92,78,69,88,92,37,75,34},{47,90,77,53,9,45,12,10,82,57,39,87,47,64,40,33,1,17,47},{19,3,75,3,58,11,69,84,34,1,79,85,65,91,2,38,60,93,53},{38,94,12,12,29,79,86,54,20,35,49,74,23,86,23,39,54,89,21}},
	B = {{54,99,56},{95,83,53},{93,59,79},{45,7,36},{76,97,36},{38,74,45},{35,37,58},{94,82,84},{7,27,73},{23,68,62},{66,20,39},{3,21,14},{66,35,9},{71,84,86},{90,72,51},{48,15,88},{81,76,89},{39,23,38},{18,96,20}},
	C = {{54385,54330,51115},{43528,46576,44083},{51484,49228,49503},{50120,52516,50006}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 12")
	end.

test_13() ->
	A = {{53,47,66,44,99,76},{78,37,30,53,78,64},{55,46,81,60,30,6},{62,36,49,8,17,46},{28,63,35,50,46,66},{49,96,44,74,23,65},{65,49,15,75,52,57},{74,16,26,72,13,50},{4,55,34,9,77,33},{76,80,14,21,62,69},{67,13,72,43,59,23}},
	B = {{95,94,8,7,24,16,99,89,14,62,88,15,1,50},{77,43,62,45,52,16,93,1,15,39,38,84,70,77},{94,43,16,22,39,67,23,83,51,26,18,17,4,86},{74,9,93,76,80,72,93,77,60,63,50,84,86,69},{28,94,15,97,43,50,46,88,35,46,32,54,9,22},{82,68,80,81,92,55,19,51,47,99,57,93,74,72}},
	C = {{27118,24711,16051,23041,21059,18320,21226,26218,14490,21685,17338,21975,13906,22631},{24433,22374,14617,19649,18448,15086,21586,23678,12095,20322,17604,19404,12784,19310},{22153,14399,11098,12193,13513,13193,18660,19230,10523,13064,12348,13284,9473,18490},{18108,14281,8191,9115,10874,8807,13013,14079,7144,12362,11272,10655,7023,14324},{21201,16108,15310,17409,17363,13331,17456,16724,10834,16903,13222,19129,14176,18475},{27633,17874,19475,18751,20773,15321,23966,19146,12670,20081,16893,23050,18326,23918},{23038,18301,16113,18351,18173,13964,21787,20337,11409,19091,16515,19755,14691,18736},{20498,14032,12891,12593,14541,11766,17656,17998,9727,15972,14454,14296,11307,16022},{13339,13766,8618,14077,11349,9535,11299,12385,7401,10653,7849,13241,7899,12050},{23644,21895,14195,17639,17224,11841,21402,18598,9651,19202,16947,19627,13202,18945},{20854,17450,9218,13492,13185,13415,16648,21628,10531,14233,13035,12258,7196,16464}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 13")
	end.

test_14() ->
	A = {{54,91,92,89,68,71,85,54,18,92,79,42,52,29,88,40,4,41,56,12,5,11,34,59,9,33,43},{1,2,14,63,96,43,3,76,98,8,60,84,56,5,12,67,99,67,3,94,45,93,15,6,12,8,59},{76,52,33,16,97,43,59,34,90,56,40,24,50,28,1,37,48,51,11,85,93,28,31,99,30,80,3},{76,7,48,34,27,9,98,80,71,2,85,93,88,48,16,36,38,40,8,25,45,38,75,2,59,20,9},{1,11,26,63,43,95,22,6,95,10,90,15,83,76,54,6,67,31,48,29,9,18,22,84,60,8,77},{23,47,69,83,58,93,51,32,94,45,35,66,86,3,37,66,76,33,24,16,69,68,32,57,27,76,95},{92,5,49,3,58,58,3,1,10,79,28,31,51,10,66,15,63,6,44,21,59,13,86,74,98,22,11},{42,61,14,39,86,52,16,2,27,9,48,71,62,22,13,72,40,46,53,79,13,39,5,7,26,52,4},{66,30,68,94,46,86,65,88,28,19,86,88,27,17,82,22,13,40,13,65,31,49,57,79,49,89,5},{9,16,25,17,62,29,87,55,34,39,66,72,20,73,54,65,99,79,16,62,76,96,57,88,48,22,51},{21,22,19,23,69,92,30,77,35,5,12,29,78,38,36,89,75,87,39,9,22,28,63,24,53,39,72},{98,97,55,12,37,49,2,8,86,37,71,68,20,5,30,51,70,26,27,16,12,40,58,64,17,68,3},{18,46,35,70,91,4,41,63,42,36,21,33,61,94,85,12,77,22,35,14,66,57,4,12,61,68,48},{21,25,66,62,73,57,43,64,87,50,72,91,64,80,38,42,80,75,3,54,73,70,97,97,40,52,70},{2,88,64,70,59,77,73,6,94,7,62,64,86,65,70,4,37,63,93,16,68,25,34,15,8,35,17},{82,3,46,58,21,41,47,34,94,97,48,82,99,87,21,41,9,19,52,23,80,68,62,57,30,10,69},{19,25,45,64,95,68,53,67,69,38,19,83,88,35,41,99,42,66,82,80,87,59,41,81,68,44,87}},
	B = {{84,25,72,66,85,14,98,79,14,51,64,32,61,22,96,96,37,73,93,80,6,62,3},{61,50,85,73,6,6,65,76,78,86,24,80,58,1,62,10,43,46,25,69,10,82,95},{36,42,91,16,48,68,66,84,70,51,93,92,4,94,41,48,29,93,79,27,53,64,57},{53,59,27,37,75,88,46,49,54,2,78,36,35,4,5,51,44,75,37,33,95,71,71},{75,67,87,54,18,95,49,86,51,23,26,38,68,92,67,47,97,56,8,29,87,75,95},{64,41,51,65,17,49,38,36,50,28,38,61,80,60,58,52,28,58,2,8,91,74,36},{75,83,61,13,73,4,23,49,27,95,61,8,12,91,9,63,10,72,93,58,63,22,43},{25,82,18,10,53,8,18,15,53,76,63,30,23,55,74,1,73,57,17,26,30,48,13},{5,87,25,5,48,75,37,48,44,14,12,94,4,60,90,23,1,38,79,95,4,61,5},{43,41,5,59,97,90,91,71,18,97,61,72,43,5,44,41,96,32,1,98,30,18,54},{86,54,99,18,32,14,87,16,48,4,76,23,80,45,63,62,62,91,97,8,14,71,71},{8,51,77,99,46,38,88,60,92,2,11,34,88,99,43,9,22,74,36,7,38,78,61},{86,81,54,97,26,76,91,26,66,35,99,28,78,61,61,1,15,55,90,99,66,61,35},{31,89,70,74,92,28,13,74,12,11,9,91,2,75,30,92,58,12,84,66,24,4,51},{43,21,57,69,87,36,40,85,9,19,42,33,33,89,87,35,53,52,91,68,54,71,60},{46,45,4,29,46,15,74,57,88,49,59,42,20,80,51,99,56,66,9,84,41,20,25},{87,59,5,40,14,56,66,82,46,56,28,54,10,42,95,92,59,61,27,73,97,29,28},{71,74,95,48,98,89,71,2,72,37,56,74,13,54,80,50,86,71,91,13,2,72,79},{8,67,15,87,93,26,54,76,42,61,89,7,76,89,53,62,8,73,36,41,24,42,92},{10,47,50,57,80,22,59,91,5,74,34,93,16,18,56,69,72,5,87,99,89,7,57},{11,28,48,53,60,70,53,68,87,45,49,30,49,35,58,69,95,65,9,97,85,30,81},{6,74,22,33,43,95,66,15,63,67,44,7,57,87,27,2,78,5,87,51,7,37,2},{16,30,21,30,15,26,7,23,74,9,22,20,56,35,94,35,77,2,74,12,29,76,73},{74,22,11,85,72,45,53,29,3,91,73,23,11,60,75,19,99,45,25,57,34,79,83},{14,76,96,89,53,35,69,25,10,76,48,71,79,34,65,68,70,31,31,12,67,17,13},{72,97,59,83,88,24,90,13,27,4,81,18,63,38,57,5,48,98,1,72,10,34,26},{4,83,90,80,74,27,25,46,56,36,86,67,97,99,9,45,11,14,16,48,74,92,7}},
	C = {{69188,74464,73952,71751,77825,59760,77455,72476,62229,61574,78337,61267,61890,76397,73028,58676,67462,79353,66432,66626,60462,78345,74820},{48412,74459,57663,56137,58319,64807,68358,58648,65047,45785,55973,58035,52412,71451,69213,52212,64893,59609,57890,62142,61902,63041,52065},{64237,73926,65563,68904,72665,62160,77792,67610,56624,62070,65498,61770,52697,66040,80982,59675,75973,69820,60508,78811,58374,64424,65658},{53020,72542,65715,56367,62093,48811,67193,54265,59599,46909,60372,49905,52853,69444,69395,53923,56186,65674,72370,57858,49746,60149,50842},{54195,70314,61330,65236,61695,56053,60460,55609,47813,43185,61255,58137,53313,68991,66282,54188,54132,57635,60398,57266,58882,64998,55287},{66102,87308,72404,78245,76225,74357,84528,71871,75960,60085,80424,67225,69297,86186,79968,60817,69973,80628,63042,79450,73252,81865,65910},{49643,51077,52903,64930,57775,50327,64815,58083,42731,49761,55880,46709,53572,55217,71011,53624,62921,54046,48581,55547,52556,55107,52953},{49010,59733,55441,58923,51892,45993,65083,54421,50591,40287,50119,46695,50324,56260,58006,47541,50902,56528,47931,53443,47207,51600,52404},{66509,77897,75807,73714,80022,59620,80622,66008,62384,56905,75798,58653,63993,77393,81063,57919,75598,81394,71615,63779,63841,77936,69663},{61599,82687,70324,72687,79683,65542,76768,69755,66606,66184,68258,63043,56940,86820,80944,68331,84708,69472,72183,73204,66587,68788,69596},{55565,73609,60047,64829,60953,54317,63175,54177,61650,48974,62279,54827,55699,73407,71869,55538,61381,61899,51816,56899,58490,64250,52856},{56702,60115,57875,60486,55918,48225,72835,59157,55031,47178,55069,53164,52151,58318,75107,49442,57340,64552,55362,60608,39953,65207,54630},{53857,77599,65180,68509,70366,60253,66407,66243,54337,50139,62030,56471,53634,71356,67009,54486,65754,63836,57042,68205,60438,59283,58304},{71340,96561,83926,86014,89119,80999,89760,78890,80546,66250,81901,78339,70348,95648,95627,71577,92207,82693,81923,83282,76137,88795,80784},{59596,78753,73031,71011,69775,63424,71167,69567,67117,48626,66530,61334,59440,78372,73046,56002,57290,75155,70611,66930,59885,73484,74256},{54492,80173,66731,76433,82372,68204,78912,70142,65549,58279,74062,63450,64701,80001,74942,62625,68209,67941,72847,79205,58954,70952,62364},{66732,97903,81500,92927,93264,79166,91980,83292,81457,73547,88468,75206,76293,100357,91340,74141,86669,85005,72652,87748,82867,85244,80785}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 14")
	end.

test_15() ->
	A = {{65,97,48,84,27,1,11,81},{69,96,88,37,96,37,42,55},{80,22,66,24,20,63,23,52},{98,71,1,90,45,74,13,40},{40,13,90,55,31,39,23,59},{91,57,63,57,2,37,26,49},{67,56,52,54,50,64,39,89},{82,96,69,41,7,89,35,72},{79,25,69,73,57,25,38,74},{21,13,32,77,99,66,16,96},{89,74,2,9,55,92,83,23},{90,61,59,38,39,53,48,23},{85,8,64,27,25,7,84,28},{75,44,2,86,16,16,64,86},{21,2,45,73,95,33,26,43},{72,59,15,19,44,49,91,12},{13,2,58,79,82,10,83,36},{87,24,31,60,93,66,53,25},{7,38,63,88,54,72,41,96},{56,60,13,67,32,88,31,2},{68,77,40,52,1,77,5,64},{66,84,93,82,56,15,24,35}},
	B = {{49,32,8,55,94,95,83,17,93,77,97,48,95,23,85,48,9,77},{90,68,2,64,92,88,14,42,10,82,23,59,60,32,10,71,9,91},{86,14,17,93,10,31,41,89,65,87,20,31,62,46,66,14,57,41},{99,59,9,64,75,76,12,80,90,9,42,87,74,77,78,97,76,76},{94,84,19,88,77,19,2,52,94,46,49,49,51,37,42,19,90,93},{67,83,40,86,20,39,75,52,42,89,46,61,9,12,29,84,72,26},{1,49,95,82,28,36,57,49,5,78,30,75,21,53,73,79,42,57},{68,62,60,51,62,37,73,20,96,18,5,31,88,22,95,51,64,52}},
	C = {{32483,22216,8744,27118,29243,26528,16398,19786,28106,21538,15128,22359,29932,16651,25876,24424,18726,29560},{38537,28754,13167,38370,31691,27357,20499,26071,32495,33149,20156,26739,31460,18988,28915,26004,25901,35613},{23612,17656,10227,25198,18672,18995,19814,16561,23743,23179,15422,17432,21434,11287,22534,18795,17134,20205},{32109,26327,9203,29217,30293,28118,19550,19562,29232,24655,21138,25688,27046,15624,24911,28627,20902,29818},{25877,17295,10245,25899,17450,17035,16457,19583,24981,20224,12587,17714,21837,13843,23477,18129,20127,20409},{26675,18584,9354,26149,23363,24176,19456,18390,24834,23970,16617,20467,25482,14178,24619,22525,16327,24287},{33220,26807,14573,33202,27760,25152,22745,22058,31158,27401,18104,24868,28722,16526,29157,27104,24617,29656},{34203,26691,13728,34507,28068,29021,25411,22994,28244,32827,19111,25935,29091,16055,27952,29741,21767,29699},{31385,22814,12645,31090,26432,23556,20169,21980,32354,23936,18137,23219,29127,17463,30136,23573,23679,28700},{32846,27077,13232,30487,24608,18566,17229,21195,32467,19564,15057,22519,24884,15715,26393,23433,28460,26791},{25065,26188,14965,31124,25694,24185,22033,17690,21614,30782,20285,24728,21085,13244,22361,26930,18797,27787},{27565,21549,10988,29872,24345,24022,19667,19979,24575,28076,18813,22511,24178,14791,23982,23321,18424,26725},{17869,14286,12442,23985,17544,17623,17522,15977,20327,21841,15050,17705,20087,13311,23680,17290,14611,20700},{24809,21634,13680,25049,26244,24009,19113,16701,26037,19031,15809,22966,26125,15915,27633,26184,18505,26421},{26397,20404,9769,25663,19452,14733,11778,19076,26042,16462,13217,18823,19779,14473,21399,17685,23090,22603},{20335,20613,13281,26507,21431,20408,17471,16092,17772,25557,16639,21397,18368,13000,20234,22451,15556,24149},{24535,20042,13808,28011,18981,15481,12706,21358,24108,18706,12933,21382,19980,17459,24328,20032,23335,24054},{29946,25827,12753,32525,26711,23072,19530,21411,29925,26640,21439,25106,24717,16407,26425,24907,24274,29400},{34362,27355,15556,33510,24082,21512,19605,24843,30567,23746,14177,25276,26074,18198,28466,27661,28594,27491},{24966,21642,8585,25445,21155,21325,15402,17788,19734,22724,16442,21783,17935,12892,17793,24180,17523,22532},{28460,21728,9260,26100,23501,23998,19720,17691,23871,23939,15412,20676,23889,12506,21966,24481,17477,23543},{35583,23259,9059,32874,28466,26585,16611,25055,29777,27212,17967,24685,29719,19092,26848,24393,22251,31557}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 15")
	end.

test_16() ->
	A = {{15,68,72,84,28,75,13,86,12,76,9,31,3,59,90,48,85,47},{48,71,3,77,45,60,20,67,67,47,40,66,83,73,79,96,50,24},{38,71,65,1,70,34,48,93,87,90,34,29,47,34,83,67,91,80},{76,54,35,90,81,76,90,16,96,80,31,42,56,42,58,9,59,45},{69,37,97,9,33,74,98,71,88,73,37,57,59,63,65,33,7,78}},
	B = {{55,19,95,90,56,60,74,49,59,87,30,17,7,75,4,88,6,67,65},{70,77,42,65,66,65,70,97,94,42,7,21,79,53,39,4,49,19,70},{61,75,60,55,39,43,63,35,86,80,77,29,54,95,35,69,63,57,51},{46,95,33,81,1,12,46,53,41,78,56,82,63,11,78,18,58,79,90},{59,67,30,6,21,65,40,47,39,4,29,36,2,48,6,79,81,28,99},{33,47,69,50,12,63,40,35,37,93,29,78,65,90,42,56,94,57,97},{18,34,15,14,45,21,54,85,54,42,3,67,9,15,80,64,22,32,92},{89,98,14,89,15,3,36,6,50,48,27,99,25,80,12,50,67,49,27},{98,6,21,34,45,65,28,71,43,99,44,60,66,34,15,68,26,16,23},{68,63,72,53,54,50,89,49,89,77,88,8,9,83,35,97,95,63,28},{59,82,3,42,79,54,65,26,20,20,51,77,7,4,45,49,96,92,95},{8,34,83,97,83,78,9,88,72,94,97,74,2,93,23,66,86,28,23},{48,67,53,81,70,32,8,71,36,27,87,40,99,7,70,91,64,49,60},{87,17,31,20,60,16,53,77,59,27,56,21,68,61,27,18,49,40,3},{52,32,33,79,68,79,78,33,53,12,65,7,51,89,50,32,72,99,73},{57,7,50,41,74,70,41,21,76,48,31,94,11,35,23,16,72,46,91},{27,31,55,97,37,45,87,43,24,39,48,44,49,74,20,1,42,17,89},{50,53,30,70,82,90,61,5,40,22,54,60,5,96,28,43,46,77,72}},
	C = {{50317,49370,40554,58145,39932,43549,52553,40027,51401,47775,44725,44278,37283,61409,31555,37380,58009,48091,56748},{57408,48711,44919,62591,51813,51082,49643,52057,54880,52722,50036,53411,42896,55621,35845,47090,63052,50905,63152},{62154,52072,44848,62947,54510,56524,59136,48632,58869,52145,50817,50680,38197,67189,32689,53661,63559,51341,65355},{55293,50589,46390,58615,47676,52217,55111,56483,54251,57937,49102,48844,40600,57286,38927,56579,58982,51139,68097},{59078,50054,46332,58878,54137,53392,53829,52111,59334,58635,51785,51215,38118,65546,36829,60760,60880,53819,60820}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 16")
	end.

test_17() ->
	A = {{26,36,86,21,87},{1,4,88,10,72},{99,86,58,22,73},{19,54,88,69,79},{20,97,91,27,75},{34,37,64,55,65},{72,90,64,15,23},{41,69,34,31,41},{68,93,6,35,52},{72,55,47,81,44},{21,91,14,53,61},{58,94,12,72,81},{51,79,70,49,95},{51,2,98,87,46}},
	B = {{75,87,24,66,67,93,14,77,40,11,11,75,57,83,78,82,25},{48,15,88,1,74,15,36,33,65,55,15,80,49,87,34,95,72},{70,93,35,47,13,43,97,81,98,16,74,21,40,66,51,82,58},{13,90,76,19,56,72,10,70,49,52,49,2,52,96,89,89,66},{61,30,43,71,21,46,87,91,25,20,56,19,81,24,36,31,26}},
	C = {{15278,15300,12139,12370,8527,12170,17781,19543,15012,6474,13091,8331,14825,15070,12639,17170,11878},{10949,11391,7312,9508,3579,7969,15058,14589,11214,3599,11105,3631,10125,8927,8184,10800,7949},{20352,19467,16785,14947,16516,17933,16679,23342,18137,9351,11837,16954,19234,23391,18190,25265,15381},{15893,19227,16929,12364,11936,14963,18309,22392,18250,9755,15336,9232,17236,20603,16791,22494,16075},{17452,16338,17478,11532,12788,12622,19394,20827,19221,9915,13932,12650,17012,20497,14602,23045,16494},{13486,16365,13287,10949,10293,13419,14221,18788,14357,7593,12000,8199,14436,17105,14409,18461,12546},{15798,15606,14017,9768,13639,12936,12607,16841,16312,8006,8901,14411,13717,20022,14103,21750,13580},{11671,11784,12365,7873,10892,10428,10233,14089,12001,7222,7817,10150,12011,15610,11513,16735,11077},{13611,12579,14922,9220,14568,12889,9756,15973,12368,8819,7214,13724,14705,18739,13759,19630,12406},{15067,20070,16261,11679,14965,17398,12185,20840,16130,9661,11528,11785,16455,22695,18676,23556,14976},{11333,11094,15653,7473,12572,10542,10765,15015,12249,9436,8645,10414,13913,17136,12359,18123,12973},{15579,16482,19039,11605,16731,16230,13127,20951,15159,11364,11000,13805,18697,22640,17656,23589,15772},{18949,19392,18435,14411,14912,16836,19103,24279,18811,10474,14647,13518,19821,22710,18015,24733,16727},{14718,22791,13420,12893,10677,17367,15164,22207,17187,7683,14682,7091,15175,20331,18443,21577,14041}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 17")
	end.

test_18() ->
	A = {{47},{16},{60},{35},{17},{86},{75},{57},{52},{68},{30},{49},{64},{97},{48},{13},{35}},
	B = {{13,40,80,89,55,34,52,31,19,66,30,96,19,97,17,75,13,34,34,54,89,26,87,68,35}},
	C = {{611,1880,3760,4183,2585,1598,2444,1457,893,3102,1410,4512,893,4559,799,3525,611,1598,1598,2538,4183,1222,4089,3196,1645},{208,640,1280,1424,880,544,832,496,304,1056,480,1536,304,1552,272,1200,208,544,544,864,1424,416,1392,1088,560},{780,2400,4800,5340,3300,2040,3120,1860,1140,3960,1800,5760,1140,5820,1020,4500,780,2040,2040,3240,5340,1560,5220,4080,2100},{455,1400,2800,3115,1925,1190,1820,1085,665,2310,1050,3360,665,3395,595,2625,455,1190,1190,1890,3115,910,3045,2380,1225},{221,680,1360,1513,935,578,884,527,323,1122,510,1632,323,1649,289,1275,221,578,578,918,1513,442,1479,1156,595},{1118,3440,6880,7654,4730,2924,4472,2666,1634,5676,2580,8256,1634,8342,1462,6450,1118,2924,2924,4644,7654,2236,7482,5848,3010},{975,3000,6000,6675,4125,2550,3900,2325,1425,4950,2250,7200,1425,7275,1275,5625,975,2550,2550,4050,6675,1950,6525,5100,2625},{741,2280,4560,5073,3135,1938,2964,1767,1083,3762,1710,5472,1083,5529,969,4275,741,1938,1938,3078,5073,1482,4959,3876,1995},{676,2080,4160,4628,2860,1768,2704,1612,988,3432,1560,4992,988,5044,884,3900,676,1768,1768,2808,4628,1352,4524,3536,1820},{884,2720,5440,6052,3740,2312,3536,2108,1292,4488,2040,6528,1292,6596,1156,5100,884,2312,2312,3672,6052,1768,5916,4624,2380},{390,1200,2400,2670,1650,1020,1560,930,570,1980,900,2880,570,2910,510,2250,390,1020,1020,1620,2670,780,2610,2040,1050},{637,1960,3920,4361,2695,1666,2548,1519,931,3234,1470,4704,931,4753,833,3675,637,1666,1666,2646,4361,1274,4263,3332,1715},{832,2560,5120,5696,3520,2176,3328,1984,1216,4224,1920,6144,1216,6208,1088,4800,832,2176,2176,3456,5696,1664,5568,4352,2240},{1261,3880,7760,8633,5335,3298,5044,3007,1843,6402,2910,9312,1843,9409,1649,7275,1261,3298,3298,5238,8633,2522,8439,6596,3395},{624,1920,3840,4272,2640,1632,2496,1488,912,3168,1440,4608,912,4656,816,3600,624,1632,1632,2592,4272,1248,4176,3264,1680},{169,520,1040,1157,715,442,676,403,247,858,390,1248,247,1261,221,975,169,442,442,702,1157,338,1131,884,455},{455,1400,2800,3115,1925,1190,1820,1085,665,2310,1050,3360,665,3395,595,2625,455,1190,1190,1890,3115,910,3045,2380,1225}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 18")
	end.

test_19() ->
	A = {{53,25,98,80,55,98,27,40,85,15,74,15,46,35,14,36,44,90,80,11},{82,51,65,92,51,73,84,91,71,12,89,39,25,37,25,41,4,9,31,17},{40,46,56,9,82,68,42,68,85,5,26,28,13,87,24,58,85,93,82,30},{26,69,32,56,31,51,81,3,65,73,34,70,68,6,99,45,51,65,84,97}},
	B = {{65,11,77,65,11,8,3,81,22,94,16,31,46,69,16,25,94,59,60,56,72,98,48,91,2,14,77,8},{64,72,13,43,62,82,8,5,86,32,10,62,27,82,71,55,43,17,53,89,16,68,38,28,14,73,47,62},{3,95,50,94,34,31,66,45,11,74,8,32,63,13,54,77,19,20,16,60,9,28,26,26,73,93,85,41},{53,91,8,4,48,16,83,51,45,41,23,23,34,46,30,25,1,37,20,76,16,26,95,6,24,1,87,81},{65,67,49,79,82,68,20,67,54,53,24,21,3,9,98,92,28,91,99,47,2,75,26,85,76,64,35,55},{65,49,79,66,99,61,63,10,72,56,46,54,73,9,70,20,92,77,16,48,81,9,43,34,3,70,35,55},{11,92,5,64,40,32,34,49,49,73,33,78,39,27,98,69,56,25,72,52,38,5,19,4,77,58,83,11},{8,44,27,88,89,37,29,70,28,50,91,77,57,14,92,2,10,14,96,78,71,77,4,63,69,81,36,60},{84,4,53,78,44,60,40,70,33,63,69,47,79,78,28,36,89,11,94,6,24,54,36,50,35,85,67,62},{59,97,72,94,92,2,37,92,37,80,93,59,20,59,53,63,95,25,91,11,86,35,16,33,62,69,55,5},{24,56,25,22,89,5,30,98,48,26,33,33,82,1,82,67,10,37,59,15,86,38,34,37,7,80,26,39},{35,92,12,56,49,22,40,31,7,67,83,28,41,91,36,32,53,87,22,95,9,45,63,88,36,75,60,4},{53,64,51,22,56,77,48,4,30,79,65,82,72,98,47,84,93,42,6,40,80,49,69,66,91,12,97,26},{41,88,52,85,34,1,35,40,85,9,82,18,35,99,17,39,19,93,29,25,84,84,15,22,5,93,41,61},{1,39,23,5,29,89,64,29,42,14,28,25,6,17,82,92,20,83,58,49,63,43,67,18,1,76,62,33},{14,69,94,88,37,73,52,1,56,94,53,24,2,53,38,58,61,54,9,73,38,62,49,39,42,35,76,10},{6,4,10,91,64,25,60,74,41,8,95,83,63,6,58,38,32,7,98,38,83,39,60,64,74,38,46,58},{97,27,74,49,92,12,73,58,38,73,67,37,40,47,54,38,24,46,45,62,11,5,15,18,71,85,76,50},{13,66,32,34,18,56,9,43,87,97,79,62,78,17,82,69,40,29,31,3,26,73,15,6,64,86,36,58},{13,31,51,48,18,5,22,97,20,44,24,67,62,34,12,27,30,42,14,12,85,8,61,80,58,71,69,77}},
	C = {{45035,56304,47306,59508,58836,38850,45967,51752,46843,60867,49982,45839,54344,38628,58051,50166,45509,43134,47944,45829,44648,44664,38982,39247,45097,65366,60930,48567},{38512,59359,39619,57143,54466,37097,38985,51298,43835,56711,43654,44597,48474,39722,58117,46126,43525,42647,50417,50138,46109,47566,38801,41166,38041,60399,58664,43159},{42063,53049,46914,68181,57242,40853,41248,51673,50371,57013,57166,48143,49307,41273,59451,49307,44191,46025,55259,46306,46142,50650,34100,43485,47824,71255,57019,49073},{41991,63591,44614,57551,56520,46014,46030,54274,48782,63998,55125,55378,50547,48605,62188,59720,53596,48040,51767,48867,52304,43624,48478,44280,50808,69507,69395,46316}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 19")
	end.

test_20() ->
	A = {{20,36,20,77,29,85,12,82,97,47,2,5,40,62,22,5,63,14,1,31,1,91}},
	B = {{47,24,51,99,16,29,75,75,48,41,65,57,76,2,20,20,40},{83,44,54,61,79,91,26,16,44,47,25,37,83,47,51,8,85},{60,74,31,52,42,60,54,5,85,47,87,97,29,47,10,66,54},{48,27,98,37,89,38,28,45,61,72,32,29,32,25,48,91,51},{2,32,91,83,17,18,41,49,32,93,41,40,29,12,8,8,47},{22,24,68,11,46,77,71,55,90,10,25,32,46,26,54,43,49},{42,91,56,77,56,96,62,32,16,9,14,81,28,55,26,64,16},{53,48,82,3,9,16,94,15,18,23,15,53,73,19,89,32,10},{44,31,9,56,22,84,53,73,46,56,10,31,36,81,94,58,22},{75,69,5,59,40,17,56,27,28,23,89,63,50,62,36,21,17},{66,88,91,13,7,63,80,61,87,70,97,49,24,25,95,44,69},{11,48,86,67,46,38,24,37,2,85,63,10,35,36,51,80,61},{60,87,47,41,63,3,15,80,6,56,56,77,38,8,16,77,99},{64,74,45,54,7,25,25,2,97,13,56,38,37,66,3,45,24},{31,41,27,46,5,25,50,83,68,45,35,53,98,93,98,98,53},{67,92,5,72,86,10,10,26,21,47,65,89,33,85,73,93,40},{9,67,59,11,46,41,72,61,9,43,29,75,11,35,38,48,66},{86,53,43,63,88,97,42,7,19,21,57,58,81,29,45,83,89},{76,53,39,88,14,70,23,30,41,67,93,31,62,30,11,5,43},{85,11,42,75,52,36,90,67,56,76,58,32,46,31,15,40,49},{44,55,38,27,11,9,44,11,68,38,59,64,35,50,39,54,18},{74,97,8,9,49,77,80,70,32,2,1,3,71,41,22,99,76}},
	C = {{42227,43954,40380,32337,34648,41189,47962,39717,38594,31532,28251,35903,40636,34640,38707,46380,39497}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 20")
	end.

test_21() ->
	A = {{19,87,43,44,44,93,26,55,39,27,68,17,63,89,17,21,78,35,64,33,30,24,13,36,65,9,5,6},{78,46,31,1,22,99,49,43,97,96,57,22,61,50,87,92,91,12,9,13,64,49,16,28,82,40,85,98},{83,81,88,16,18,5,24,79,14,54,5,67,54,37,39,46,80,69,9,20,3,90,10,45,83,54,37,69},{20,81,77,80,33,64,60,94,63,75,39,45,58,80,40,64,80,15,14,37,49,75,3,9,6,44,43,43},{40,10,9,37,79,99,34,93,66,20,99,68,99,73,89,45,15,65,23,42,97,60,98,39,60,72,63,91},{14,28,4,4,68,53,52,56,13,89,75,82,60,64,58,96,84,59,54,17,64,44,86,30,65,26,38,10},{44,63,46,10,65,40,40,41,20,74,59,90,82,77,54,73,38,65,3,11,86,25,27,97,6,54,9,29},{68,93,51,82,29,82,25,20,96,45,55,41,71,77,35,66,30,16,19,85,52,64,55,27,19,48,11,32},{23,29,25,63,15,58,7,22,61,86,52,88,27,32,94,14,8,97,25,96,39,46,47,88,71,28,20,16},{8,45,89,41,41,40,30,29,33,85,96,57,41,40,77,29,4,11,75,9,38,84,98,16,59,32,25,1},{68,92,61,56,17,50,18,61,51,32,22,13,43,1,22,36,20,8,28,86,73,7,19,53,44,69,40,2},{4,97,25,60,76,97,12,53,76,36,51,34,56,54,62,25,12,71,56,86,78,96,54,20,27,28,9,15},{48,45,25,29,30,32,43,57,66,15,10,80,23,64,46,81,41,82,28,51,18,62,1,64,76,70,41,57},{28,33,51,32,43,48,24,45,38,78,49,19,61,17,61,43,62,37,48,95,36,15,48,68,43,34,15,90},{39,68,16,9,29,92,33,31,51,33,20,76,95,28,73,71,37,61,75,87,31,64,95,69,24,38,31,37},{5,87,44,72,99,68,54,81,80,50,70,65,76,88,3,82,40,91,32,78,35,21,68,32,6,83,4,31},{72,15,7,95,49,35,80,7,7,32,35,35,36,77,82,24,90,40,40,70,94,11,12,50,79,94,48,25},{80,75,27,47,28,67,17,89,50,75,97,74,73,80,5,80,21,1,41,39,52,90,60,55,25,61,78,78},{18,50,61,35,70,45,94,6,16,69,13,14,81,37,56,19,98,58,89,92,40,57,20,24,49,81,12,58},{86,79,62,94,65,84,96,41,58,41,13,66,47,73,96,6,48,67,90,22,18,41,75,73,52,42,21,76},{20,70,91,74,58,60,4,31,55,24,85,83,56,20,72,36,30,81,3,43,54,91,32,38,77,17,86,67},{84,5,87,35,85,87,28,33,86,6,49,31,74,3,26,95,59,99,59,91,40,8,53,43,12,47,47,11},{67,44,1,16,26,27,90,16,13,11,35,11,1,31,2,68,2,93,86,56,21,95,46,1,63,17,90,65},{11,97,36,33,15,59,44,87,23,73,2,29,35,78,72,16,56,41,9,60,35,31,91,89,35,56,82,17},{85,67,56,44,41,57,80,48,72,92,75,1,27,78,94,94,62,60,95,54,77,53,26,75,45,10,46,89},{88,21,25,86,75,47,66,45,12,43,10,52,82,20,45,74,35,73,96,43,68,62,15,24,95,33,3,17},{9,23,3,67,52,26,69,49,95,58,98,10,5,45,3,62,51,99,74,45,73,10,56,25,92,73,45,28},{86,3,89,48,39,76,15,15,94,86,83,97,10,9,28,26,61,37,89,26,74,37,83,90,23,67,2,32},{24,5,62,58,85,29,71,25,48,33,46,34,11,84,47,30,20,78,45,63,41,75,59,21,33,10,75,57}},
	B = {{71,58,19,82,94,9,10,56,7,20,30,11,42},{84,57,73,25,9,15,2,79,68,51,18,29,32},{25,59,15,40,14,28,62,61,61,29,1,88,4},{16,87,47,91,75,70,52,63,83,11,99,54,43},{62,48,45,19,36,14,62,65,43,77,96,42,92},{32,48,86,66,57,16,60,66,83,47,92,40,26},{24,4,62,71,11,14,48,93,4,25,61,64,38},{84,67,37,76,78,4,92,23,5,93,94,53,84},{87,81,40,76,4,61,95,15,2,7,14,61,11},{63,33,78,30,27,80,76,27,84,36,26,22,67},{39,51,18,58,37,36,64,39,98,31,62,80,67},{33,52,19,39,87,20,89,6,30,74,12,76,52},{94,78,3,70,62,95,31,74,28,18,96,47,28},{65,49,98,35,42,77,74,65,99,13,36,87,79},{86,98,62,8,22,55,12,21,8,47,54,15,35},{70,87,64,79,37,5,23,43,13,31,26,90,15},{36,80,82,30,17,73,81,75,4,4,39,88,60},{68,74,2,87,36,78,37,7,64,70,43,95,77},{58,49,67,32,92,57,55,33,18,19,86,2,51},{79,38,48,73,45,21,68,49,93,58,42,4,8},{49,66,26,5,46,76,98,64,76,46,7,18,81},{95,72,50,16,62,91,23,70,65,50,33,25,1},{37,23,48,41,20,27,67,12,3,10,27,91,16},{66,32,29,63,54,14,89,25,93,6,67,57,39},{1,88,3,22,40,94,87,31,17,20,76,55,7},{52,46,1,98,75,49,47,86,50,17,91,28,62},{77,39,5,87,11,62,18,33,7,42,13,23,67},{84,85,16,27,26,24,55,76,64,44,47,13,60}},
	C = {{63866,69179,55883,56244,50124,54742,68224,59678,58792,39169,63763,60437,51780},{92666,95581,65348,75276,57755,71861,83417,75911,61741,50659,69288,69842,65689},{77969,81163,46714,63846,56803,59449,66918,63614,53451,48611,58153,63862,54061},{83726,84790,65610,71906,57788,63949,78145,74896,66493,51499,66734,69806,62670},{101717,101819,62402,86677,75784,77226,98087,78557,76263,65038,90314,81890,80122},{78423,80647,62907,65420,59458,66000,82233,62046,58177,51845,68659,75955,67047},{80344,76681,54264,65802,58837,57329,76595,64167,68119,49953,62606,70457,66102},{84403,83780,63111,74543,60585,62041,75966,72201,71338,45958,65517,67058,53822},{74000,76210,50350,65525,57049,62490,76764,49253,68092,48257,61876,61299,52896},{67373,70560,52864,54181,52363,60327,69760,54814,57600,42807,58947,62211,49645},{64451,63773,41857,61962,49764,44400,60939,55808,52331,38506,53906,45605,44181},{85418,82795,62535,65893,59931,65074,76614,66206,72360,55548,70536,62334,58403},{78045,80043,49436,70326,58278,57306,71841,59780,55643,48296,62467,64872,55584},{75974,75205,52230,62978,52324,54967,74436,60352,61589,44526,65110,57203,54396},{88831,81903,61076,73029,63765,60655,75441,64282,61447,51506,70227,66410,54784},{91394,88529,67138,86934,66769,64405,90601,76437,77516,59099,81791,84995,72884},{70967,79388,55303,69970,61835,67256,76527,71669,62658,42213,72766,60689,65314},{97549,90547,63913,83470,73785,67087,86617,77124,76279,56596,75271,73233,71000},{78634,78469,59994,65901,57172,67570,74604,76250,63429,46598,73862,60160,59448},{92264,94961,71914,82139,72718,70579,88779,80335,71305,55323,86435,77911,71193},{84955,92998,50802,71838,59264,70279,79012,67430,71831,57798,67277,73070,61078},{81433,82113,51844,82676,61118,55812,76529,64248,57915,49505,69619,72012,57826},{66274,61364,42679,59494,47265,49486,50909,53764,44785,41578,51195,48569,46247},{79502,71618,59924,67665,51399,58025,74246,61294,61363,47407,62823,64065,59191},{103766,101966,77926,83638,69308,75789,93011,83004,79430,57777,80284,78149,76412},{75468,84267,53931,69771,69939,65796,73438,67275,56484,49681,76975,61744,59163},{71979,78509,52899,74779,55147,66699,84022,60839,60746,44875,70491,71140,65428},{76037,80335,56650,72571,67556,61345,90872,61969,67611,44999,65971,71249,61778},{73841,72333,52678,63751,50410,59857,71333,60367,60457,47963,59795,63996,58370}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 21")
	end.

test_22() ->
	A = {{60,21,91,29,45,23,3,56,29},{37,71,25,39,61,18,42,23,91},{37,9,16,95,42,90,1,99,19},{12,71,84,77,41,47,53,16,90},{53,71,78,91,87,29,63,8,74},{95,7,30,64,79,33,58,36,45},{92,91,44,96,32,24,44,23,2},{11,59,31,52,2,43,25,86,12},{77,40,68,39,81,61,15,15,54},{33,81,49,99,80,41,68,27,59},{87,25,18,4,11,70,59,53,94}},
	B = {{74,24,98,37,57,23,57,30,13,25,51,14,87,20,6,12,93,20,1},{36,28,54,16,4,43,10,22,96,12,49,94,20,61,69,38,45,78,93},{78,60,55,52,36,90,32,24,68,86,47,75,32,61,51,95,61,6,36},{37,48,6,10,52,75,10,75,46,61,58,26,98,93,86,35,61,51,41},{49,6,32,43,27,3,15,99,54,54,57,20,93,38,21,69,70,24,86},{76,90,93,13,51,68,31,40,75,90,5,72,26,46,77,45,19,97,5},{55,35,69,25,88,78,78,68,53,61,93,16,41,61,69,80,51,37,71},{46,58,11,59,94,86,80,93,21,17,36,58,64,76,73,28,87,37,77},{44,28,77,17,12,6,91,18,6,14,42,35,43,19,29,36,7,57,75}},
	C = {{21337,15385,18828,13684,16552,19571,15573,17930,15982,17388,16241,17260,21131,18487,16796,18170,22660,12010,17163},{20416,13586,22853,11006,14836,16286,18879,19589,18690,15447,20926,17788,22509,19408,19633,19181,19932,19219,26053},{22168,21321,17897,12460,23007,24755,16808,26192,18067,20582,15889,18777,26661,24782,25488,16115,24064,20904,18526},{26037,20791,26538,12891,18748,26033,20528,22364,25650,24282,24362,24274,24800,26735,27792,26389,22620,23435,28302},{29485,20181,29478,15486,21857,26396,21629,27982,27819,26759,29485,23522,32567,29109,28158,29165,29501,23453,31461},{25195,16170,25182,13992,22695,20357,20792,25767,17732,20959,23558,14449,30459,21758,20222,20700,27446,17030,21674},{24026,17286,23625,12287,20330,24339,15200,22313,23695,20023,23735,20114,27602,25793,24624,19626,28146,19787,21992},{16505,16353,13939,10031,17358,21828,14014,18104,16843,13954,14179,18321,16574,20889,21894,14052,18539,16670,18430},{26381,17803,27303,13869,17701,19711,17745,21593,21642,22422,20470,19964,26513,20720,20138,22167,24765,19106,21385},{27457,20520,26802,14324,22598,27085,20553,29130,28011,25493,28236,23596,31320,30044,30011,27279,28351,25096,31806},{24568,18197,29644,12178,21084,19513,25556,18414,15587,16977,19060,17590,21733,17786,19796,17341,20936,20558,19840}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 22")
	end.

test_23() ->
	A = {{59,6,37,49,53,31,64,96,21,71,42,81,37,54,13,99,71,12,28,30,15,31,73},{46,90,94,83,39,14,73,29,71,24,38,37,9,87,63,1,18,98,9,60,85,1,40},{82,43,37,27,97,53,4,5,57,39,93,89,89,88,37,73,93,62,5,40,38,58,74},{51,48,45,33,20,52,48,44,10,90,18,94,64,52,75,44,57,84,10,29,34,95,69},{27,16,49,23,26,93,13,97,24,75,43,5,70,72,15,24,34,46,55,52,84,75,54},{55,31,87,84,42,88,72,10,39,71,65,15,58,5,94,25,89,60,59,35,68,65,21},{28,57,53,31,98,19,3,78,66,13,64,55,85,93,47,72,65,13,47,83,18,47,47},{82,22,82,47,18,18,87,65,29,19,26,42,81,5,20,82,2,81,53,33,40,22,63},{38,46,90,39,68,68,47,43,48,66,61,94,12,21,90,7,12,27,19,44,57,73,90},{81,85,53,28,4,27,46,91,48,52,75,5,51,24,38,42,8,78,51,1,92,65,68},{13,97,78,49,11,25,58,93,84,1,10,19,85,16,7,48,43,68,77,79,19,69,88},{2,26,35,58,41,22,70,39,24,14,60,34,69,88,70,90,24,85,36,91,61,80,92},{81,79,78,31,20,1,10,35,41,87,30,97,89,30,66,8,94,44,83,8,17,15,87},{11,4,77,17,94,51,98,23,37,8,97,52,62,12,88,95,32,34,50,54,94,10,63},{16,43,30,29,60,74,49,11,92,87,51,19,14,86,48,23,46,51,94,36,64,28,45},{45,91,92,37,41,12,32,89,47,96,39,52,67,8,36,81,35,2,58,32,62,92,72}},
	B = {{36,94},{91,12},{26,89},{34,28},{24,29},{67,20},{92,68},{68,35},{19,54},{99,18},{74,15},{30,1},{70,7},{90,92},{23,6},{57,85},{35,78},{18,44},{20,22},{5,38},{6,72},{36,88},{29,98}},
	C = {{54155,55779},{47867,55209},{58123,63707},{55990,55703},{51585,52970},{54161,56674},{53291,55291},{45228,53246},{49721,52761},{53637,56349},{49694,56736},{53121,62434},{51407,50131},{48438,54382},{51034,50760},{58386,59401}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 23")
	end.

test_24() ->
	A = {{39,78,26,85,42,41,78,68,81,34,1,65,37,92,55,27,58,51,84,94,85,24,44,35,60},{10,28,72,13,97,44,22,65,28,41,32,88,15,81,52,8,28,60,33,8,15,81,84,99,93},{57,24,7,17,35,56,98,72,5,45,83,6,79,53,20,2,73,19,26,72,57,96,55,54,96},{51,65,27,63,5,55,7,25,28,42,62,31,90,56,48,89,69,45,50,92,50,92,11,62,24},{35,30,92,51,30,33,68,33,42,87,31,60,42,70,48,32,78,78,37,93,37,73,34,67,48},{79,89,47,61,64,61,69,31,4,23,45,69,12,86,60,15,79,82,38,65,19,68,25,52,97},{77,58,9,40,22,58,43,30,74,73,63,56,72,95,85,56,18,59,89,44,41,24,11,70,43},{95,79,7,60,52,61,44,76,70,10,87,16,54,27,33,86,54,45,35,55,74,78,17,91,77},{93,24,64,65,89,50,92,18,63,67,59,40,59,44,40,37,53,87,47,69,39,78,76,8,73},{35,21,47,45,18,68,89,84,72,47,23,49,18,66,94,44,65,76,4,99,64,41,40,44,13},{80,82,81,71,39,51,40,35,69,60,3,61,4,53,14,26,76,45,79,95,34,86,47,24,92},{79,45,44,11,67,97,70,27,29,96,43,70,99,94,86,31,26,1,75,24,76,42,98,75,8},{40,15,25,34,33,94,74,64,63,38,14,78,89,16,47,4,79,56,45,62,97,88,5,27,69},{24,80,8,75,78,29,42,6,52,70,37,78,17,14,61,73,38,42,79,53,17,79,69,48,88},{19,83,54,99,50,41,63,36,14,89,13,88,67,38,11,63,28,59,52,15,93,39,77,78,71},{51,16,50,34,90,32,78,93,87,62,89,90,48,77,40,93,90,60,29,15,75,97,76,94,42},{29,24,88,73,43,18,42,20,43,38,83,16,65,75,43,94,35,1,51,93,75,46,73,4,44},{15,89,7,37,69,28,32,47,38,2,32,78,48,44,87,63,47,19,25,2,64,73,27,74,46},{64,7,82,55,85,87,32,53,83,91,29,84,58,92,27,94,34,36,68,33,94,89,46,46,85},{28,3,64,9,30,21,11,91,53,73,17,49,56,62,63,41,58,46,82,10,85,76,41,49,81},{77,11,62,29,30,46,75,24,79,90,21,83,97,80,35,17,15,32,50,5,79,70,78,57,30},{23,66,28,61,10,42,87,32,51,94,19,13,36,94,73,12,69,85,62,12,24,45,11,52,55},{15,8,34,13,87,63,90,76,53,10,72,35,49,70,67,36,40,98,19,50,42,1,29,66,75},{92,38,72,70,60,6,59,58,28,76,43,29,81,12,95,37,72,87,96,26,69,23,28,89,51},{97,82,18,89,18,83,38,63,7,62,3,85,56,14,54,40,7,73,84,72,2,11,75,40,90},{87,65,29,31,23,82,49,53,50,60,2,23,14,7,35,16,27,8,50,20,5,20,38,32,39},{65,46,68,81,48,89,35,82,68,26,38,83,16,38,57,51,65,14,51,35,35,51,34,95,26},{45,93,2,89,70,51,85,24,12,14,65,2,58,33,1,52,10,14,57,48,28,62,39,59,94}},
	B = {{35,86,62,85,30,56,25,92,63,93},{43,56,97,34,26,60,49,63,57,73},{86,67,39,54,44,84,63,40,52,21},{84,25,55,59,47,37,3,93,67,55},{69,98,84,6,21,30,86,89,67,65},{20,4,75,80,76,78,68,31,18,28},{4,67,39,84,28,26,6,70,54,84},{42,35,63,24,43,85,87,15,6,68},{68,76,93,6,72,50,62,33,37,32},{96,50,6,43,16,30,72,81,29,81},{16,6,48,15,79,97,87,57,50,57},{15,32,91,1,15,93,60,5,67,95},{65,98,6,65,51,83,27,74,31,8},{53,15,47,20,20,64,63,76,43,21},{8,59,9,12,76,8,23,26,3,10},{60,5,26,58,88,60,66,10,26,79},{48,51,40,8,50,2,24,35,11,90},{32,75,67,69,96,83,78,55,90,65},{28,27,2,77,73,94,15,7,12,45},{92,76,37,70,77,82,99,92,63,76},{49,9,78,83,58,28,68,42,22,75},{88,77,31,83,76,36,9,36,26,82},{89,1,62,89,74,35,96,78,40,11},{55,53,99,44,20,61,30,31,78,11},{51,58,99,44,64,27,87,17,14,53}},
	C = {{70679,65990,77935,66775,70872,75182,73199,70217,56462,77936},{63516,58511,73626,51506,58519,66071,70815,54487,51171,59602},{61776,60639,63621,64590,63596,63307,64702,64245,45288,69196},{67427,59452,60176,63477,70152,72081,61943,62114,49792,69603},{73675,68936,67884,64957,68379,72960,70663,68539,57676,74923},{64332,68648,78333,63297,67291,72140,69914,69327,59607,78835},{61511,62534,67564,61393,68348,76920,67049,64469,53486,68544},{69264,67671,82057,68599,75979,76899,73117,67283,56799,80408},{77177,76562,75377,75146,77750,76199,77725,80223,62452,82680},{63166,60953,67380,60724,69132,67674,69874,63239,51411,70804},{76222,69149,76077,68454,70005,73348,71691,68233,56078,80907},{70539,64674,70885,72022,67740,77724,73485,74218,55050,69903},{61261,65879,68594,64262,68177,67802,63708,57693,46336,73678},{67693,60951,69735,59471,67585,64886,66635,60930,52454,73280},{73310,59994,76893,69739,64746,72764,71263,67539,58507,75198},{83159,75372,90271,71783,82544,86664,88495,75740,66028,91750},{70786,53398,57410,62330,68834,67967,69194,65555,47623,64309},{51998,52282,65019,45708,55090,56118,54604,47627,43022,60071},{85899,72180,84823,76446,80613,86364,87046,73423,60263,86048},{64034,57058,61134,56596,64134,64831,65548,49852,40096,63714},{67914,63083,66618,66432,61271,70153,64385,65801,52319,65880},{56666,57701,58244,54689,58157,58484,54348,58761,46066,62249},{53902,59909,69949,52835,64939,67791,71879,58381,51127,61743},{69775,74383,69677,69298,71807,74888,67357,70101,57969,76173},{62789,60518,70195,68509,66340,75116,67995,64300,54157,70898},{42573,43158,49061,45016,42450,46956,43916,43457,33308,48865},{65120,59351,75748,58828,65176,73691,65904,58804,53260,70591},{57575,53991,63977,60139,57439,60448,55881,60880,48135,62616}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 24")
	end.

test_25() ->
	A = {{98,76,6,68,8,92,68,68,23,71,99,18,33,75,36},{64,66,71,41,16,56,49,93,25,24,25,44,32,29,62},{9,13,27,56,54,23,60,24,93,38,17,10,91,65,81},{90,36,33,8,30,33,62,32,23,78,12,50,70,24,52},{79,61,78,18,7,82,86,67,64,1,8,88,65,37,56},{8,76,57,13,52,62,58,38,88,96,51,3,53,13,48},{42,44,54,77,65,71,21,90,13,97,2,54,84,19,74},{75,75,52,89,37,57,13,1,90,6,30,99,36,61,85}},
	B = {{1,94,70,6,17,44,99,43,63,22,53,21,37,15,81,26,78,92},{27,19,8,18,27,56,89,87,11,34,3,29,89,81,31,50,34,83},{52,98,57,66,75,44,51,76,1,66,52,74,3,31,35,8,41,44},{90,11,97,23,31,94,53,67,82,56,65,60,34,76,92,42,36,65},{10,96,46,68,45,16,26,10,87,94,58,59,41,31,30,53,6,60},{1,48,61,87,97,17,66,63,14,9,26,55,46,90,34,60,8,26},{1,12,78,26,1,32,98,8,12,20,9,60,61,73,94,21,38,70},{31,41,14,45,49,20,96,43,84,93,26,41,61,46,3,95,89,23},{53,85,36,41,86,98,33,5,78,51,89,11,22,56,60,17,48,4},{54,59,88,91,85,84,4,39,1,86,39,25,31,23,12,98,92,82},{33,56,39,32,74,41,59,66,2,15,32,1,74,58,39,59,22,18},{63,38,65,78,42,33,23,6,84,96,1,3,99,99,55,34,67,16},{61,24,82,56,52,37,25,80,29,12,19,67,20,11,34,33,32,53},{66,55,51,82,49,93,22,64,57,88,77,62,43,57,88,74,67,58},{70,69,6,1,35,6,49,86,99,28,33,6,19,75,44,28,60,76}},
	C = {{29867,40553,45496,37302,41706,41735,51385,45244,33475,36704,30982,30444,41960,47383,43113,44533,41603,46023},{26800,36558,33630,30293,33367,29322,43730,37439,33206,34881,24082,27095,32308,39427,32307,32012,35899,36452},{31854,35174,35876,30773,33820,34462,29627,32358,35614,32579,30174,27592,23497,34348,34970,27963,30322,34028},{23356,34703,36608,29778,29638,27927,34082,30154,27901,30432,21519,23328,27569,30561,30557,28637,34395,37532},{29298,41564,41157,36560,38066,33384,48431,38442,37558,36837,26661,31096,37288,46676,40893,31047,39166,38783},{27183,39560,36005,35917,41841,35176,36257,35451,26087,34311,27402,26959,30027,37520,29073,34384,32233,36464},{35453,41672,44951,41544,42250,35250,40304,42662,40455,44806,28875,33446,33642,41776,33124,41585,41135,44267},{37778,44565,41600,35158,39679,41487,41011,41125,45495,40200,33949,27248,36770,49815,45100,30939,37501,40715}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 25")
	end.

test_26() ->
	A = {{46,44,99,28,82,81,76,80,87,15,3,75,8,4,6,29,42,42,65,54,97,70,34,36},{74,22,81,58,80,78,99,33,36,50,78,4,32,78,23,64,20,14,74,20,53,26,65,21},{22,19,11,74,40,51,94,6,12,41,93,44,28,33,38,12,64,33,67,94,48,50,46,90},{48,29,20,12,91,1,99,55,4,12,10,42,92,43,22,19,17,67,8,87,61,89,32,13},{78,50,17,43,73,38,94,78,19,5,35,8,42,27,24,86,91,33,16,36,24,52,55,45},{80,13,6,7,36,90,68,98,64,1,30,18,23,52,77,74,15,7,21,27,8,11,13,48},{87,47,93,32,5,88,7,41,31,32,39,9,16,50,24,47,50,96,38,23,11,7,60,81},{58,57,7,70,93,63,33,32,35,35,61,47,6,70,21,60,21,79,99,36,33,53,91,23},{62,97,67,34,88,85,13,68,57,82,40,82,81,46,32,83,90,1,80,48,13,4,87,6}},
	B = {{52,17,11,43,47,16,74,5,93,41,28,36,54,92,45,57,65,92,42,58,84,12,40,30,10,93,12,70,89},{52,97,26,60,38,6,25,10,1,38,61,84,29,6,54,59,71,97,86,75,83,48,75,59,98,79,8,2,57},{44,77,42,77,59,91,50,86,57,56,37,88,73,11,59,24,81,32,8,76,14,11,59,56,79,27,40,55,54},{29,8,27,60,10,92,24,44,52,63,95,39,62,35,9,80,70,69,30,18,28,8,61,82,56,21,74,71,71},{28,70,19,79,14,36,2,37,16,74,28,88,95,81,53,98,95,28,16,83,45,94,50,33,38,26,54,81,69},{82,17,36,92,53,61,62,27,34,41,31,12,48,29,11,54,48,36,40,14,57,76,31,33,26,6,70,67,64},{22,27,69,84,95,83,38,38,63,42,74,38,36,38,44,64,68,53,40,11,20,33,77,5,17,70,86,3,10},{96,48,29,98,40,28,50,32,90,11,87,25,79,78,99,53,1,33,51,9,86,84,27,19,54,5,63,41,43},{29,10,85,20,82,43,84,36,69,27,80,40,90,21,37,18,43,62,46,35,82,27,93,76,52,4,29,55,71},{41,38,32,66,30,20,17,77,31,9,85,32,30,89,50,68,63,74,50,34,48,13,27,60,74,9,88,99,79},{88,99,41,50,93,47,21,41,27,63,35,80,34,29,77,1,52,45,63,10,28,23,32,84,69,6,15,60,15},{60,4,65,67,39,88,73,15,92,8,3,14,87,77,93,46,28,89,43,15,77,24,28,8,20,55,94,19,4},{20,38,12,92,95,24,11,72,89,60,66,34,49,23,46,99,35,40,38,37,45,80,78,97,91,65,33,71,68},{39,85,33,23,33,68,63,33,90,7,12,38,61,4,32,20,1,73,27,56,4,81,11,85,34,6,30,57,47},{43,30,99,93,53,89,88,33,57,63,20,64,31,70,19,13,43,60,1,43,18,3,38,98,94,40,27,42,24},{47,23,45,21,67,68,86,97,38,46,8,69,70,33,55,84,18,35,94,89,53,25,96,34,79,51,31,9,28},{59,89,17,23,95,81,41,10,11,39,34,20,5,79,28,77,49,65,37,76,4,60,32,19,85,57,56,13,80},{34,72,41,88,22,60,65,53,21,68,72,36,51,86,39,87,12,4,39,4,35,43,48,81,38,88,91,63,68},{89,84,24,45,24,84,29,4,4,78,59,54,7,66,27,29,66,6,99,27,8,76,13,12,2,91,57,65,10},{24,87,63,99,91,70,67,5,28,78,94,61,65,81,34,66,89,12,36,48,44,83,16,25,68,9,4,59,7},{5,38,34,29,30,63,79,45,37,85,74,3,49,94,84,72,42,95,69,69,98,54,16,76,34,11,28,29,90},{22,65,78,24,17,12,73,39,8,70,41,18,91,7,64,85,3,14,82,49,36,61,73,80,45,77,98,52,26},{41,23,1,63,55,74,16,64,56,50,85,52,67,23,77,6,76,2,56,29,27,95,13,28,97,55,82,38,35},{33,32,21,5,56,99,11,26,21,43,24,81,74,48,71,55,17,41,59,33,47,6,54,89,66,43,39,3,62}},
	C = {{53571,56524,50548,71723,59131,70971,62331,43722,53365,59989,64344,51682,73598,62997,64627,68228,60163,56456,58362,51565,61297,59891,55801,53607,57145,48608,64856,53958,59589},{55014,57897,42989,69037,61222,70455,53046,49684,55415,58468,59619,57569,64421,54440,57071,60745,62720,55742,56034,50340,47980,56680,52856,58329,59295,46031,58833,59653,57586},{48919,57385,44623,64011,61552,72799,47354,37229,43057,58776,59336,51956,57165,57596,53463,60500,57038,50433,54056,40364,42469,51215,45906,57230,58512,45172,57631,50152,47978},{34769,50700,40087,64381,50473,50645,46512,37204,46846,51950,53926,41955,59503,52210,52614,64766,45684,42574,44208,41452,45012,55258,46044,49242,49704,45924,51652,45991,44777},{48433,52281,38331,61480,59455,59953,49368,40413,47957,51743,53831,49920,59602,53950,54384,65590,50713,49979,52723,48216,47620,53661,53260,48799,59656,49770,53764,43633,53099},{45528,35561,38832,53755,50412,51100,49514,31417,49012,37578,39950,40210,51891,44553,42931,44961,36721,43663,40492,34662,44138,41066,42480,42641,44488,32937,39888,38915,41405},{50618,50940,33888,58122,51944,61920,49081,40486,45282,47082,49002,49783,54848,48900,48487,51442,46675,45722,47297,41442,43653,43487,44448,54516,56795,44584,49269,48106,55569},{56518,60250,42426,67819,52069,68237,53888,43325,48379,59736,60509,56076,66395,58994,57671,63730,58447,51703,61488,47383,50739,61987,49699,58275,58584,52858,63680,59524,55402},{68130,66870,45851,81982,71546,74215,59338,52430,62299,59437,66746,64294,72556,66502,67300,72609,71106,66804,65688,61695,62106,69906,59444,60411,79271,55194,65494,65132,66955}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 26")
	end.

test_27() ->
	A = {{31,32,27,12,16},{84,7,32,8,87},{96,10,93,89,59}},
	B = {{55,48,77,83,93,49,57,82,55,14,28,22,57,96,42,1,91,69,27,76,11},{84,8,57,84,82,75,74,35,27,58,4,76,45,19,87,40,6,37,53,82,80},{79,41,52,95,61,1,11,17,19,49,24,64,68,19,19,31,20,85,57,77,24},{68,90,57,91,11,70,95,8,84,78,19,18,77,44,19,52,46,53,78,99,4},{38,89,79,64,72,71,20,94,9,9,38,64,62,15,52,22,8,28,99,82,89}},
	C = {{7950,5355,7563,9942,8438,5922,5892,5721,4234,4693,2480,6082,6959,4865,5659,3124,4233,6702,6592,9559,5021},{11586,13863,15860,16896,16690,11410,8158,15919,6872,4557,6606,10140,13289,10462,9421,3686,9390,11635,13700,17348,10027},{21761,21762,22532,29518,20648,15966,16870,16061,15324,13954,8893,14202,22757,15974,11428,9305,15222,21268,21206,28926,9695}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 27")
	end.

test_28() ->
	A = {{19,48,27,93,72,71,97,92,62,96,69,16,22},{20,99,26,16,43,86,90,48,66,57,93,40,65},{75,53,92,22,90,60,9,37,40,79,30,53,23},{44,56,72,13,74,80,44,96,14,69,4,4,64},{87,39,9,40,16,14,14,79,74,23,3,58,53},{21,21,85,5,33,21,53,90,98,48,90,2,34},{24,5,69,78,23,35,11,5,4,74,65,64,54},{22,85,71,25,64,8,17,27,46,68,55,24,21},{87,90,66,57,13,41,41,26,59,85,2,57,2},{19,13,78,95,5,30,69,34,61,53,16,42,59},{60,95,31,99,99,14,79,29,80,92,72,35,61},{58,94,28,80,89,20,4,91,77,98,93,11,35},{98,15,70,2,74,28,22,7,58,39,64,57,56},{9,82,57,20,85,76,27,67,57,92,13,24,94},{28,96,38,39,44,76,42,80,96,28,11,60,24},{1,88,19,48,1,59,18,17,89,23,50,64,8},{41,73,98,49,24,76,37,28,81,3,14,21,13},{6,66,71,28,52,67,28,75,11,14,73,35,23},{65,49,60,90,42,72,23,71,83,43,91,36,54},{88,80,68,21,50,36,87,2,23,58,6,80,46}},
	B = {{82,63,78,4,63,81,17,17,91,39,44,20,94,90,94,30,38,80,90,28,38,48,1,44,77,73,63},{71,99,76,40,21,8,55,21,54,21,6,88,55,26,88,31,72,82,46,59,46,24,29,70,60,82,62},{21,82,94,59,15,91,70,19,91,35,25,68,94,74,97,37,28,37,28,35,66,31,31,44,59,24,7},{21,27,40,70,8,73,19,42,12,99,43,98,89,85,62,39,23,25,78,57,45,3,80,83,46,78,79},{22,96,62,57,68,63,81,91,45,73,81,92,11,33,74,58,62,33,44,76,50,5,91,42,27,67,66},{96,81,96,31,54,85,3,93,4,17,88,37,60,59,79,37,8,35,27,15,30,71,45,72,81,31,30},{99,30,31,44,18,68,14,16,16,30,42,50,22,30,65,53,14,15,11,48,26,10,68,11,10,88,99},{29,10,45,27,37,14,63,89,53,67,55,93,6,62,95,40,49,49,6,83,66,5,7,26,16,68,58},{52,56,32,6,92,30,22,25,73,62,17,43,71,83,6,1,14,63,31,55,4,7,77,66,19,16,70},{6,41,16,75,89,82,33,74,33,87,7,80,55,23,27,10,89,29,44,16,4,20,59,14,79,15,37},{83,76,98,84,44,83,55,20,4,46,57,85,27,27,71,74,93,61,50,57,79,4,27,15,66,7,78},{43,54,18,39,56,1,8,86,37,74,25,74,89,64,60,90,38,60,44,4,57,87,90,11,76,70,72},{92,56,68,98,78,4,5,34,31,90,77,15,71,66,38,36,46,36,48,50,85,7,54,12,62,96,2}},
	C = {{40396,41915,41881,39304,37130,45187,28384,40803,27090,45972,34765,55936,37510,39733,50036,30668,35420,32255,29988,38482,32086,14187,41604,31609,36247,41189,48000},{48248,46800,45318,37480,37368,37430,25027,34586,26553,38009,33110,47788,37601,35977,47900,31079,35106,35435,27906,34338,33632,17560,37282,28287,38510,39783,42949},{31450,44159,40692,30779,35078,38690,26651,35053,33039,36500,27886,43824,39926,36737,46059,26200,31200,31967,29033,27480,29148,19527,32548,27100,37802,32896,33095},{33351,38152,39296,30823,31649,33981,25170,35316,28625,34324,30770,40592,32096,33620,45533,23315,28372,27378,22960,30019,29481,14987,28011,24713,32301,36095,29244},{27910,26455,26199,19211,28143,19979,14806,24564,26471,31395,20589,30105,32052,33544,32440,18714,20461,27490,23258,23478,22728,13527,23506,20687,25495,31693,29113},{31770,34174,36251,28741,30753,33181,25581,25567,28253,32716,24887,39733,29513,32689,38159,22363,27825,28101,20138,30920,27895,9216,26671,21290,26538,25653,32758},{24277,29872,29716,31664,24723,31062,16319,25285,18321,33389,21894,34845,34223,28939,32411,23140,24706,21374,24552,19109,25707,14094,28104,18280,31877,25129,25218},{24826,35886,32138,27790,26211,28623,24219,23861,25329,29694,19025,38927,29480,26126,35278,20598,28801,26373,22441,25481,24175,10702,26550,21599,28113,25935,28637},{31521,37532,33899,25666,30044,34361,20199,27758,31541,33397,19573,40670,42199,36275,41657,21808,26762,31756,28823,24081,23182,19163,30151,28153,35537,33694,35220},{28973,29142,29597,30122,25847,31491,16508,24828,23569,35919,22675,36536,37470,35304,34536,21660,20578,22763,23598,24641,25060,12560,32371,23254,28266,31871,30708},{44384,50728,45876,43906,42449,45072,30631,37250,34261,51355,34086,58068,46561,43806,51961,33034,41182,38971,38733,41112,36045,15002,46886,34425,41746,48097,51427},{36615,46562,44881,39053,40503,40907,33000,38147,33553,47732,31664,57162,40019,40585,50172,28753,42266,38826,35127,40417,34785,12581,37062,32982,39306,39460,45278},{33475,39480,37303,27865,33937,33741,21075,26130,29909,32983,26649,33943,36855,34531,38722,25177,27250,29930,27832,24364,28151,16646,29051,20789,33477,29785,30771},{36234,44207,40904,36759,38833,33354,26412,38749,29837,41216,31757,45547,37253,36051,44006,25037,33272,31082,26262,32826,31411,15690,36618,28022,36550,38379,32403},{36332,39821,36848,26088,32514,28794,22818,34384,29794,34917,26654,43917,37100,37632,43399,24987,26024,33150,24522,30936,27420,18043,33987,30564,31806,36847,38027},{28102,30845,27333,20881,23430,21360,14699,22324,18690,25334,16815,33289,30239,26862,29026,19275,20372,25852,19822,20626,19636,14259,26823,23700,26112,23492,29653},{31422,36604,36383,22384,23941,31191,19841,23261,27887,26094,22247,34846,36334,34499,38982,19820,18770,27268,22188,24777,23623,15532,26816,28893,28297,28434,29228},{30116,35415,37101,27978,22710,29108,23878,28662,21503,27595,26140,39871,27288,28013,41682,25455,26016,25855,19854,26949,29315,13684,24573,22276,28429,28418,29291},{42774,45855,48040,37678,38224,42832,26931,36268,32258,44908,35090,51011,45922,46143,51190,30789,34033,37549,34466,36494,36613,17648,37210,33936,41021,39435,43189},{37706,40971,36339,29502,31006,33851,20177,28249,30663,33385,24618,38699,40940,34886,44277,27281,27393,30907,28576,24598,27699,20628,33335,23760,36069,39808,35824}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 28")
	end.

test_29() ->
	A = {{98,39,20,91,54,14,57,71,74,9,42,7,28,89,96,8,40,30,39,72,33,40},{23,42,77,34,33,28,25,15,34,79,37,36,95,97,46,70,79,2,5,40,36,30},{2,70,2,58,97,30,48,28,46,94,84,54,29,91,81,83,55,84,83,3,18,45},{35,44,86,31,91,59,30,46,71,16,12,44,83,32,76,71,26,63,3,40,29,92},{70,20,3,85,90,96,99,65,64,99,89,5,77,76,19,3,1,8,60,3,19,82},{64,44,73,15,98,19,56,6,30,65,30,13,53,77,60,67,69,23,15,27,3,93}},
	B = {{20,78,53,28,42,83,24,73,17},{83,26,78,62,47,86,22,56,47},{83,19,97,73,32,65,11,27,43},{16,59,58,40,4,9,23,69,37},{13,1,79,66,72,58,85,81,96},{87,27,40,47,94,43,5,32,41},{1,19,56,48,13,75,8,60,43},{86,54,37,14,69,11,61,55,79},{2,62,46,88,14,8,90,62,5},{98,4,56,41,43,54,68,14,60},{68,12,48,92,35,41,67,97,70},{98,89,55,48,24,73,57,66,12},{86,29,12,27,24,1,14,26,97},{71,3,81,16,70,23,37,62,50},{52,52,48,45,15,65,47,64,66},{68,84,18,83,98,53,60,45,87},{95,78,95,76,65,70,2,63,71},{21,86,33,74,55,59,70,52,5},{46,8,94,89,84,59,35,52,81},{10,8,3,36,18,92,83,62,11},{21,68,46,2,29,99,55,79,27},{57,47,8,58,56,76,34,38,84}},
	C = {{45148,42962,55215,50168,42003,54249,46828,65003,50868},{61767,36371,51884,48342,43669,49166,38202,49912,54589},{66170,45648,66190,68902,59630,61459,56893,68021,68049},{57500,47106,51051,58014,49684,57044,48121,57301,58469},{57588,35119,58009,56361,52469,51540,47442,62837,65111},{55537,36831,54456,54848,48632,56868,41034,53691,59424}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 29")
	end.

test_30() ->
	A = {{97,45,59,29,37,8,36,94,55,50,59},{48,19,25,37,58,65,49,33,39,34,47},{9,40,15,28,35,40,22,6,31,45,28},{12,94,71,50,32,30,45,38,97,73,79},{15,13,53,56,51,54,7,7,50,37,29},{53,47,7,30,66,51,31,52,86,31,22},{9,69,46,17,92,70,33,76,83,37,78},{3,44,43,10,8,70,41,66,55,65,15},{44,47,84,48,83,20,19,12,5,76,62},{84,29,17,78,90,3,78,74,12,22,42},{88,39,69,90,90,42,76,22,1,63,6},{62,72,96,80,68,34,49,91,72,67,58},{83,40,57,50,94,38,4,14,80,30,4},{27,13,24,40,64,34,71,33,14,15,39},{84,78,16,72,5,4,33,45,65,46,3},{11,94,8,22,13,82,58,5,96,81,93},{9,82,17,81,93,36,76,78,78,4,34},{61,62,49,48,92,51,2,63,44,68,12},{34,15,4,32,47,51,53,74,93,28,80},{32,98,97,83,23,20,40,63,82,46,40},{41,58,96,69,65,11,42,32,51,87,96},{14,19,76,40,65,82,10,8,22,44,45},{20,14,25,70,43,44,28,1,83,23,19},{12,76,88,86,93,55,83,12,44,30,50},{88,28,33,12,22,70,65,92,17,43,82},{94,74,59,94,70,68,7,34,76,79,91},{29,74,86,52,26,37,20,98,83,47,22},{15,95,40,64,40,25,41,37,16,95,2},{55,59,4,34,25,39,1,41,57,87,81}},
	B = {{95,33,9,96,23,23,73,37,50,59,13,34,85,82,73,57,20,12,87,19,99,71,43,15,40,81,39,1,32},{64,50,44,64,12,56,31,44,75,65,6,17,85,11,56,56,58,9,11,27,74,21,31,27,55,76,35,9,96},{80,80,86,28,37,75,3,1,37,72,75,28,82,45,11,29,70,86,85,32,92,41,38,27,71,84,98,2,82},{78,55,17,7,26,30,97,26,13,62,98,67,85,56,98,22,31,55,90,65,79,53,18,69,56,51,99,4,65},{27,1,19,78,57,66,76,15,96,81,63,97,79,78,56,36,37,83,19,69,57,25,73,94,67,74,36,1,23},{92,76,99,94,47,3,77,76,66,14,19,74,65,79,87,44,20,37,33,16,47,46,58,74,89,25,26,14,54},{85,96,95,16,86,24,46,44,13,97,20,41,7,2,63,28,39,89,50,69,56,75,2,25,46,29,47,60,41},{39,19,80,9,96,71,74,80,32,1,39,40,21,51,84,31,46,54,66,67,72,5,22,68,49,43,93,43,73},{47,92,29,12,42,55,75,25,73,7,77,87,84,82,33,81,28,57,76,49,31,50,57,31,70,59,11,1,76},{7,49,62,84,3,3,15,64,69,30,56,25,7,15,46,47,96,51,62,71,48,49,26,92,3,95,55,98,10},{67,81,96,8,93,19,83,71,15,9,4,91,88,16,9,67,61,33,11,93,54,70,43,97,60,82,31,61,42}},
	C = {{34426,29942,31214,24439,28260,24346,33278,25413,26691,23805,22938,28479,35204,27316,30670,26762,26775,27517,33459,30026,39212,25581,20607,29654,29161,38569,31169,15641,30926},{28880,25959,26630,22198,23073,15835,29202,20693,22680,20271,18490,27419,28383,23242,26505,20588,19057,23802,23304,23960,28241,21979,18225,27088,26006,27461,21556,11982,22355},{17176,17663,17179,15312,12354,10168,17178,13492,16635,13301,12884,17149,18803,13326,16481,14128,14543,14951,13953,15844,17615,13688,11893,18577,16389,19343,13569,8833,15465},{36030,39780,37016,23812,27723,25400,33404,26437,31083,26025,27786,33486,40284,25220,29520,30598,32042,31528,31736,33910,37893,28089,22854,34408,33986,41823,30778,18056,36875},{22630,22187,20285,17317,15545,14333,22675,14050,19827,16312,20426,23391,26232,20628,20090,16709,16783,20861,20969,19081,22980,17141,16152,23079,22453,23982,19482,7435,19989},{27813,25428,23593,23220,22390,19462,31215,20902,27340,19395,20657,28593,30839,26618,28434,23513,18995,23452,25042,23904,28720,20567,20178,26264,27250,29100,20696,9952,25841},{34356,34153,37444,26383,32698,26659,37361,28070,33643,23484,25172,37647,39587,29776,31541,29445,28150,32079,27166,33396,35987,24673,26141,37777,36610,38295,28074,15577,34540},{24081,26267,29153,19072,19956,15971,21795,21474,21929,14894,17671,20776,21621,18552,23741,19179,20958,22092,22543,20899,24728,17240,14955,23669,22984,24728,21679,14151,24419},{28737,26023,27635,25626,20593,19911,25848,18980,25915,26406,23204,26630,33353,21839,24284,21535,26956,26990,25558,27482,34104,22893,19853,31243,26098,36948,28019,14081,24316},{33034,24668,25901,22486,28496,21770,35499,22049,23262,28995,22682,29577,31892,25513,33804,21291,21816,28732,29423,30647,36851,24630,18151,30018,27467,32835,30189,13415,25664},{37898,29985,29331,31240,23926,21893,33286,21510,28662,35498,27848,29659,35990,28525,36502,22523,26230,32735,34446,29463,41379,28215,20830,31819,30565,37874,34081,13662,28086},{44835,41416,41745,30867,34965,32548,42799,30884,36162,34074,35265,39358,47519,35242,40931,33114,35895,39660,42680,39787,49968,32427,27362,41329,40752,49223,42639,18795,42598},{30063,24835,19871,27080,18452,21898,30392,15986,29911,24745,25620,29176,36879,30741,27880,23484,19922,25550,29154,22461,32883,21938,22769,25642,28847,33623,23689,5489,26368},{23991,20934,22606,15737,21485,14278,24028,16022,16742,20125,15608,22588,21937,17177,22173,15106,15760,22226,18621,21680,23861,18113,13573,22312,21301,21744,19602,10434,18160},{28509,24721,19039,20375,16110,17759,26932,18641,22155,21211,20215,20466,29079,21633,28507,21507,19597,19126,28678,21325,31194,20797,14617,19955,22100,29561,24060,9838,26663},{33747,39155,36306,25845,25236,16918,32349,28689,29748,20470,19495,32417,35134,21966,27978,30276,27664,25093,24175,30083,30608,28000,21595,32966,31035,35723,20866,19524,30944},{35078,31945,31093,21255,31393,27060,38947,24399,29550,28566,27293,35504,37443,28169,36118,25642,23992,32562,28873,32925,36233,23898,21790,33091,34878,33630,30148,12160,35108},{30578,25382,26978,30437,22237,23588,32167,22970,32461,25012,26050,29636,35701,29819,32863,24555,25626,27619,29855,27144,36492,21669,23127,32764,29903,37107,29290,11984,29121},{30285,30777,30864,18642,30110,19382,35511,25384,24245,17200,20893,33204,31214,25826,28203,25521,21224,26517,26137,29918,29291,24077,20247,30999,29407,30041,22845,15145,27054},{38720,37899,34680,22690,26700,28408,33666,24250,29442,28788,30549,30826,41509,27436,33047,28216,30548,32124,36356,31645,41838,26670,21489,31052,34731,40980,36160,13882,40001},{37692,38000,37313,26571,29222,25954,34957,25837,30551,30735,30418,35160,42309,26862,30539,29531,34414,34845,34711,37209,42453,30696,23919,38581,33935,46137,35766,19579,34162},{26564,24926,26807,22298,18830,15827,24070,17318,22812,19283,20419,25819,29256,22177,22073,18287,20330,23809,21351,21221,26863,19222,18829,27602,26118,27664,22362,9733,22023},{23219,23606,17706,15033,15718,13927,24924,13398,19244,16488,20978,24448,26169,21231,21431,17565,14432,20640,21997,19245,21708,18260,15419,20781,22418,22131,17518,6354,20506},{40474,38003,36475,26390,29444,26319,35747,22869,30727,35340,29940,36028,42067,27831,34040,26172,28966,36603,31378,33450,40604,28924,23611,35219,37426,39252,33745,13609,35618},{36469,31247,36980,25884,31328,18803,34141,29702,23836,21438,16612,28871,31206,25100,31953,25241,24653,25843,28759,29063,36595,26627,19555,31361,29516,33671,28151,18545,27823},{46007,41482,38059,36616,30621,27103,46283,31900,38406,31488,33111,42741,52766,37894,40961,36009,34266,34187,40310,38257,48724,35243,30385,44037,41030,50984,37125,17527,39499},{33759,32738,33127,22120,26111,27210,31466,24334,28824,22788,28041,28534,36121,27826,31569,26003,27672,29723,33974,28463,37781,22230,20884,29720,32276,36658,33429,13064,36736},{25556,24833,25479,23735,16305,18114,22748,20325,25147,24492,21855,20373,26104,17492,28149,19473,25565,23710,24715,24473,30830,19097,14996,26867,22378,31557,27087,15095,25942},{26635,26887,26547,24047,20473,15526,29440,24926,25443,15923,18221,26760,30811,21642,25607,25351,24375,19585,23969,26644,29448,22592,18943,30549,23945,33896,21665,16648,24281}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 30")
	end.

test_31() ->
	A = {{44,68,66,7,47,90,79},{4,73,50,86,19,11,1},{41,83,33,91,98,85,76},{23,29,8,78,43,47,61},{87,32,35,4,78,10,26},{13,67,19,26,79,94,22},{35,5,6,44,99,63,15},{59,51,67,68,86,60,28},{85,57,91,89,51,23,25},{29,22,19,22,2,16,66},{9,38,48,85,90,40,19},{16,30,46,67,68,58,46},{63,5,41,66,55,66,82},{94,17,63,94,98,40,30},{40,65,52,8,76,58,12},{49,12,75,10,75,28,21},{99,65,72,63,98,3,15},{59,52,97,1,83,67,31},{97,80,39,2,49,37,13},{32,79,80,19,46,70,21},{78,69,39,74,42,12,22},{89,41,70,15,69,17,26},{67,41,92,74,50,54,5},{43,10,36,53,29,62,57},{63,56,96,60,95,11,61},{78,69,21,79,76,97,5}},
	B = {{76,69,26,58,74,45,41,70,74,72,60,71,36,24},{85,66,24,66,27,73,29,92,44,95,17,89,70,22},{50,90,90,81,83,85,94,34,73,67,16,3,60,66},{78,2,25,24,33,41,74,35,91,90,70,63,83,56},{41,99,76,60,87,27,38,47,37,54,89,80,95,72},{28,55,81,34,7,28,18,90,48,13,83,77,62,97},{10,30,39,99,30,32,79,38,84,44,7,53,86,69}},
	C = {{18207,25451,22834,26255,17890,19158,20145,25136,24398,21864,17548,24692,27724,24865},{16814,12282,10880,12777,11015,14138,14344,13627,16299,19526,10912,14769,17965,12322},{26077,28116,25600,29007,22418,21898,25182,29957,31466,30979,27078,34543,37935,30629},{14386,13049,13418,15985,11623,11459,15607,15849,19631,17584,15616,19444,22057,17950},{15132,20325,14032,17683,17975,12608,13279,15918,16315,17495,14558,17770,18070,13706},{15752,20732,18782,17453,13397,13626,12618,21639,16946,17370,19030,23305,23681,20820},{12790,17089,15882,13469,14179,9171,11481,15547,15199,14182,19506,19286,20223,18084},{22959,26257,22976,23819,22290,19759,21788,23986,26103,26358,23069,26197,29656,24712},{25782,25059,20707,24516,23667,22191,24605,22820,28631,29795,20378,24164,28318,21912},{7930,8265,7564,12399,7309,8042,10819,9512,12889,10651,5926,10350,12408,9916},{17944,19299,18412,17599,17161,14902,17914,17285,20423,21340,19367,20807,25583,20651},{16164,18660,18611,18848,15725,14499,18070,17953,21123,19564,18084,20509,25009,21528},{17334,20034,19822,22551,18085,15348,21222,20215,25972,21134,20088,23027,26925,24044},{24509,26268,22730,24143,25452,19406,24039,22922,28923,28196,25769,26808,30526,25058},{16649,22820,18422,18734,16673,15353,13885,20076,16948,18645,16559,20467,21622,18196},{13343,20538,17349,17480,17856,13347,15160,14277,16422,15931,14190,14671,18601,16515},{25815,28044,20465,24843,26133,21113,22337,23009,26205,29788,21683,25865,28449,20468},{19421,29067,24481,25062,22474,19846,19928,23356,22717,22494,19211,22613,26372,23632},{19453,22763,15230,19598,17553,16377,13666,21673,18408,21076,15467,21708,19665,14788},{18685,23694,20388,21225,16890,18660,17196,22153,20239,21197,15924,20923,23575,20401},{21793,19072,14066,19119,17712,17070,17891,19614,22367,24836,16545,21908,22746,15814},{18484,23723,17608,21190,20900,16734,17510,18668,20418,21434,15941,19330,21364,16909},{22561,23827,21225,21151,21021,19884,21327,21580,25074,25165,20336,21767,25472,21909},{13547,14964,15372,16833,12856,12241,16080,16118,19910,16108,15162,17505,20308,18631},{23841,28643,23612,28679,26294,22368,26298,22699,28761,29645,20263,25205,31881,24556},{24887,24993,21377,21028,19426,18499,18048,27779,25418,26273,26569,30533,29119,24426}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 31")
	end.

test_32() ->
	A = {{10,1,28},{74,58,79},{58,78,67},{58,63,16},{26,89,30},{95,56,79}},
	B = {{58,48,26,60,44,22,61,79,91,28,36,70,23,57,78,91,40,67,21,58,45,25,14},{73,34,82,81,86,27,41,77,76,6,55,28,45,56,13,1,30,80,10,97,5,79,18},{23,78,27,87,93,29,70,25,66,69,69,4,82,64,97,95,54,2,74,76,64,56,90}},
	C = {{1297,2698,1098,3117,3130,1059,2611,1567,2834,2218,2347,840,2571,2418,3509,3571,1942,806,2292,2805,2247,1897,2678},{10343,11686,8813,16011,15591,5485,12422,12287,16356,7871,11305,7120,10790,12522,14189,14297,8966,9756,7980,15922,8676,10856,9190},{10599,10662,9713,15627,15491,5325,11426,12263,15628,6715,11001,6512,10338,11962,12037,11721,8278,10260,6956,16022,7288,11364,8246},{8331,6174,7106,9975,9458,3441,7241,9833,11122,3106,6657,5888,5481,7858,6895,6861,5074,8958,3032,10691,3949,7323,3386},{8695,6614,8784,11379,11588,3845,7335,9657,11110,3332,7901,4432,7063,8386,6095,5305,5330,8922,3656,12421,3535,9361,4666},{11415,12626,9195,17109,16343,5893,13621,13792,18115,8447,11951,8534,11183,13607,15801,16206,9746,11003,8401,16946,9611,11223,9448}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 32")
	end.

test_33() ->
	A = {{72,50,42,6,70,51,43,80,19,81,12,66,85,34,33,69,40,28,88,48,94,30,84,1,98},{16,90,76,56,57,81,11,83,11,17,55,31,12,31,93,34,13,71,42,21,7,61,6,72,3},{59,98,7,25,1,87,86,43,67,27,46,66,83,72,20,14,87,63,5,38,14,37,34,73,68}},
	B = {{7,48,24,13,2,15,41,26,83},{49,92,88,63,80,93,32,95,20},{17,32,84,70,34,2,85,79,33},{46,88,94,59,34,13,52,86,73},{33,9,9,79,18,34,73,24,43},{53,65,46,36,39,1,47,38,33},{75,96,17,90,29,64,60,56,93},{5,78,33,62,88,33,4,8,14},{46,79,92,32,85,65,69,3,86},{58,2,8,94,70,62,37,64,54},{94,90,50,13,16,94,36,63,95},{47,84,22,20,92,37,58,82,68},{74,63,87,76,15,59,49,12,7},{41,50,64,40,15,86,31,81,18},{61,61,19,62,74,14,33,54,72},{34,57,78,17,87,37,79,76,53},{6,46,1,40,97,31,53,20,24},{53,30,8,46,59,65,68,8,27},{9,82,15,18,29,72,99,24,32},{6,94,70,68,46,15,13,14,64},{53,34,43,31,46,94,71,56,35},{79,4,57,55,29,86,89,87,51},{50,48,34,36,72,84,73,9,9},{40,57,27,34,91,54,98,70,83},{79,47,36,59,28,89,81,83,47}},
	C = {{56565,71948,53702,65453,65460,71860,76040,59973,55357},{45863,61251,47859,52221,56663,47892,57949,56073,49814},{58448,76911,54915,59028,64912,67134,65430,59207,58883}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 33")
	end.

test_34() ->
	A = {{39,46,13,6,88,99},{30,48,44,37,41,43},{11,59,67,49,29,63}},
	B = {{58,20,12,33,77,79,8,41,15},{57,11,33,76,33,48,58,39,50},{10,17,59,49,22,88,28,78,35},{48,89,51,3,32,72,19,35,25},{81,57,57,38,16,28,85,16,25},{89,32,12,73,72,66,32,8,12}},
	C = {{21241,10225,9263,16009,13535,15863,14106,6817,6878},{13840,8882,9280,11602,9798,15196,9820,8829,6856},{14979,10038,10940,13978,10836,18095,10798,10661,8166}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 34")
	end.

test_35() ->
	A = {{13,84,80,34,61,64,84,34,29,2,94,42,17,44,44,26,5,93,88,19,71},{88,89,51,37,17,85,70,48,89,78,42,63,5,31,33,8,9,15,57,26,44},{1,69,85,56,89,94,42,57,27,91,45,20,35,59,22,84,29,69,74,43,23},{1,76,64,99,8,9,99,36,31,57,57,6,64,34,21,23,22,67,73,76,20},{67,46,72,6,91,19,44,65,63,49,11,22,2,65,99,86,11,8,31,60,48},{20,48,43,79,38,25,70,54,84,36,68,50,85,7,53,63,72,71,67,54,85},{51,14,77,70,91,52,81,76,57,33,67,48,84,55,70,23,82,6,9,50,4},{31,2,44,25,56,50,89,23,90,63,81,72,10,6,27,99,88,65,36,75,64},{82,83,31,72,40,33,67,18,82,4,33,44,21,74,67,6,85,45,28,31,83},{63,65,84,13,27,27,18,16,44,23,44,98,22,51,26,42,85,41,90,48,4},{50,65,98,58,71,33,41,90,59,27,28,70,5,13,12,35,41,76,89,79,75},{55,15,87,47,85,69,37,92,26,81,70,27,22,59,76,40,31,42,91,70,13},{46,12,73,19,51,13,77,65,66,71,46,28,89,55,31,37,97,33,72,21,50},{38,50,72,29,94,93,72,42,79,47,67,5,2,83,81,15,8,16,10,94,85},{27,84,16,1,39,23,4,11,85,24,69,75,62,69,88,32,63,12,80,45,75},{27,88,41,49,10,26,87,30,26,7,77,4,79,81,55,40,84,67,96,54,40},{28,39,23,65,55,42,62,78,57,12,27,57,60,48,28,86,16,70,79,18,99},{6,47,71,11,52,55,24,47,11,90,12,12,84,82,1,97,7,8,37,93,53},{48,30,41,58,68,22,48,77,33,78,60,43,28,24,41,18,94,51,31,82,1},{15,69,47,29,91,24,4,95,3,52,66,9,82,76,85,23,84,37,63,75,21},{64,18,87,76,43,77,66,64,77,30,58,39,90,21,51,58,14,39,8,50,66},{7,90,48,65,1,98,50,69,94,62,38,48,15,37,98,57,10,20,56,15,18},{79,64,81,94,89,84,86,74,19,90,52,76,85,66,8,1,1,70,78,55,26},{34,6,79,86,83,57,32,22,84,91,87,43,48,12,65,54,2,57,17,36,31},{41,14,70,54,43,28,80,26,8,2,69,37,84,16,99,98,38,56,83,24,71},{29,30,96,72,41,46,58,58,17,15,3,95,18,10,18,37,15,55,45,57,51},{33,90,42,95,34,81,4,62,15,45,91,75,90,22,43,60,43,91,55,1,91},{62,60,37,56,32,47,67,46,49,34,8,52,33,60,7,24,23,28,58,99,70}},
	B = {{98,98,27,56},{99,79,55,27},{49,20,29,96},{18,57,33,27},{5,36,57,98},{24,57,91,10},{10,25,71,59},{51,24,28,10},{11,26,66,31},{30,36,42,20},{31,89,36,89},{15,91,44,64},{47,92,14,77},{42,68,47,73},{53,81,27,39},{7,85,71,22},{12,34,45,29},{58,53,21,79},{96,41,30,16},{7,93,41,25},{33,15,45,11}},
	C = {{43999,55091,45992,52466},{42865,54173,46885,40044},{41243,59399,52037,50755},{37590,52158,38695,43512},{36505,53686,44140,43869},{41483,64235,49864,51460},{35027,62002,47760,56964},{29621,59291,52963,49306},{41315,57414,45925,46431},{40100,56326,39552,45591},{44839,57125,47493,49466},{44701,62707,47972,53024},{39151,53261,43873,50632},{36144,57635,52606,50298},{40653,60390,42622,43749},{46384,62689,44605,49951},{39613,56304,46713,44795},{31132,52022,41359,39189},{33502,54739,40540,45376},{42948,61423,41104,50081},{37749,61962,48282,51956},{39493,55455,48038,36782},{52496,72460,54108,63888},{32386,57655,45066,52072},{40397,61283,42934,51011},{31065,46345,37545,40366},{48626,69319,48326,52012},{36809,53924,43026,39188}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 35")
	end.

test_36() ->
	A = {{73},{55},{52},{75},{79},{66},{86},{2},{99},{17},{75},{40},{50},{10},{48},{1},{4},{33},{13},{50},{78},{69}},
	B = {{61,55,20,70,73,17,96,73,28,10,13,62}},
	C = {{4453,4015,1460,5110,5329,1241,7008,5329,2044,730,949,4526},{3355,3025,1100,3850,4015,935,5280,4015,1540,550,715,3410},{3172,2860,1040,3640,3796,884,4992,3796,1456,520,676,3224},{4575,4125,1500,5250,5475,1275,7200,5475,2100,750,975,4650},{4819,4345,1580,5530,5767,1343,7584,5767,2212,790,1027,4898},{4026,3630,1320,4620,4818,1122,6336,4818,1848,660,858,4092},{5246,4730,1720,6020,6278,1462,8256,6278,2408,860,1118,5332},{122,110,40,140,146,34,192,146,56,20,26,124},{6039,5445,1980,6930,7227,1683,9504,7227,2772,990,1287,6138},{1037,935,340,1190,1241,289,1632,1241,476,170,221,1054},{4575,4125,1500,5250,5475,1275,7200,5475,2100,750,975,4650},{2440,2200,800,2800,2920,680,3840,2920,1120,400,520,2480},{3050,2750,1000,3500,3650,850,4800,3650,1400,500,650,3100},{610,550,200,700,730,170,960,730,280,100,130,620},{2928,2640,960,3360,3504,816,4608,3504,1344,480,624,2976},{61,55,20,70,73,17,96,73,28,10,13,62},{244,220,80,280,292,68,384,292,112,40,52,248},{2013,1815,660,2310,2409,561,3168,2409,924,330,429,2046},{793,715,260,910,949,221,1248,949,364,130,169,806},{3050,2750,1000,3500,3650,850,4800,3650,1400,500,650,3100},{4758,4290,1560,5460,5694,1326,7488,5694,2184,780,1014,4836},{4209,3795,1380,4830,5037,1173,6624,5037,1932,690,897,4278}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 36")
	end.

test_37() ->
	A = {{93,73,90,21,62,27,54,23,5,39,49,14},{10,24,69,28,7,64,85,87,19,14,62,24},{9,4,21,75,30,90,95,5,15,51,74,41},{4,31,68,81,95,78,82,69,4,22,34,9},{53,4,62,64,90,91,12,1,63,40,72,24},{46,40,12,74,3,32,42,56,82,94,19,94},{53,36,32,66,31,30,35,8,78,9,1,56}},
	B = {{37,54,39,60,74,64,87,96,6,60,6,17,48,43,5,96,63,61,43,97,80,42},{35,72,19,66,50,2,55,79,64,67,70,29,43,55,6,8,47,39,78,24,60,71},{22,51,88,57,28,20,37,72,62,63,84,17,18,84,1,21,90,20,53,62,29,53},{25,81,26,8,35,15,21,28,77,55,5,12,19,2,25,8,4,64,84,40,71,89},{99,88,36,49,60,12,67,41,5,99,75,24,14,12,42,48,27,74,37,16,87,4},{95,48,27,87,61,49,23,43,38,36,88,11,94,90,80,2,38,5,44,33,18,44},{56,48,94,26,98,29,76,2,58,29,89,27,46,54,24,18,87,99,15,89,35,80},{66,78,69,22,80,80,3,77,28,19,37,49,9,86,34,42,70,70,99,85,28,84},{33,56,52,2,30,84,68,6,66,51,85,62,35,34,16,27,96,13,62,25,40,56},{3,82,48,42,65,69,13,38,35,61,79,2,78,5,33,80,93,70,2,19,33,29},{11,9,1,36,79,23,72,53,75,90,45,9,74,4,9,95,35,43,61,88,45,78},{45,80,7,45,93,99,36,79,97,71,36,8,55,44,60,24,93,70,65,12,57,24}},
	C = {{23197,32746,25383,27035,34144,19310,29704,32560,24267,34447,32231,10791,23332,24861,11008,24784,33606,29225,27083,31183,28825,28985},{23134,27299,25509,20314,33076,21497,20795,24344,26585,24317,30992,11761,21758,27538,14139,16572,31714,25634,27822,30613,18781,32107},{23287,28798,20599,21162,34503,20594,23157,19656,28909,28763,31393,8072,27936,19406,17924,17976,28376,28167,23313,25949,22539,29625},{31692,36953,28191,24462,35672,19280,24198,26096,27045,32203,36083,12498,22210,27051,18479,17112,30103,32049,30957,29463,27303,33080},{27429,33814,21593,25629,32715,23651,28359,26974,27264,37264,34608,11199,27396,21525,17749,24011,30885,25493,28804,26196,29186,27780},{22028,40145,23771,20957,37871,34793,24047,28904,33758,32297,31940,13531,27814,22804,18155,22691,41046,32845,32184,25364,28152,32534},{19114,28499,17932,16213,24900,21331,22121,20618,24207,25147,23634,11003,17444,17894,11891,13355,27325,21577,24666,18791,23354,23319}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 37")
	end.

test_38() ->
	A = {{65,11,71,70,25,58,16,3,34,24,7,3,78,43,94,41,75,5,7,77,60,36,28},{33,70,26,55,88,50,21,58,87,9,48,50,83,67,61,32,45,4,65,63,81,55,46},{37,33,43,89,37,33,90,20,75,69,13,25,81,31,16,71,88,23,36,5,46,1,51},{92,33,48,1,7,91,32,11,93,37,44,27,20,19,43,22,93,95,91,7,97,42,73},{89,29,89,6,82,2,74,65,68,98,1,24,80,93,19,51,68,75,96,39,62,68,66},{38,41,89,69,69,67,6,55,84,51,4,11,84,22,67,54,81,63,29,49,40,10,78},{7,72,61,83,9,95,65,3,2,69,13,88,4,32,18,68,15,30,6,83,85,67,69},{85,15,27,79,87,28,56,74,26,59,48,44,84,60,48,61,12,23,62,92,25,81,2},{74,57,95,58,22,69,83,89,39,97,60,41,45,91,51,34,73,52,46,19,36,49,54},{71,84,83,45,20,49,90,30,60,93,72,37,57,41,67,17,99,96,2,71,69,28,51},{99,22,54,15,46,45,9,42,27,52,40,93,1,79,5,1,4,93,32,2,67,58,79},{38,38,5,82,96,42,85,75,75,92,95,46,48,4,85,8,1,42,62,52,90,80,34},{54,6,63,31,53,54,62,61,53,56,74,73,9,79,54,22,37,23,46,50,61,21,57},{68,89,16,76,26,43,52,95,16,65,36,28,55,81,27,70,16,61,63,78,95,35,73},{84,89,92,90,65,41,8,88,95,48,12,38,80,32,91,31,7,92,44,8,95,17,95},{79,33,59,2,73,99,62,19,53,61,38,4,5,63,6,25,57,28,31,72,50,52,40},{6,28,93,69,75,8,97,64,87,4,68,95,16,2,61,66,83,52,97,58,7,40,39},{64,76,6,88,19,11,48,5,60,59,71,49,44,43,62,82,47,75,32,46,19,63,74},{87,17,89,58,48,99,76,20,10,72,67,13,13,60,9,46,84,15,64,1,60,85,74}},
	B = {{63,35,94,61,45,4},{68,54,54,10,72,91},{87,33,86,56,93,67},{71,47,9,83,91,75},{25,33,36,56,40,94},{53,44,81,27,68,6},{86,14,16,43,86,9},{39,63,88,57,81,17},{45,1,34,10,33,50},{80,38,27,29,33,2},{81,32,22,30,3,44},{21,70,69,74,83,92},{12,52,23,77,44,45},{17,76,82,21,39,97},{76,26,88,69,76,87},{93,16,95,88,30,26},{19,69,76,8,18,4},{74,78,19,32,1,41},{18,7,71,38,86,29},{1,19,30,63,25,80},{78,54,68,56,28,5},{28,75,64,41,76,8},{12,26,69,85,84,84}},
	C = {{45908,37841,56128,49250,49570,43226},{52038,49165,67992,57943,64986,61547},{53875,38953,52488,49661,54684,41444},{57679,45643,68419,46770,55204,38960},{63157,55986,77978,62893,70533,55996},{56780,46639,66374,58196,61823,56035},{56329,45422,58366,54525,62055,49329},{55125,48255,63614,62608,63809,53577},{71008,58500,78258,60687,75027,56055},{73281,57257,70017,58901,65573,57852},{47173,47219,59191,46324,51370,44821},{67303,49812,62002,62439,69184,55538},{54696,44443,64685,52866,59713,51967},{63549,54623,71750,64014,68008,57038},{71611,56028,77533,69364,76795,67877},{49601,40231,59069,42584,50446,40140},{60510,44898,66164,60178,70624,60612},{60347,47126,59650,56693,58310,55656},{62116,48868,70900,53916,65876,41593}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 38")
	end.

test_39() ->
	A = {{76,51,89,13,54,38,30,51,53,97,36,43,82,95,58,1,57,87,39,1,80},{27,86,26,59,15,80,23,62,87,14,75,80,96,17,46,19,11,55,69,51,25},{47,22,95,95,39,33,75,52,4,59,83,32,56,44,75,55,88,24,40,37,98},{94,98,30,68,5,69,35,12,76,42,6,68,76,7,74,8,19,82,65,42,15},{39,42,24,25,69,85,70,18,84,57,76,46,96,21,8,68,63,11,20,49,24},{24,75,82,52,30,88,23,55,60,51,80,22,63,45,37,92,40,48,24,36,12},{65,32,51,28,82,33,26,19,19,15,21,63,31,75,42,19,25,45,95,37,90},{25,48,89,38,21,38,82,93,76,54,60,87,74,80,17,65,41,41,86,3,92},{76,79,85,74,9,60,32,32,21,40,55,51,18,6,81,23,80,71,2,80,31},{22,2,17,29,24,23,39,87,92,74,16,20,11,63,68,63,53,88,2,50,62},{99,95,40,73,18,89,46,56,44,36,77,37,47,63,16,85,4,22,10,75,83}},
	B = {{89,69,29,16,60,8,26,45,27,31,8,29,56,26,20,32,59,63,67,24,94},{34,34,40,1,55,62,93,30,87,28,61,4,60,80,97,76,4,5,72,81,75},{63,49,39,74,35,96,93,72,76,55,62,57,45,32,86,23,97,64,71,74,46},{10,50,33,65,16,82,16,53,64,78,54,28,78,53,21,78,8,66,68,41,66},{3,16,39,23,54,63,15,42,59,23,1,10,47,30,92,78,32,90,25,47,15},{92,85,39,99,51,56,59,48,39,26,22,93,56,70,25,8,91,29,26,15,36},{14,5,34,97,63,87,8,51,30,71,17,54,63,44,38,2,48,72,28,84,91},{64,38,7,60,44,53,20,38,27,92,39,1,32,17,24,23,15,4,38,27,79},{82,97,94,73,3,24,36,2,85,76,32,42,76,57,11,80,29,36,21,44,90},{50,46,29,51,23,72,29,75,19,91,79,70,93,46,88,61,68,69,84,91,41},{29,37,14,75,13,98,94,79,38,7,75,77,58,4,52,79,12,23,69,63,26},{76,37,66,67,88,60,77,83,75,30,97,40,62,70,8,32,3,69,87,21,10},{32,64,93,48,17,37,77,10,57,64,25,20,77,97,72,17,70,93,24,3,90},{99,21,78,45,45,41,53,71,66,39,11,87,10,57,17,14,68,98,8,77,8},{38,67,73,68,46,76,29,3,50,42,1,18,85,56,42,29,13,99,65,35,96},{24,29,28,32,8,52,39,85,69,34,35,98,76,39,94,85,28,69,14,94,61},{6,14,22,8,5,92,72,97,52,23,98,74,50,97,78,66,25,68,37,44,69},{57,50,61,32,73,13,97,32,79,29,42,37,16,19,99,99,94,47,95,35,76},{96,77,14,23,65,44,24,73,8,19,97,37,64,20,78,85,47,21,13,96,87},{38,21,45,76,51,10,76,13,93,79,41,2,74,33,97,41,57,89,79,20,43},{18,9,1,84,60,51,40,61,65,38,8,64,45,40,33,9,76,87,48,69,95}},
	C = {{59865,50747,50776,57189,48685,62157,60757,57278,61326,52259,46450,52147,61008,54548,62898,50437,60065,70899,57881,58931,70321},{54511,52987,48046,57063,43190,54121,58206,44554,58885,47373,47789,39957,61947,50933,53204,51352,41841,52561,51906,45746,65189},{46738,44832,41544,65172,44322,74606,57236,64586,60984,54233,50621,55970,68095,53453,63841,51324,52007,74339,58422,62718,72895},{54586,53895,48629,49973,45369,48658,53211,40949,56555,46245,43428,36549,61757,51534,53275,50000,44781,55489,55095,44638,69061},{44564,44502,44353,55089,35598,56839,52041,49844,55036,46103,42692,48968,62430,51713,56373,48341,44254,59659,44021,48950,58824},{50811,48725,44492,55956,36927,61088,59061,52952,59820,48039,46407,51358,61390,49913,61672,53310,47348,56740,50453,54670,61310},{48263,38508,36964,45953,45555,47780,44744,48315,50082,36431,36715,39628,48939,40246,49747,42045,44923,58836,43149,48836,54622},{62890,52000,49419,67876,50720,70663,61580,66786,65181,57826,56176,59134,67633,56457,62046,54024,55667,68814,54832,68443,75721},{45898,44369,40843,53701,42359,58991,58961,49471,59575,46154,46664,42183,59742,48737,58548,48974,44592,59293,61383,46971,63390},{44144,38683,39983,50656,34932,46622,42369,42553,52018,48570,34305,42494,50799,40356,48113,44806,42132,56449,44728,46513,58878},{55185,48140,43330,62270,45954,59045,58440,55574,64098,52064,42451,52330,65256,51293,57494,49965,50550,63625,56076,57096,68364}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 39")
	end.

test_40() ->
	A = {{35,9,75,75,37,55,58,5,34,10,43,74,18,27,17,80,44,21,70,28,17,30,33,89,14,54,76,24},{96,52,80,63,10,2,20,89,27,83,13,50,40,10,15,54,63,72,84,70,95,76,54,43,58,86,51,96},{32,38,65,14,57,73,48,92,71,10,89,74,16,83,98,29,84,21,10,42,97,85,67,6,46,81,24,5},{97,61,88,12,80,43,32,71,27,8,43,88,7,98,31,81,79,68,5,5,37,41,10,93,42,35,9,18},{64,79,72,89,17,26,2,74,82,13,27,58,15,15,81,32,19,17,39,70,61,83,29,88,15,58,29,79},{12,3,88,6,6,48,40,17,16,43,57,64,32,33,30,65,5,13,90,30,34,89,33,13,83,58,42,94},{41,16,27,25,26,45,84,4,53,2,71,74,82,9,94,2,72,65,57,96,70,49,55,10,48,83,64,90},{71,97,67,12,1,7,20,8,38,8,31,13,6,5,26,75,51,86,90,74,13,54,87,88,47,65,75,84},{13,45,99,66,75,66,63,20,97,22,83,71,44,63,4,70,47,32,71,79,62,42,72,64,65,75,99,42},{76,5,46,24,71,7,84,47,51,2,51,61,42,39,73,58,36,95,89,59,91,31,22,65,74,66,16,69},{56,23,23,39,69,90,99,30,56,33,82,13,28,24,3,47,75,88,59,1,43,82,77,7,46,35,25,83},{14,80,78,38,90,91,77,73,39,62,31,31,90,24,39,92,71,3,73,97,65,76,29,9,32,63,81,2},{75,43,28,67,38,70,74,22,13,28,14,61,67,47,54,8,93,14,57,79,21,86,87,94,47,23,71,87},{59,2,35,5,96,67,19,58,71,17,12,82,30,13,32,2,30,88,64,35,12,13,50,62,88,40,34,26},{95,9,61,25,89,47,58,30,55,59,40,48,18,75,80,40,42,62,67,28,19,25,8,52,50,7,81,87},{87,31,7,9,82,20,8,95,3,80,62,35,99,7,29,95,37,12,19,51,81,5,67,71,43,69,69,61},{76,34,59,40,84,7,6,67,22,5,77,90,59,40,45,36,27,21,16,26,15,72,25,34,69,49,2,76},{95,15,43,73,99,18,56,45,39,43,9,82,12,63,64,81,95,29,51,81,36,46,41,75,53,3,42,97},{75,91,36,66,73,19,42,7,66,10,83,55,97,96,2,9,68,39,36,21,42,76,9,36,6,16,71,87}},
	B = {{48,88,61,12,1,53,66,68,38,72,12,5,93,85,5,62,3,36,51,65,37,96,64,45,75},{42,45,95,84,4,42,12,81,79,23,36,43,91,25,87,39,27,12,23,23,64,13,47,70,25},{79,22,46,92,29,76,70,16,81,95,64,94,46,84,28,84,54,53,92,2,81,33,28,37,39},{7,87,83,33,99,40,68,78,84,97,94,41,88,3,9,76,88,7,89,65,28,67,79,54,35},{20,94,52,46,59,1,67,1,60,47,74,94,34,10,24,48,15,10,85,54,27,39,82,23,80},{96,38,70,65,48,58,96,29,74,2,53,93,41,46,82,25,62,85,21,60,7,60,58,22,82},{25,72,5,76,11,90,83,46,23,72,67,76,22,10,78,56,67,74,46,48,31,98,82,15,90},{92,46,50,64,88,26,95,35,1,77,17,89,85,9,4,42,85,27,33,49,89,86,1,48,82},{79,27,64,60,46,8,3,64,51,78,19,93,67,76,98,16,32,93,99,33,85,55,93,49,68},{81,11,63,64,16,31,29,62,47,19,69,65,57,29,54,43,22,30,21,1,33,81,84,95,81},{68,3,96,18,10,48,69,31,20,45,13,8,31,69,85,58,94,5,98,61,96,51,89,97,68},{80,55,6,39,3,29,85,43,6,63,9,13,65,81,84,6,73,63,68,92,27,82,97,16,72},{57,55,9,29,46,13,46,28,9,55,85,93,63,76,32,28,29,46,99,57,30,98,85,30,48},{63,82,57,94,70,77,42,53,74,16,4,4,64,45,81,42,52,74,48,97,14,42,96,64,41},{90,17,43,18,89,75,59,23,27,57,50,67,50,68,42,82,5,68,71,26,1,25,18,79,36},{44,86,47,94,4,78,41,97,30,21,26,44,46,98,7,63,17,18,47,60,8,97,98,80,89},{69,6,52,31,43,85,20,47,42,10,98,64,80,36,67,37,62,23,52,56,50,86,63,66,55},{11,53,52,13,8,75,15,36,47,74,57,82,40,90,73,69,51,49,49,94,23,86,12,98,51},{1,3,3,29,77,22,87,95,1,51,94,28,28,21,67,93,23,25,46,7,89,91,83,52,58},{76,86,35,20,87,75,51,1,40,99,97,85,81,52,14,29,19,27,16,87,63,88,96,57,98},{68,84,24,86,15,22,28,22,94,5,63,1,99,43,69,10,53,56,78,95,49,75,78,44,72},{65,63,44,14,35,29,43,86,65,28,10,82,58,30,12,94,30,12,52,49,83,42,89,83,65},{85,19,73,85,37,33,27,39,23,72,99,5,71,43,33,90,9,46,37,96,21,80,35,2,2},{33,88,51,67,83,80,91,91,72,30,73,50,29,72,42,20,24,26,57,17,84,71,82,76,72},{55,23,96,74,57,98,22,55,16,65,84,2,64,85,56,27,88,91,21,27,71,73,14,18,81},{65,58,37,21,36,6,83,94,17,63,16,33,10,13,30,70,22,69,97,69,65,28,33,81,85},{21,46,63,15,34,30,42,98,96,5,59,92,45,92,21,15,60,45,73,40,53,79,96,34,43},{80,26,56,19,27,38,75,88,16,32,11,5,6,94,78,3,58,77,43,16,57,69,48,69,34}},
	C = {{58664,60580,55269,56425,48272,57426,70961,69279,54134,56814,62075,60584,57656,63662,53250,56623,51944,49060,71844,57942,56663,79970,83345,59315,72328},{88492,76137,76353,71444,60763,70349,83088,90665,65732,79821,80725,74298,90177,82469,67189,75697,66267,65402,85951,77633,83652,110200,95151,87586,95924},{96747,68757,74672,74261,60968,68581,78599,67242,64112,70178,66409,74698,85483,71669,74206,71174,67609,69311,88362,84292,71904,89641,90407,76393,91358},{74884,73151,68214,70891,49080,70884,73726,68366,61360,61657,56639,64798,74789,74123,63684,61123,58267,56241,75623,71316,62325,85167,82951,71967,83717},{80193,69357,69503,61510,61870,59763,75875,76835,62960,71483,62182,68690,78277,70903,59544,63492,55468,56830,79945,64142,73567,83113,84486,76256,79471},{69120,48313,54472,55284,43231,55254,67264,67177,43662,54734,54296,52854,53994,67029,57015,57254,53221,56275,64828,52162,61668,76804,74834,61041,71824},{83707,64635,64392,55148,56828,66769,77201,70507,54087,73533,76275,72192,73859,79341,74255,64609,62466,70616,86217,78462,68519,97653,91761,73382,86649},{67859,60727,69495,59630,49068,67020,66036,82736,56934,65270,69526,62345,67984,78045,60647,66796,48235,54074,69183,61773,71566,88214,80032,75429,74305},{91471,82122,84918,84879,68469,76866,89672,89315,77820,82488,88872,86822,87759,89496,82873,75650,76037,75354,101527,86643,85995,109810,116029,82506,102544},{77224,76194,65320,66614,59807,72333,82204,75085,55965,77653,74520,69111,75567,81163,71962,69580,62283,68711,87017,77638,72472,102059,91603,78067,94720},{73436,61343,70590,62621,46659,63503,71494,72290,55926,62587,68513,68444,68040,67918,71608,67666,62556,60573,75337,71570,64161,93648,86177,70316,82734},{88743,78605,73584,79151,65647,69958,84868,78906,71280,72165,87564,96683,87914,72921,68487,74712,64977,63389,88227,77580,75815,104521,107026,78666,101532},{83238,74068,72782,65597,66612,74157,83749,82044,65196,70132,84146,75029,81815,76820,68467,67993,62098,64702,78914,75385,69711,103212,99647,72657,86370},{63691,55038,56982,52410,50732,52573,64853,55909,44391,62542,62127,62766,60475,64626,57481,51025,49479,57145,64873,59781,56672,79816,67851,53221,74310},{73783,66414,68776,61724,56410,68613,76731,73179,60573,64863,66876,71379,69449,79624,67901,62470,57907,64466,78086,63752,62732,92614,90146,72742,84273},{78831,70848,67681,64298,51976,56265,74428,71494,52392,60468,69264,64825,75489,73965,53332,56854,52625,52854,77144,70598,64185,97402,87707,71406,87095},{70914,60207,61591,52184,48064,53118,69363,60615,44334,63583,50760,54568,64973,66211,52711,56343,54174,49964,72995,61579,61382,75658,73810,62709,73206},{82290,80741,73433,70242,66069,76870,83233,80256,64469,74318,79153,73264,84111,81505,66658,67727,62375,63282,81918,76617,67823,105648,102065,77523,93497},{70250,69978,69811,58655,50028,57729,68865,75077,65213,60143,61646,66893,75628,72456,71039,57839,61302,55086,84919,70756,67704,86784,98584,72861,76039}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 40")
	end.

test_41() ->
	A = {{88,34,84,93,21,74},{64,27,76,87,42,52},{13,24,58,68,45,19},{45,17,79,42,65,21},{17,28,64,49,10,44},{74,79,43,83,28,86},{78,9,21,98,77,48},{52,91,95,42,13,35},{73,92,96,7,21,62},{41,94,65,28,19,86},{56,82,94,98,17,26},{57,71,31,71,90,86},{61,25,77,36,62,84},{18,57,50,2,18,95},{11,74,42,53,20,56},{17,37,79,88,53,62},{95,64,76,52,35,49},{23,71,94,97,87,4},{41,38,76,55,40,95},{70,15,9,60,91,81},{46,67,23,29,63,69},{14,70,74,66,74,66},{83,57,46,64,45,35},{8,93,48,50,28,83},{58,81,41,26,87,55},{12,49,25,61,44,28},{7,40,51,77,54,3}},
	B = {{37,89,29,72,26,8,79,88,31,17,33},{8,77,56,72,8,29,35,12,96,70,56},{11,42,29,73,52,2,57,42,91,29,12},{3,75,16,1,34,23,61,25,93,70,91},{87,66,79,57,9,94,70,53,41,36,79},{93,47,50,61,85,21,80,58,24,99,83}},
	C = {{13440,25817,13739,20720,16569,7525,25993,19410,24922,20904,22080},{12171,22708,12882,17753,13588,8488,22740,16565,22553,17932,20087},{7197,14404,8996,10690,7878,7109,13991,9055,16610,11844,13789},{10404,17059,11405,15259,9212,8528,17445,13195,17291,11605,14085},{6666,12760,7691,11215,9490,4067,13180,8827,15062,12251,11798},{14526,26590,15657,21080,15176,9316,24965,17813,24722,23367,24285},{14646,23205,13426,15212,11297,11427,22882,17169,18616,16949,22315},{8209,21278,12808,20149,11540,6168,18980,13427,24272,16882,15706},{12107,22438,14924,23874,13323,6881,21316,16444,22831,17849,16155},{12719,21013,14587,20822,13631,7420,20152,14161,21657,20320,18584},{7953,24940,13153,19451,12695,7412,21900,14719,28597,19464,19987},{19059,27149,19074,21926,14196,14476,26266,18703,23761,23562,26938},{16618,21328,15076,20507,14712,9787,23339,17960,19204,18088,19483},{12079,13894,11368,15873,11829,5630,15249,10882,13784,15939,13875},{8568,16368,10909,13795,9804,6593,14966,9253,18360,16559,16062},{12435,20692,13551,16546,13585,9675,21179,13863,23113,19376,20922},{12621,25088,14590,22032,13182,8283,23619,18317,23452,18050,19195},{10685,24667,15994,18930,10475,12924,21987,14092,28767,18405,21895},{15137,20997,14311,19366,15627,8602,22656,16261,20870,20256,20443},{18439,22076,15330,16965,12152,12648,23078,17739,15684,17996,22630},{14476,19795,14644,17644,10346,10395,18989,13884,16887,17268,18889},{14666,22680,16674,19760,13292,12150,22260,14580,24644,21102,22600},{11395,23123,13262,18202,10562,8846,21028,15935,20868,16300,18767},{11873,19388,13994,17485,12455,8382,18273,11384,21334,20763,19699},{16007,23398,17446,21341,10630,12826,21830,16249,20610,18242,20746},{7726,14686,9669,10494,6854,7694,13129,8175,15500,12985,14791},{6348,15325,9570,10445,6513,8228,13577,8199,18145,12029,14605}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 41")
	end.

test_42() ->
	A = {{57,95,3,15,77,47,21,50,50,22,62,57,65,60,18,90,38,87,90,26,42,35,40,83},{1,87,72,88,34,42,64,88,4,51,6,65,17,39,93,30,25,70,96,30,91,19,88,23},{79,31,9,77,15,93,6,66,95,57,37,15,56,92,47,12,45,75,52,59,66,79,92,55},{80,29,96,71,27,99,65,88,64,73,86,5,64,79,47,49,51,62,25,25,53,58,65,48},{46,84,33,79,3,31,50,30,83,60,1,7,91,17,34,62,64,59,74,30,5,47,83,51},{72,9,38,54,60,83,33,22,51,79,25,60,17,19,92,42,96,62,88,90,59,87,83,35},{81,77,47,70,38,84,12,43,73,48,67,76,19,6,42,58,79,99,9,62,94,22,21,8},{43,42,37,31,9,14,54,28,68,67,7,66,75,13,31,91,22,73,72,10,64,78,98,61}},
	B = {{96,86,95,68,46,22,67,78,44,23,93,99,71,89,25,39,32},{27,64,92,34,76,4,94,90,86,5,74,70,57,66,5,80,10},{95,42,15,15,70,81,56,15,58,84,34,29,86,61,90,93,27},{69,36,20,56,25,60,12,58,83,23,14,65,85,78,12,34,67},{90,7,20,84,93,62,92,33,24,75,53,95,17,3,44,5,95},{75,2,59,16,70,55,88,99,25,60,2,57,13,1,63,24,2},{90,28,82,38,55,64,82,33,22,57,76,89,20,46,90,45,6},{60,48,26,51,40,90,3,99,96,1,39,28,63,74,46,40,70},{96,4,79,29,71,4,60,43,70,80,79,12,58,97,31,29,44},{56,31,16,81,76,35,60,84,1,96,61,65,38,86,97,66,36},{58,19,98,25,10,38,59,96,59,61,18,64,81,49,33,59,91},{89,23,64,48,9,93,60,64,23,95,51,19,45,7,64,55,68},{71,82,56,93,6,65,10,69,99,81,18,90,93,25,91,69,27},{41,86,28,49,59,73,61,44,8,75,52,57,65,89,4,78,3},{10,35,54,59,4,15,26,83,3,86,40,15,19,38,82,55,41},{48,12,52,34,91,51,79,49,24,57,62,28,24,58,90,33,56},{99,47,75,14,65,23,23,87,83,86,44,15,3,9,79,62,31},{46,16,20,94,75,1,66,55,33,73,15,7,57,48,60,35,84},{76,11,49,96,93,78,95,29,20,51,98,29,73,53,63,89,85},{33,51,36,47,22,83,96,86,32,47,73,91,79,24,60,49,85},{96,28,28,50,86,36,79,37,51,40,78,40,43,41,68,89,62},{61,34,13,26,22,34,33,65,47,99,3,83,15,1,8,73,58},{76,22,69,24,14,54,79,65,29,6,30,55,52,42,84,86,44},{27,74,63,41,82,45,86,79,34,17,10,14,20,57,18,40,21}},
	C = {{77888,45722,66389,65129,72265,56808,81908,79298,54428,66204,59375,59861,60023,58768,61440,65628,61601},{78341,41466,55514,62653,65175,63199,74501,74994,52035,63109,58930,55509,61511,59530,71573,73984,60111},{85437,50567,64139,64391,65942,58997,76842,88297,58907,71246,57068,66292,66928,66996,63721,72466,60520},{95225,53675,69918,64876,73124,67596,80654,92081,65028,79663,59522,72638,72023,73161,76803,77784,61315},{73344,43349,60014,56630,59972,48849,65921,72256,55675,60475,52905,55995,57726,59053,62708,63953,48535},{91676,44222,65619,66780,69993,63571,84355,88416,51953,83081,64109,67262,60099,57026,79178,74628,69130},{84958,41255,64632,58069,66790,51948,75798,83422,59129,70679,58764,58660,61130,58185,66857,64257,62883},{77747,40066,58019,59013,62063,53244,71598,69455,49070,66383,54984,54022,55574,56575,68644,67872,54868}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 42")
	end.

test_43() ->
	A = {{87,61,37,58,32,42,59,41,89},{38,34,86,91,70,23,50,80,45}},
	B = {{53,22,65,52,55,51,65,18,38,89,25,83,46,60,63,97,78},{79,63,73,4,77,36,68,99,29,4,30,33,65,92,52,9,84},{22,65,9,34,2,81,23,34,43,7,97,9,36,20,90,75,70},{55,51,27,91,52,69,45,85,8,58,59,75,21,82,55,95,54},{22,46,87,41,46,88,89,40,1,67,18,58,7,52,29,3,19},{80,87,90,96,34,66,60,82,90,6,92,52,55,42,42,88,62},{96,53,65,32,36,65,83,18,75,30,96,82,39,41,97,65,54},{70,18,27,67,31,69,10,9,58,52,73,43,20,5,90,36,58},{33,40,98,18,16,7,54,30,88,49,33,39,6,18,53,65,7}},
	C = {{28969,23671,32235,22885,20291,26507,28745,22618,25577,22269,27050,28029,16706,23982,31995,32161,27031},{26862,24320,26163,26165,18614,33170,25845,22365,21346,22091,31182,26426,14540,22456,34338,30376,27165}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 43")
	end.

test_44() ->
	A = {{84,43,13,89,50,37,32,75,91,5,93,75,97,70,17,99,15,69,41,34,39,76,73,54,41,20,45},{62,38,9,73,70,81,17,91,54,57,31,25,37,39,36,89,67,4,58,91,95,81,80,71,66,37,89},{24,63,28,47,70,90,3,70,85,39,27,12,3,96,79,64,92,42,47,49,98,99,76,55,76,33,32},{52,8,69,46,34,49,35,79,34,56,6,57,32,99,83,97,1,73,46,73,26,34,4,65,29,19,62},{70,59,31,21,22,12,39,91,46,8,33,36,72,15,17,66,76,26,99,5,3,34,51,67,98,74,2},{40,31,4,38,92,78,54,23,48,50,41,2,17,22,44,17,58,87,75,93,24,10,12,91,27,10,54},{33,8,24,24,8,48,69,36,14,52,31,53,31,69,11,95,33,9,76,43,48,83,74,46,99,20,21},{55,38,73,75,27,65,29,88,16,58,77,27,49,82,76,4,36,86,20,10,19,81,50,2,59,30,49},{93,81,86,49,99,39,56,82,48,88,62,18,69,4,93,26,17,70,26,64,96,90,29,67,58,88,90},{75,40,98,19,57,71,83,11,30,8,38,76,86,55,60,4,69,3,4,62,68,1,87,86,76,89,9},{18,81,9,24,81,76,13,14,43,80,97,12,60,35,15,17,54,54,23,19,57,74,19,71,83,66,66},{67,57,13,93,53,1,12,87,31,9,85,93,12,87,23,28,85,33,87,19,21,78,34,92,64,25,80},{4,28,44,21,85,44,12,8,17,28,99,79,80,56,21,94,21,65,64,19,54,64,31,41,53,86,26},{32,2,98,17,29,86,55,32,90,74,87,26,59,11,11,9,17,57,94,60,47,26,1,75,47,75,94},{38,66,54,23,85,42,47,57,4,17,84,21,93,7,24,57,79,78,34,68,57,59,89,75,33,37,71},{7,12,37,99,49,23,14,20,72,36,15,22,65,60,36,14,82,54,53,73,77,20,27,64,35,93,38},{61,17,60,86,14,23,60,68,38,19,2,56,69,11,69,10,76,19,72,98,41,96,89,11,44,88,29},{56,7,31,4,33,36,19,83,34,36,77,7,7,32,34,52,68,88,32,46,43,7,82,55,45,44,45},{91,57,97,17,9,10,12,69,5,66,57,35,5,54,29,51,22,59,21,74,27,40,77,34,61,76,64},{3,22,33,7,23,55,1,92,40,86,78,65,31,53,72,25,11,64,46,64,8,32,17,17,43,32,21},{84,17,18,68,56,92,91,48,98,11,68,27,48,79,61,30,15,43,91,43,21,56,7,37,59,15,55},{65,92,70,64,38,85,13,86,14,54,76,90,7,61,25,46,53,47,29,71,90,20,53,51,11,43,90},{95,24,71,34,79,48,86,30,99,84,24,85,76,22,77,29,98,60,14,70,13,56,74,69,95,6,2},{99,22,96,18,53,38,58,30,44,3,27,47,84,26,7,71,88,72,36,84,56,72,17,91,2,82,78},{72,52,88,94,49,84,88,63,69,12,81,72,70,87,69,19,78,41,74,29,36,81,50,20,83,34,71},{45,7,28,70,66,19,17,41,50,89,3,18,51,79,69,6,64,95,62,90,76,69,2,70,32,16,24},{25,80,8,72,89,89,81,35,98,3,83,14,52,25,7,95,89,55,24,23,52,14,73,99,87,6,81},{82,11,19,17,63,15,5,70,21,17,12,20,38,48,62,51,87,1,26,17,7,30,58,67,11,92,48}},
	B = {{31,35},{11,35},{40,22},{37,88},{38,10},{41,30},{31,17},{92,98},{77,29},{11,69},{19,36},{57,37},{83,65},{41,34},{58,25},{46,52},{22,35},{78,93},{76,54},{59,85},{28,24},{47,46},{87,39},{25,79},{86,89},{89,90},{61,52}},
	C = {{79014,76812},{79095,81409},{75633,72884},{66189,68060},{67116,65912},{54633,59458},{60501,59887},{66479,67093},{84029,86681},{68949,63099},{59176,65160},{67981,73039},{65147,62871},{68574,68726},{70743,71356},{63638,66685},{75727,71522},{59368,60108},{63422,67205},{56788,58084},{69458,64255},{67167,72522},{76576,73188},{70448,70914},{85382,79121},{62205,68751},{70798,70990},{53252,51297}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 44")
	end.

test_45() ->
	A = {{84,72,7,23,46,28,22,11,23,13,63,62,95,94,82,80,18,24,25,7,95,7,16},{80,79,50,96,72,22,65,70,32,92,55,6,30,8,53,44,84,87,13,87,83,76,50},{14,40,70,96,22,53,97,16,11,32,18,98,52,62,40,86,9,95,60,86,82,78,18},{80,9,26,76,34,95,70,45,36,96,26,33,39,30,18,19,91,96,47,73,19,7,26},{91,99,74,85,4,92,54,82,14,41,60,29,87,45,93,32,78,95,80,97,43,69,66},{80,59,1,73,67,88,76,2,9,6,56,82,97,60,11,17,41,51,90,14,52,44,33},{52,28,70,41,45,29,32,28,38,68,55,61,73,82,53,7,93,21,62,24,20,42,73},{56,83,84,44,12,91,97,69,55,73,73,18,61,25,42,66,5,89,53,77,42,55,55},{91,30,54,88,43,88,90,50,76,56,33,68,75,41,88,16,78,85,97,74,66,9,65},{79,42,53,63,16,65,97,65,38,10,23,66,30,77,77,30,72,24,99,79,94,78,92},{98,80,36,81,48,30,67,62,40,19,39,30,95,82,14,52,42,2,61,25,26,33,65},{99,61,59,51,48,83,41,15,73,85,58,63,8,33,6,77,64,87,21,52,60,61,51},{24,38,9,46,36,13,93,77,55,99,26,66,3,44,21,38,95,45,7,61,35,18,64},{8,21,28,54,60,99,56,33,35,95,47,9,16,10,13,2,54,57,91,55,60,77,85},{61,73,48,14,70,44,98,24,79,47,99,51,20,65,49,47,79,91,68,25,54,87,49},{97,65,35,49,48,8,48,72,38,36,25,92,47,47,22,46,23,51,38,60,25,50,3},{38,70,45,4,42,27,70,80,15,58,57,81,89,8,17,57,30,29,42,70,24,84,93},{16,86,35,68,1,14,48,13,32,80,11,83,83,8,88,25,68,49,60,98,44,9,44}},
	B = {{43,65,28,22,87,24,10,9,89},{56,51,78,88,12,70,91,41,45},{74,72,54,34,99,79,91,65,86},{46,12,22,95,84,82,70,65,23},{18,29,24,52,74,64,74,82,56},{42,61,33,72,5,64,46,48,41},{67,98,43,76,36,92,47,69,45},{58,32,84,98,74,58,70,16,38},{82,19,14,91,26,54,41,10,5},{54,59,80,14,82,34,98,7,97},{71,59,86,69,11,40,81,54,67},{5,22,46,56,14,99,53,12,84},{92,6,63,78,66,31,68,65,12},{60,85,69,81,6,45,59,68,38},{40,16,67,51,54,40,76,67,20},{5,11,22,50,15,81,41,23,69},{52,58,30,93,90,48,12,91,53},{97,33,2,68,60,63,35,94,59},{34,70,15,97,88,14,82,75,21},{81,11,25,97,52,34,66,23,58},{92,48,18,20,15,98,88,55,11},{93,78,93,15,28,96,82,80,59},{77,41,44,23,98,30,7,4,17}},
	C = {{54071,41924,46310,59848,40447,57596,60873,48615,44687},{82572,59198,59944,80260,75216,79535,81746,66720,66886},{72292,55075,51124,77508,56435,82507,78381,65638,60103},{63572,50476,42437,72310,63345,59345,59491,53885,56225},{92807,68484,70219,98959,82494,83218,90476,77100,70451},{61473,53454,46518,72737,52926,64942,64592,60705,50113},{63747,53020,53397,67625,63197,58300,64697,55551,52995},{82828,62351,61693,83236,65744,77365,82291,62089,64917},{85443,64602,57758,95965,81764,80631,83168,72391,64980},{80908,67407,59926,86120,71112,80318,79040,67485,59558},{63941,52498,52681,74476,60553,62445,65047,53132,50283},{72515,58719,52043,72508,61754,75995,70897,56838,67988},{58117,46361,46014,65553,54337,60423,56594,43905,51162},{66076,53354,46063,64297,59374,60212,65956,54787,48739},{80312,68588,60868,82612,63489,79844,79092,71275,66008},{56272,44656,46860,65641,51876,61628,61688,46155,54438},{67387,50502,58375,67652,58824,66129,68817,49260,57156},{62239,40886,47076,70860,58423,59477,66923,50383,48768}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 45")
	end.

test_46() ->
	A = {{47,56,40,66,11,47,40,28,45,2},{96,1,32,76,71,19,76,49,40,29},{52,13,97,85,19,52,42,81,80,85},{17,51,24,87,39,56,80,25,65,19},{77,19,75,96,28,73,34,82,77,24},{83,38,17,8,45,48,44,15,28,61},{11,63,8,21,47,44,89,2,50,3},{20,24,27,86,74,3,48,69,9,92},{31,94,84,55,52,1,41,45,24,54},{72,24,70,61,76,76,30,20,73,35},{2,59,54,59,90,64,66,12,93,45},{21,38,48,56,81,88,20,90,36,68},{64,71,28,13,13,51,75,70,2,72},{47,8,54,20,97,45,46,81,17,11},{37,19,42,45,40,42,30,61,2,38},{27,39,12,27,69,85,82,4,36,45},{71,39,95,6,21,90,81,22,73,32},{38,45,23,35,74,41,48,35,21,99},{67,95,71,35,81,18,35,37,46,74}},
	B = {{93,39,39,35},{47,77,91,28},{53,36,21,68},{45,87,12,66},{33,20,95,10},{12,28,16,65},{94,55,20,31},{33,10,64,8},{63,59,8,9},{89,36,56,54}},
	C = {{20717,20070,13422,15431},{30524,21611,19068,17199},{34890,26652,20329,25220},{25255,24540,16237,17718},{31038,26219,19175,23387},{24651,16133,17671,14253},{19281,17540,14227,10796},{26311,19819,22241,16908},{27613,23389,24059,18407},{28893,23548,20054,21315},{28678,26147,22215,19757},{25702,21001,25316,20625},{28293,19325,21780,17226},{21297,14072,20726,13577},{18750,14055,15714,14271},{23605,18891,17797,16178},{31301,22788,17224,21565},{27178,19241,23078,17172},{32918,25326,28732,19914}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 46")
	end.

test_47() ->
	A = {{7,18,79,13,83,76,95,5,78,95,77,77,45,27,80,1,11,4,28,97},{38,48,52,67,67,53,60,58,65,41,48,29,13,18,1,3,65,93,62,31},{24,69,3,65,34,21,91,9,7,62,42,23,99,76,51,37,90,31,87,60},{91,78,86,6,58,15,86,6,82,3,77,61,10,1,80,75,41,84,11,5},{85,16,99,50,90,88,44,98,48,40,76,90,78,80,97,59,77,48,97,16},{56,95,9,88,28,29,72,86,64,22,55,82,82,3,58,80,33,71,75,29},{73,77,83,53,34,60,54,14,20,22,34,75,65,91,22,98,44,4,13,52},{34,39,46,55,97,35,57,59,36,96,66,30,71,97,93,8,43,88,99,79},{90,26,55,27,8,80,91,85,48,19,38,87,99,68,92,80,13,82,12,37},{82,2,5,90,60,99,90,70,62,16,65,45,93,37,70,43,80,20,83,8},{85,74,42,71,94,41,39,49,59,13,47,73,21,65,31,80,57,95,85,33},{71,8,65,89,71,55,46,90,87,71,78,21,90,55,25,71,31,64,28,17},{7,93,36,84,34,22,65,85,92,65,84,23,44,15,21,22,49,2,5,58},{68,55,49,78,99,4,61,78,70,46,1,59,85,75,3,28,55,24,53,26},{19,68,11,36,55,75,64,26,93,24,7,95,29,89,26,97,37,3,69,53},{84,4,58,26,70,33,90,9,59,20,96,22,2,80,80,7,87,20,73,68},{48,38,4,58,91,31,27,10,57,5,72,66,57,85,8,41,8,20,38,2},{58,31,74,59,13,97,98,81,46,10,73,56,10,48,69,81,93,11,19,43},{73,78,36,53,64,37,97,81,33,91,75,62,13,4,91,25,33,24,90,35}},
	B = {{79,36,97,80,27,47,76},{31,2,18,99,23,4,89},{3,77,98,49,7,99,38},{1,80,61,59,6,40,91},{39,4,11,52,62,83,53},{92,37,57,78,40,63,11},{74,88,93,29,46,69,40},{75,71,51,39,60,50,88},{49,42,20,45,63,5,35},{74,10,41,11,36,42,14},{93,10,69,25,97,59,29},{58,30,8,19,1,53,17},{45,54,72,1,71,88,39},{16,72,7,55,34,14,61},{38,7,97,35,17,69,67},{64,50,10,32,61,40,64},{31,61,29,74,44,85,73},{11,72,5,74,9,69,97},{60,18,33,12,83,78,67},{50,79,10,59,43,10,65}},
	C = {{53950,40686,48689,39648,42519,54491,41594},{42768,43326,38449,46439,37577,50835,53404},{46275,45070,43299,42399,43867,53461,56769},{46677,39453,47645,48233,36572,53251,53875},{69157,59801,66954,60156,58651,82604,74305},{56473,49300,49496,49877,47250,57981,67442},{46745,47595,44288,48386,37246,50091,53184},{57464,53015,53321,53164,52905,67925,69706},{59261,56640,57619,50620,43720,62264,62057},{61149,50870,58368,48763,52294,66072,61050},{53508,50679,44098,58317,46681,60755,70456},{56732,54119,54128,49410,50843,62188,61999},{45794,41187,41204,42127,40885,41617,50224},{45624,48703,42881,46188,42415,54015,59211},{49798,42994,32684,44777,41886,44357,50757},{50191,44147,50016,46592,44673,55505,53646},{37577,30567,29391,34187,35437,38676,40627},{56931,53759,55135,52246,43673,58592,58020},{60565,41617,55711,47759,46571,59821,60636}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 47")
	end.

test_48() ->
	A = {{25,43,69,50,56,67,84,81,62,21,36,90,7,2,45,97,47,19},{84,75,76,66,12,3,56,55,49,17,99,32,22,44,68,46,45,67},{78,68,86,94,68,89,98,6,23,65,37,21,32,27,45,61,41,58},{61,95,55,21,27,95,74,52,39,30,71,12,29,16,55,72,71,58},{81,89,95,7,66,64,58,77,41,85,73,31,29,74,24,96,88,25},{65,43,29,42,70,87,63,53,73,84,11,3,90,6,67,19,9,85},{95,85,74,64,85,93,82,95,7,65,13,40,8,92,87,58,12,45},{47,42,27,89,55,46,64,66,69,23,59,31,30,13,84,30,37,76},{74,91,64,1,45,78,41,47,2,98,19,25,99,56,7,97,98,83},{15,82,29,4,89,70,74,41,40,94,16,27,64,23,52,22,91,72},{61,79,26,4,86,43,10,38,13,48,69,51,78,8,57,67,9,60},{63,84,33,80,29,73,87,39,10,63,5,15,33,62,30,82,6,53},{2,20,32,48,44,7,31,49,44,20,11,46,47,85,88,99,95,30},{22,60,90,91,2,56,61,81,71,60,95,17,42,59,4,63,17,19},{11,70,76,95,92,46,21,6,74,98,53,73,75,53,59,82,69,78}},
	B = {{60,29,57,71,90,77,70,26,67,43,91,86,40,33,54,51,34,46,84,23,67,83,43,78},{68,62,36,85,27,54,65,24,54,81,67,99,32,2,68,88,48,16,71,73,81,59,97,39},{3,67,56,13,78,64,71,53,73,58,76,88,58,12,22,74,52,49,1,62,52,84,39,80},{84,51,77,57,45,63,75,28,93,69,50,3,97,11,68,42,30,63,47,98,19,33,35,26},{53,80,78,10,17,70,80,80,88,39,53,38,99,8,43,99,21,24,93,73,1,67,5,94},{88,4,27,55,63,62,66,16,20,10,81,14,31,59,47,32,23,90,8,58,98,81,64,62},{2,64,34,50,56,53,27,34,84,74,71,99,27,18,40,56,27,51,40,36,73,67,49,64},{56,48,63,9,43,17,65,45,23,82,39,13,32,29,11,99,41,56,49,31,41,83,16,72},{12,68,28,84,94,69,3,31,52,64,94,30,7,61,29,92,91,61,44,77,51,30,39,74},{85,8,7,80,22,11,34,24,75,78,1,46,3,95,30,38,23,77,43,74,68,63,64,51},{91,78,44,9,62,82,73,77,96,57,61,45,29,26,67,91,30,19,22,21,83,79,98,70},{2,6,78,39,7,49,55,35,82,18,53,94,12,86,48,60,28,56,47,54,58,86,68,40},{23,96,16,59,56,40,87,11,24,92,17,89,73,80,25,25,35,53,44,85,31,95,19,36},{70,14,40,67,43,10,93,64,67,57,12,63,81,94,28,40,43,49,67,21,44,63,87,31},{18,48,96,6,9,74,38,65,57,53,73,73,35,68,98,42,86,81,48,31,27,62,89,37},{26,60,33,8,36,80,99,71,69,84,84,69,66,34,83,97,58,78,96,45,48,50,61,35},{14,74,45,64,48,86,27,4,97,86,62,35,32,21,6,25,34,71,38,73,88,86,12,19},{52,36,65,3,69,47,92,27,63,34,76,40,25,15,11,75,90,15,34,78,75,44,65,94}},
	C = {{33663,45150,46373,33731,41497,53912,53232,37858,59822,52979,59167,51102,36959,33382,41343,62008,39168,50988,43644,49655,50306,60664,45105,50905},{41230,48616,48093,36387,47894,54774,57581,38650,63512,56630,58715,55130,38473,31400,42669,61006,43930,44029,43787,47679,52933,60633,52913,52269},{47248,48878,48270,43860,49860,59055,63008,38239,68379,58141,62719,58017,46298,34818,46230,60211,41164,53278,47505,58578,57345,65814,52584,57141},{43062,47999,43144,39171,47735,56669,57195,35601,59363,56420,61775,54162,36365,32235,42517,60121,41954,49241,43392,50378,59672,63891,52458,53079},{51072,55025,49233,48121,54025,61903,69344,45689,73364,69118,65295,65343,46584,43184,46043,72325,45572,58247,55608,58052,66196,77459,58529,62326},{42658,44478,41420,40318,45936,48280,53963,31594,52429,52804,53280,48465,36942,38812,37198,54334,41604,48621,42680,54840,48976,59266,43912,55288},{54329,47697,57343,45490,49608,58039,71700,46765,69805,62785,64992,63800,51091,43778,50868,69409,46293,59249,57196,56833,59430,74469,60304,63343},{40596,46195,48188,34562,43692,52509,53039,35706,58664,52253,56491,45494,38016,32023,40879,57648,42452,46159,42290,50910,47531,56510,46118,51785},{47533,50155,42156,47177,49785,54855,68696,35285,63965,65131,57360,62546,43945,42803,39170,60690,42624,54638,51737,60109,63305,73083,52294,55635},{39808,46260,40695,41371,40014,48917,52053,31707,58115,55621,50886,51499,35454,37079,34676,54390,38821,47663,43399,55627,53453,62200,45016,51348},{38921,42267,39958,29993,35318,46695,55614,34731,50780,46968,47764,50163,35592,32802,38970,54614,35314,38732,43620,45157,43931,56572,44875,47750},{43201,37790,38691,39598,40175,44624,56530,32134,54013,51919,49903,49976,39607,32991,40028,51660,35586,46016,44633,47805,48473,54322,47790,45627},{28762,42036,41620,30957,33261,45450,49925,34660,54148,52142,45359,44965,39169,36133,35553,48481,38685,46725,42986,44268,39452,52398,40376,37385},{45669,46797,39715,40284,48499,48792,57283,37208,59118,58883,52478,48189,39818,35619,39159,60325,38796,48405,39444,50796,52530,59689,49984,50465},{50768,57768,54877,48704,50544,64146,71485,45272,78069,68437,64012,62635,52224,48343,49870,70422,51061,60061,55389,71844,59722,72804,59584,60557}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 48")
	end.

test_49() ->
	A = {{76,33,19,7,71,34,28,18,34,86},{34,24,8,14,50,87,93,99,65,83},{93,27,55,33,15,85,75,97,90,78},{56,46,89,39,43,22,44,39,25,30},{3,63,69,84,27,17,89,10,60,29},{49,38,96,94,9,27,37,5,8,6},{8,22,96,58,80,39,40,47,60,2},{85,58,39,28,97,41,9,60,42,75},{67,1,61,68,42,52,26,29,21,80},{87,90,84,29,71,50,57,40,61,62},{24,14,62,10,80,37,23,30,18,14},{24,47,92,87,48,69,16,61,83,62},{48,10,52,80,47,36,94,44,80,43},{11,72,16,19,53,47,17,74,64,18},{8,24,50,25,50,16,31,96,67,62},{83,6,28,55,23,40,29,95,38,24},{28,59,76,9,14,75,48,96,35,52},{97,80,12,58,11,36,81,21,73,20},{91,30,91,43,19,74,48,39,29,77},{53,41,12,78,75,70,75,93,54,85},{7,13,95,52,6,53,98,91,15,23},{67,42,7,55,11,62,6,7,90,91},{35,69,71,60,23,92,30,8,11,8},{12,51,79,16,70,9,22,38,21,69},{33,60,88,4,67,99,90,79,75,70},{57,15,10,77,94,5,40,99,21,40}},
	B = {{73,19,40,12,57},{69,45,58,77,83},{63,21,75,14,50},{63,64,39,53,19},{48,73,76,92,26},{25,8,17,42,35},{83,81,82,69,50},{80,91,74,84,97},{83,79,15,28,81},{25,57,41,74,74}},
	C = {{22457,20725,20290,22810,23454},{33208,33544,28507,34059,34601},{40446,34482,31159,32279,40505},{27537,21612,24845,21639,24317},{29818,26336,24693,24310,24169},{23561,15972,19943,15443,17139},{28729,25393,25541,23742,23196},{31017,28027,27733,30549,31320},{24624,21397,21914,22125,22890},{38882,31516,33468,32908,37035},{18172,15977,18471,17325,15749},{34948,31065,28413,30260,33213},{34703,31682,27631,27754,28798},{24788,23439,19952,24270,25331},{27129,27734,23702,25908,28160},{27567,23318,21303,21382,25191},{29886,25334,26629,27062,31848},{33401,25877,23241,23967,28897},{31353,23838,26998,24909,30358},{37990,37780,32657,38724,36341},{29516,25618,27482,24477,25871},{24576,21549,15767,20923,26159},{23216,15999,19924,19529,19989},{22299,21220,23220,23247,22899},{39801,35508,35552,36908,39962},{29297,29986,26693,29542,25340}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 49")
	end.

test_50() ->
	A = {{85,93},{12,68},{38,60},{21,57},{9,56},{5,98},{53,52},{63,90},{29,3},{8,98},{74,89},{96,60},{78,47},{49,62},{14,29},{72,66},{74,36},{94,8},{36,15}},
	B = {{22,12,48,55,61,68,43,98,28,32,21,8},{39,8,83,17,32,48,15,8,60,91,81,62}},
	C = {{5497,1764,11799,6256,8161,10244,5050,9074,7960,11183,9318,6446},{2916,688,6220,1816,2908,4080,1536,1720,4416,6572,5760,4312},{3176,936,6804,3110,4238,5464,2534,4204,4664,6676,5658,4024},{2685,708,5739,2124,3105,4164,1758,2514,4008,5859,5058,3702},{2382,556,5080,1447,2341,3300,1227,1330,3612,5384,4725,3544},{3932,844,8374,1941,3441,5044,1685,1274,6020,9078,8043,6116},{3194,1052,6860,3799,4897,6100,3059,5610,4604,6428,5325,3648},{4896,1476,10494,4995,6723,8604,4059,6894,7164,10206,8613,6084},{755,372,1641,1646,1865,2116,1292,2866,992,1201,852,418},{3998,880,8518,2106,3624,5248,1814,1568,6104,9174,8106,6140},{5099,1600,10939,5583,7362,9304,4517,7964,7412,10467,8763,6110},{4452,1632,9588,6300,7776,9408,5028,9888,6288,8532,6876,4488},{3549,1312,7645,5089,6262,7560,4059,8020,5004,6773,5445,3538},{3496,1084,7498,3749,4973,6308,3037,5298,5092,7210,6051,4236},{1439,400,3079,1263,1782,2344,1037,1604,2132,3087,2643,1910},{4158,1392,8934,5082,6504,8064,4086,7584,5976,8310,6858,4668},{3032,1176,6540,4682,5666,6760,3722,7540,4232,5644,4470,2824},{2380,1192,5176,5306,5990,6776,4162,9276,3112,3736,2622,1248},{1377,552,2973,2235,2676,3168,1773,3648,1908,2517,1971,1218}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 50")
	end.

test_51() ->
	A = {{87,69,36,63,21,84,91,19,68,92,35,82},{35,81,28,78,94,37,75,5,46,51,44,68},{54,5,5,56,11,77,78,60,45,81,29,10},{62,55,18,96,68,70,36,77,44,54,83,57},{94,60,58,91,7,74,80,6,61,75,5,12},{77,49,33,87,81,31,4,62,58,20,91,95},{38,87,87,3,21,50,5,51,33,32,83,41},{84,38,69,82,1,51,56,7,19,19,73,23},{38,33,95,67,25,16,26,79,97,69,27,95},{55,98,92,10,48,57,2,29,41,85,92,55},{11,91,43,47,28,82,25,19,65,27,36,77},{18,45,53,1,52,48,90,39,10,99,79,45},{51,36,45,19,46,78,62,32,66,1,93,8},{76,26,53,82,31,11,55,75,69,31,59,53},{41,29,56,7,72,49,23,8,78,68,36,87},{26,80,32,96,87,18,48,91,56,26,46,90},{54,21,78,40,44,18,29,79,52,58,28,26}},
	B = {{27,94,25,57,10,22,82,72,85,56,97},{76,78,49,75,86,46,52,83,79,73,26},{53,2,6,19,57,33,55,1,8,84,1},{73,33,35,44,24,44,92,69,56,57,48},{67,96,7,93,51,8,40,15,52,47,39},{72,48,10,65,52,93,95,8,48,68,66},{51,32,16,33,13,1,74,29,51,28,22},{45,86,85,27,63,26,35,56,94,93,31},{56,95,65,68,83,4,99,80,50,90,93},{44,71,68,24,13,26,9,88,45,71,12},{3,47,68,77,23,69,10,99,82,78,41},{82,76,27,15,56,65,73,85,49,37,40}},
	C = {{41736,47174,27305,35276,30424,28022,48613,45035,42641,45954,34390},{37819,41095,21681,34551,28093,22216,39215,37118,36460,37879,26600},{26141,31881,21455,23621,17973,17871,31946,29024,30810,32951,23894},{38476,47231,29725,37900,30562,28816,42328,43941,45334,46973,32944},{34677,36202,21131,29740,24038,21239,43470,34433,34273,39511,29465},{36747,47148,27663,36729,31141,27218,41099,44182,43201,44666,33332},{26892,32017,21974,27239,27202,23346,27824,31125,31413,38461,20485},{25714,26975,17366,25716,18672,21572,33938,29742,30218,33286,23903},{37507,41944,28346,27506,32552,22425,40859,40454,35993,45924,27663},{34088,41664,26668,34428,31431,27932,33843,40277,37887,46353,25837},{34083,34463,20256,28604,29615,24735,36407,32181,30743,36333,24300},{28916,33983,22576,27245,22324,21233,27444,32269,32467,36413,18559},{25860,32535,19686,31349,23929,20842,33292,28175,32272,36086,26421},{31623,39255,25980,29109,26033,20099,38592,38283,37805,40974,28835},{31277,37689,19560,27753,26345,19975,33156,31668,28812,35495,24945},{40952,46662,28380,34940,34082,24240,41619,42077,42704,44380,28706},{27066,33350,21844,23721,23456,15935,29719,28784,29950,36784,21493}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 51")
	end.

test_52() ->
	A = {{48,3,69,35,26,9,94,55,71,70,98,81,21,30,1,65,21,56,79,7,25,2,82,87,87},{31,7,54,66,50,9,19,92,54,46,4,67,9,11,94,8,53,54,63,73,73,83,70,45,68},{28,40,79,9,88,54,72,21,95,26,94,58,98,58,9,32,51,46,71,82,39,36,82,79,51},{75,39,67,13,9,67,18,15,62,15,32,92,99,4,50,48,73,53,94,86,69,50,5,29,42},{53,53,18,90,58,9,31,74,47,7,34,58,78,65,30,63,4,19,46,79,51,87,76,23,17},{27,30,51,30,17,57,13,7,54,60,54,22,10,2,2,82,14,6,62,6,99,24,71,92,46},{64,21,56,80,14,38,66,29,56,64,21,38,83,80,72,47,14,21,15,36,43,24,43,72,53}},
	B = {{66,71,9,50,25,94,19,9,75,71,38,99,43,77,45,14},{10,97,94,21,17,65,54,72,92,98,48,58,14,15,55,46},{13,58,43,4,99,80,4,88,58,99,79,78,8,75,85,83},{50,14,5,15,20,28,50,85,81,35,37,8,93,57,79,27},{86,4,12,35,58,18,90,42,7,5,50,62,4,40,90,18},{2,26,68,45,38,43,49,3,84,70,51,53,30,50,60,29},{79,12,72,79,90,97,89,92,65,40,49,21,52,11,19,86},{42,99,13,71,69,55,19,76,24,73,14,66,90,57,8,97},{41,66,2,93,3,85,45,59,91,21,20,26,98,18,64,83},{16,18,42,81,29,10,48,73,43,91,23,38,3,96,84,62},{62,28,47,61,66,38,4,91,69,35,5,50,2,34,17,91},{49,20,48,84,93,56,36,4,87,71,15,20,95,71,52,89},{57,40,13,33,32,33,6,46,14,44,46,36,21,38,39,78},{89,16,95,24,69,34,12,20,12,36,26,14,79,4,4,77},{62,95,21,39,72,69,90,41,81,51,36,57,78,27,49,97},{43,85,70,52,78,80,27,61,44,32,51,10,88,47,43,70},{8,30,58,85,10,72,51,39,9,72,10,19,71,22,60,93},{47,78,24,21,1,90,95,24,50,66,45,84,82,22,51,81},{2,79,60,71,36,83,46,34,94,40,13,95,81,42,41,19},{36,5,57,71,55,14,22,54,54,15,30,40,22,78,22,2},{48,5,14,7,78,29,97,32,43,7,12,16,43,13,93,48},{27,91,74,19,25,9,96,48,16,24,56,2,63,15,47,69},{3,24,50,1,19,39,55,55,10,24,35,3,72,86,11,82},{13,96,74,81,40,22,3,43,94,32,34,38,60,39,64,60},{56,58,9,71,61,87,17,69,17,33,99,14,13,89,74,74}},
	C = {{49348,59299,51053,68383,62855,72813,46532,68132,68333,57789,44501,49252,65885,61752,58982,84309},{46010,61702,43422,58280,57204,61905,61318,60408,60811,53820,43260,47525,70528,58503,63433,76976},{56271,61346,61947,70791,66778,73072,56670,71542,72154,60423,51396,56549,66283,61857,67503,88423},{44023,61022,49681,62186,56577,69374,51360,52491,69512,59611,43350,54184,63090,54823,63096,72340},{51251,55898,48942,50557,55061,55527,52291,59629,57554,47834,41408,41991,67224,51986,52783,69517},{29259,46491,41789,45144,45014,48041,39384,48683,54520,40755,34018,34472,46912,45509,53631,56631},{50864,54127,46932,54961,56833,60479,46520,59220,62223,54070,44676,42362,61508,53383,57988,74178}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 52")
	end.

test_53() ->
	A = {{99,10,5,17,99,59,19,12,39,72,1,3},{9,74,93,66,42,33,84,1,89,44,66,35},{43,81,28,75,22,89,99,99,52,71,47,11},{96,45,14,50,85,86,6,9,49,1,6,98},{99,67,50,62,6,75,27,13,82,89,97,71},{45,53,47,90,9,51,24,5,55,2,23,26},{52,78,6,29,47,79,93,53,84,67,99,22},{63,72,46,57,35,48,68,32,69,16,83,23},{99,91,10,13,81,3,48,39,76,53,66,65},{35,30,38,9,47,67,15,47,21,88,9,81},{23,6,47,40,45,67,12,29,67,64,99,22},{36,46,99,27,28,72,51,48,44,1,13,99},{51,33,2,24,46,41,48,88,30,4,11,66},{32,84,24,56,70,33,24,13,6,47,80,6},{20,82,84,13,18,87,69,7,7,72,90,17},{22,25,40,29,58,65,52,88,55,48,27,44},{2,59,54,7,77,66,6,71,39,10,46,28},{6,26,78,6,46,18,37,31,17,44,74,46},{35,35,78,29,43,38,88,38,18,43,56,13},{24,16,90,48,94,26,35,42,88,47,91,75}},
	B = {{19,41,10,80,50,18,61,17,41,3,88,38,74,46,67,21,31},{9,25,13,48,88,97,68,8,4,31,77,27,65,93,64,81,62},{99,94,42,17,97,8,24,91,60,58,91,36,88,83,55,13,16},{76,48,78,17,62,7,74,64,64,81,11,51,90,75,14,57,75},{89,35,90,56,71,41,76,45,72,7,48,77,68,98,9,15,16},{41,59,98,66,77,41,72,53,25,18,98,7,30,65,75,27,44},{47,30,69,13,37,56,8,79,37,49,33,7,83,85,34,69,86},{20,31,54,41,24,86,66,9,19,62,30,50,18,40,87,54,63},{6,79,44,22,40,36,11,48,72,36,23,51,31,58,66,69,88},{51,24,77,19,9,51,95,64,53,13,30,1,39,41,26,53,19},{23,90,43,22,39,1,72,77,76,59,85,63,17,61,26,87,11},{58,34,11,55,78,60,14,39,12,1,34,20,63,50,79,36,45}},
	C = {{20224,18484,26643,21364,22413,16742,28196,19171,21757,8106,24889,16032,24464,28231,19501,15662,16560},{30445,35314,33497,18809,37990,24025,29404,37251,31621,25832,33898,22598,38238,46148,28673,34000,31685},{27910,32496,41285,25663,36508,34189,40614,34234,29131,28663,37104,22518,37699,47120,36876,38849,38384},{25135,25052,26580,28430,36160,22377,28684,22104,22032,11769,31712,20394,32615,36452,30142,20674,24774},{28664,39016,34665,28744,40454,26914,40648,37102,33693,23720,43237,24161,38929,45735,38124,37740,32379},{19414,23454,21716,16044,27770,14856,21830,21828,19669,17650,23844,15667,27047,30062,21743,21255,23251},{24815,34679,38653,26236,35517,31545,38993,34837,31854,24623,39209,24278,34581,46843,34931,40010,35028},{24123,32619,30308,22484,34882,23611,31410,30884,28523,23743,35393,23232,34183,42168,30113,32901,30288},{23493,28985,27587,27342,34589,29671,34292,26757,28356,17526,34866,25173,35215,42452,32413,33170,29205},{23475,21029,26385,21002,27114,23576,27744,22635,18750,11664,26316,13856,25330,29770,26835,20071,19443},{23299,30705,30787,17972,27044,16505,30406,29854,28261,19235,29819,20394,24058,33111,23829,26158,20555},{28108,29510,26570,22899,37694,24763,23487,28292,21340,18893,33052,18012,33818,38191,33830,23567,27092},{17544,18153,21944,20228,24260,23381,22245,16793,15664,13951,21914,16237,23612,28029,26336,20614,23478},{21588,22882,26069,18010,27754,19046,31505,23586,22747,17247,28412,19156,26713,34496,18848,25360,18810},{25744,30399,31002,19556,33632,22882,32055,32944,24541,20549,38287,15928,30685,39755,27049,29394,22253},{24789,26255,32178,21091,29254,25962,29185,26532,23739,19331,27826,19549,27985,35686,29557,25897,26880},{21134,24352,26019,19286,29067,22185,26369,21090,19941,16233,28261,19410,22502,32650,25244,21338,19622},{22433,23882,22097,14040,24841,16348,21923,25142,20866,15811,25382,16014,23234,29285,19983,20590,15375},{25530,26535,28715,17077,28646,20046,26246,29507,24122,20240,29930,17404,30397,36071,23605,24893,22602},{34443,38144,35892,23147,38635,23688,33367,37713,35674,24344,35256,28565,36722,45551,31215,31681,28093}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 53")
	end.

test_54() ->
	A = {{30,63,66,59,55,19,46,72,66,7,6,83,42,93,93,84,69,30,93,1,20,17,2,9,53,97,68,55},{58,98,14,32,30,30,11,53,38,35,4,61,12,36,19,54,50,69,14,41,32,95,23,11,32,87,39,93}},
	B = {{7,51,32,12,85,13,15,17,93,24,1,71},{33,65,62,18,57,11,38,45,47,42,9,4},{23,68,94,42,90,52,81,57,25,5,77,54},{30,96,39,63,49,90,68,26,74,18,20,4},{60,69,67,71,44,21,58,16,95,24,29,52},{49,57,14,20,50,53,93,74,78,49,89,66},{31,83,13,26,51,82,52,46,45,1,96,84},{61,89,28,65,78,40,59,65,39,58,84,75},{55,1,81,1,63,61,36,47,57,67,95,1},{77,46,35,16,54,71,41,66,34,18,43,71},{7,33,24,88,68,28,54,40,16,5,63,60},{2,11,95,89,46,23,92,40,73,30,32,34},{53,45,39,15,27,56,83,70,42,38,14,73},{57,32,88,98,57,87,14,39,44,20,48,47},{81,11,16,10,4,74,86,74,12,35,39,16},{76,77,82,33,9,8,32,69,76,67,60,63},{40,50,92,14,86,12,38,47,64,97,32,62},{76,33,32,39,57,96,43,7,7,14,7,28},{66,75,34,92,45,88,23,81,16,65,15,59},{24,28,64,2,48,92,22,6,59,91,74,14},{11,20,42,22,70,51,99,37,78,58,75,91},{76,9,95,84,39,49,3,70,49,24,27,7},{86,38,32,28,57,46,29,84,68,3,54,20},{79,98,41,4,28,26,95,1,15,79,45,8},{39,70,34,96,64,3,29,88,99,33,49,37},{21,63,60,11,69,4,67,24,55,12,27,15},{91,92,93,33,38,1,32,82,84,18,99,3},{22,76,96,62,37,19,89,48,41,33,56,74}},
	C = {{66546,77948,84402,64146,71639,59059,74020,72399,74249,52124,65320,57882},{53273,60071,73442,48799,62528,44751,57164,54305,65011,43316,49917,44989}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 54")
	end.

test_55() ->
	A = {{9,67,2,22,88,96,9,23,6,99,45,96,64,1,13},{62,57,45,34,68,28,47,41,4,51,31,89,92,54,92},{89,49,78,69,10,78,64,69,76,10,45,73,4,24,78},{25,17,62,61,34,42,16,2,60,12,38,92,95,27,8},{2,68,14,47,12,96,77,91,2,30,36,95,74,34,88},{90,9,35,74,85,3,88,86,60,76,71,82,46,42,11},{12,39,64,64,97,73,18,81,61,78,97,52,50,7,28},{66,48,47,39,49,46,11,97,1,57,10,44,34,32,48},{41,42,92,21,36,36,79,31,3,95,86,58,80,88,22},{47,39,16,22,32,23,87,51,83,2,87,38,47,7,65},{20,60,57,73,17,86,49,88,88,36,56,98,62,50,29},{73,89,7,32,61,30,49,91,4,85,41,20,3,86,41},{22,34,22,97,73,74,14,98,43,55,80,71,86,10,25}},
	B = {{61,46,17,24,8,3,63,66,38,42,27},{31,38,20,70,83,32,73,37,34,24,31},{12,62,19,21,53,79,72,67,15,35,54},{40,6,17,39,77,55,21,76,50,43,79},{54,55,91,4,39,96,79,15,81,13,87},{30,76,19,1,85,43,2,49,55,28,97},{96,7,56,7,88,21,79,67,94,70,94},{35,56,97,53,50,22,98,18,94,63,36},{14,1,13,55,65,43,56,16,23,50,25},{63,75,45,48,58,60,32,9,22,72,28},{89,99,73,74,25,15,49,22,67,62,12},{33,27,30,22,65,14,58,63,60,18,8},{57,72,86,70,7,52,53,13,51,57,54},{83,33,42,95,34,4,82,95,58,69,33},{35,4,62,95,38,71,78,58,84,13,7}},
	C = {{30511,35874,31522,23870,35440,29282,31938,21626,34671,24745,30618},{39819,34580,40120,37781,37202,33531,50197,36553,46172,32112,33089},{35141,30640,30918,33684,45526,30375,48292,41410,44781,33274,35379},{25888,26261,24616,24554,29411,25096,31606,26709,29057,24373,27082},{36760,32600,38616,35515,43938,28760,45146,35214,48948,32104,35317},{46433,37176,42940,34189,42215,32116,53269,36706,49792,41183,38582},{37788,42792,41641,33984,43221,38573,45813,29110,45166,35413,38589},{28336,29858,30868,27391,31276,26172,39295,27504,35655,26388,27461},{45669,42277,39305,37466,39286,31240,48867,37300,43085,40096,35811},{33523,25488,32451,30580,32757,23486,41181,26343,39606,29158,26812},{38383,37122,37347,38598,49281,32432,49443,38619,47236,38606,38705},{39123,32636,35272,34866,36615,25135,46462,31896,41750,33479,30154},{37613,40102,41830,34643,41394,34497,43648,29913,46568,35121,38164}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 55")
	end.

test_56() ->
	A = {{90,97},{75,84},{37,14},{17,54},{45,63},{36,1},{2,94}},
	B = {{52,51,92,31,27},{60,95,54,47,97}},
	C = {{10500,13805,13518,7349,11839},{8940,11805,11436,6273,10173},{2764,3217,4160,1805,2357},{4124,5997,4480,3065,5697},{6120,8280,7542,4356,7326},{1932,1931,3366,1163,1069},{5744,9032,5260,4480,9172}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 56")
	end.

test_57() ->
	A = {{92,60,79,48,27,55},{78,31,50,82,70,22},{20,48,53,12,7,94},{67,67,17,52,78,54},{68,13,69,37,28,37},{29,24,67,45,53,26},{98,87,85,43,39,32},{7,74,72,87,75,64},{66,83,81,89,87,41},{23,84,19,3,17,19},{29,50,31,55,93,57},{81,13,23,92,84,44},{62,55,46,77,80,48},{71,89,68,42,1,28},{87,38,69,36,91,44},{91,99,68,76,4,56},{85,42,52,64,34,52},{90,58,27,75,96,25},{13,39,45,39,49,71},{38,39,60,34,29,53},{22,38,80,95,37,68},{39,91,83,52,3,38}},
	B = {{39,69,81,39,56,38,3,52,35,82,78,14,20,45,81,3,77,51,1,58,9,9,18,42,76,98,43,22},{23,21,66,18,67,6,99,69,70,48,67,72,1,5,93,62,62,27,18,47,68,38,3,62,2,44,21,16},{22,57,44,86,92,56,53,45,80,60,32,58,55,41,57,5,92,90,45,40,84,44,1,83,46,92,97,42},{46,89,57,89,67,28,82,9,77,80,98,2,6,27,80,72,49,82,64,24,61,43,53,37,48,28,45,67},{15,73,76,86,37,53,59,33,90,13,28,50,90,60,92,2,7,6,15,6,86,71,36,26,87,75,64,20},{12,32,95,2,72,88,19,46,35,88,86,60,4,71,87,7,83,95,78,76,90,69,13,62,95,61,18,41}},
	C = {{9979,20114,24901,18166,24615,15895,16977,16332,21791,24195,23914,14936,9183,14500,28644,8286,25178,22745,12494,16810,21744,14360,6146,20029,20624,25648,17757,12313},{9941,21995,22648,21262,20713,13892,17225,12505,22284,20290,21649,11208,11221,13691,26965,8604,18862,18549,10900,12041,20012,14094,8699,15566,20406,22496,17421,12108},{4835,9996,17266,8060,17043,12995,10804,11400,13144,16447,15928,12824,4441,10731,18887,4837,17831,17042,11474,13010,17690,11835,2667,14669,14169,15543,9689,8232},{8738,19049,24619,16725,20063,14242,17627,14398,21309,19656,22183,13992,9890,13965,28661,8718,18453,16618,10748,13535,21327,15397,7690,15679,20420,21678,14241,10518},{7035,15419,17154,14595,17206,12302,10537,10497,15474,16920,15975,9584,8058,11260,19405,4334,17470,16746,9081,11183,15287,10274,4782,13780,16095,18977,14013,9158},{6334,15030,15944,15940,16244,11355,13325,9529,17200,14127,14144,10320,9433,10413,19138,5438,14619,14635,9179,8864,17164,11613,5292,12922,14575,16883,14135,8977},{10640,21132,25875,19943,25765,15093,19847,18070,24261,24075,24251,16522,10618,14103,30686,9511,25796,21797,11322,16871,22795,14754,6209,21154,20029,27333,19293,12091},{9454,21407,25358,22118,25186,16785,23938,14912,26874,22013,23938,17366,11702,15030,30981,11831,21851,22499,16264,14166,28660,19525,8563,19995,20773,22531,18706,14315},{12156,26498,29968,26519,28843,18253,25918,18362,30718,26115,27985,18586,14386,17240,36373,12618,26053,24612,15404,16743,29643,20145,9900,22738,24644,29090,22749,15566},{3868,6550,11511,5810,10862,5099,11002,9309,10631,9191,10434,9468,3213,4684,14215,5755,10570,7304,4319,7660,10870,6882,1703,9482,6218,10216,6161,3968},{7572,18326,22631,17704,19056,14623,17760,12539,21595,17263,19500,13984,11263,13938,26681,7887,16262,16102,11685,11482,22748,16426,7707,14878,19876,19886,14757,10622},{9984,22901,24239,20871,19963,15344,16085,11768,21769,20970,23077,10428,11186,15301,27997,8264,17907,18780,11930,12285,20341,15191,9992,14433,23144,22186,16295,12604},{10013,22284,25705,21193,22964,15882,20015,14630,24509,21908,23907,14530,11679,15238,30455,9866,20733,20141,12994,13997,24059,16975,8912,17737,22154,23812,17732,12903},{8595,15351,19747,14099,21062,10733,16663,14592,18459,20011,20229,13160,5703,9610,23792,9293,21630,18254,9620,14163,17571,10822,4239,17460,13465,20089,13976,9824},{9334,21989,25739,21129,22713,17101,16837,15602,23727,21033,21400,15218,14155,16490,29594,6044,21456,19351,10977,14346,23145,16308,7505,18163,23687,27063,19468,11456},{11550,21082,26853,18399,27257,15128,21210,18015,23727,27354,28283,16058,6699,13646,31774,12623,27801,25010,14225,18755,23283,14989,6903,21992,19558,25374,17272,13910},{9503,19553,23117,17267,21648,14564,15411,13748,19883,22244,22804,12178,8254,13627,26527,8159,21623,20541,11843,14676,19497,13403,7000,16966,19906,22476,15573,11826},{10628,23450,26252,21857,21787,14668,19732,14890,24660,21232,23958,13452,12533,15007,31230,9768,19432,17687,10539,13302,22103,15968,9577,16438,22525,24681,17676,12012},{5775,13601,18299,12906,17019,13185,13723,10626,16683,15643,16367,12388,7702,11659,21050,6085,15706,16003,11509,11013,19532,13634,5150,13818,16016,16228,11912,9304},{6334,13700,17469,12970,17428,12191,12661,11068,15943,16349,16199,11518,7125,10786,20124,5709,17132,16388,10185,11455,17372,11642,4396,14292,14916,17320,12613,9011},{9233,20208,22497,20195,23768,16149,19333,12570,22855,22493,23016,13804,9050,14073,26796,10212,21968,23820,16245,13932,24599,16566,7841,18613,19667,20771,17371,14345},{8333,15396,19619,15259,22248,11635,18688,14357,19979,20089,20243,14446,6170,9895,24095,10190,22004,19808,11749,14013,20361,12532,4416,18527,13331,19461,14855,10902}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 57")
	end.

test_58() ->
	A = {{33,36,50,6,96,20,45,33,14,36,89,24,77,44,84,39,8,70,46,32,65,29,20,48}},
	B = {{85,67,36,23,70,96,51,20,11,81,3,99,98,28,14,42,54,32,20,64,49,94,1,30,47,46,2},{4,15,85,39,5,61,52,26,49,8,72,14,94,44,13,11,90,69,71,41,10,22,83,65,42,21,86},{66,2,47,92,19,3,4,7,40,46,52,10,91,57,12,85,56,17,44,44,45,13,39,84,74,68,61},{66,62,27,90,45,81,4,63,86,42,91,98,64,18,87,80,94,23,54,3,89,44,30,53,78,50,99},{92,7,58,72,29,59,79,44,1,37,32,44,85,41,16,31,10,30,92,19,36,29,48,24,73,11,22},{8,47,64,19,4,29,21,92,45,61,90,71,50,84,29,77,62,30,77,16,40,40,1,97,89,17,27},{11,82,37,57,93,47,36,7,31,88,22,26,76,71,48,74,67,66,28,54,53,47,4,37,27,11,54},{44,49,49,49,85,55,64,15,57,51,55,83,40,25,28,28,32,10,4,58,95,87,89,66,69,77,41},{40,61,46,69,27,61,12,19,51,50,52,53,75,36,68,77,97,44,75,82,54,70,95,45,4,21,14},{30,7,94,18,11,57,27,44,45,53,75,66,8,71,73,58,86,78,66,56,64,38,3,46,32,96,43},{98,81,72,92,31,60,20,8,4,18,48,6,59,20,59,39,28,32,56,99,3,26,72,27,91,73,32},{22,94,65,79,4,98,78,61,11,16,64,40,38,34,61,81,79,36,53,6,60,69,30,33,5,48,18},{46,20,6,72,50,68,34,12,93,90,32,33,41,61,31,48,29,38,75,76,76,73,90,94,90,32,17},{96,29,84,73,99,21,75,38,57,68,69,51,16,72,99,33,89,25,6,87,99,63,64,16,83,62,1},{95,62,66,29,24,77,62,62,31,93,98,97,98,88,29,70,55,80,55,29,89,59,30,82,53,39,34},{61,4,13,38,18,12,55,32,3,39,85,25,65,70,95,38,94,7,83,67,94,14,74,91,23,50,40},{40,59,28,94,6,8,7,24,69,67,78,30,46,77,52,73,69,24,51,87,69,1,70,53,34,30,42},{24,18,88,94,51,96,7,98,3,89,51,80,24,85,50,71,85,62,67,23,74,16,29,26,35,59,62},{6,51,25,57,36,62,12,6,85,71,16,51,10,69,65,65,41,96,46,97,50,30,73,27,60,93,22},{77,65,27,15,45,53,25,53,15,27,65,11,79,1,97,98,44,18,45,14,91,40,22,84,50,42,64},{42,1,46,89,39,28,6,55,13,9,36,33,13,14,8,95,89,3,51,72,20,60,73,61,89,48,33},{41,18,23,3,41,97,75,76,9,92,16,78,43,33,72,87,1,55,34,43,73,78,16,98,8,40,80},{97,53,7,43,18,11,99,29,19,95,98,80,54,79,11,66,32,50,11,36,51,25,56,53,57,91,47},{57,68,79,95,51,94,56,45,94,71,10,76,70,31,49,19,33,23,49,6,94,53,27,78,99,86,96}},
	C = {{59934,39962,55082,64875,41363,60565,42709,39819,35409,59234,52051,51125,59149,53452,45621,58983,55768,42881,56609,53293,60547,46585,50891,57580,63860,52443,41783}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 58")
	end.

test_59() ->
	A = {{59,26,88,95,5,69,82,85,14,49,29,1,66,34,37,40},{1,54,38,99,98,79,42,67,10,90,44,34,93,15,81,30},{8,79,11,68,59,31,67,95,96,20,31,97,14,47,92,40}},
	B = {{99,31,27,3,15,90,31,97,53,67,82,11,14,91,88,73,35,49,56,72,48,48},{13,68,79,21,8,40,61,23,12,18,94,23,13,19,49,68,87,80,57,68,67,89},{27,40,81,67,16,20,19,63,86,97,96,49,82,67,81,61,23,16,5,2,65,29},{85,97,96,97,90,62,75,21,81,9,16,95,47,75,19,55,24,14,67,24,67,44},{17,72,91,4,99,68,55,85,24,2,31,24,50,25,93,27,88,32,25,12,4,95},{61,54,26,29,47,96,62,46,88,70,43,4,10,13,63,69,64,51,6,11,72,42},{18,64,10,61,35,42,78,32,41,34,17,50,21,55,67,71,89,63,4,69,36,49},{64,78,55,47,11,54,97,75,58,54,79,18,9,47,46,55,18,72,9,19,97,79},{46,57,7,27,28,53,48,90,9,6,81,60,38,37,14,11,95,40,11,1,26,61},{50,82,62,58,53,82,3,79,10,76,52,93,11,86,4,96,2,84,44,17,46,16},{51,85,9,39,46,15,87,76,74,87,37,2,71,99,41,15,31,45,29,72,58,68},{89,83,63,61,63,4,35,41,97,45,7,4,13,10,80,11,68,7,11,40,85,15},{46,69,54,78,76,85,99,54,42,40,89,55,31,53,61,22,91,36,49,10,86,72},{88,6,36,66,85,42,27,5,50,63,89,81,37,33,8,10,64,85,64,76,38,71},{59,94,75,95,47,97,97,32,10,76,56,8,62,22,38,78,66,73,27,12,20,90},{49,75,42,92,63,80,86,76,23,37,80,95,87,8,99,26,85,68,7,14,79,93}},
	C = {{42673,50896,40342,45851,35145,48024,49264,41792,41807,41480,47415,36549,28493,41778,40940,43083,38734,39349,23074,23787,48097,43825},{43848,64945,53037,49659,48843,56276,57352,46862,40600,40577,46736,37516,31666,40276,44545,45350,48732,43752,27286,21942,49260,53684},{45874,60970,45276,46195,40924,46117,55763,43952,37772,34484,46455,32687,29446,32042,42198,37583,54358,43899,22706,27003,46492,54505}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 59")
	end.

test_60() ->
	A = {{45,15},{9,90},{84,92},{26,82},{93,52},{54,64},{18,13},{91,97},{52,16},{4,66},{33,72},{54,24}},
	B = {{16,69,11,5,46,10,10,13,75,27,9,87,2,86,68,88,60,5},{15,62,24,83,88,70,88,34,37,94,74,53,46,55,72,93,99,48}},
	C = {{945,4035,855,1470,3390,1500,1770,1095,3930,2625,1515,4710,780,4695,4140,5355,4185,945},{1494,6201,2259,7515,8334,6390,8010,3177,4005,8703,6741,5553,4158,5724,7092,9162,9450,4365},{2724,11500,3132,8056,11960,7280,8936,4220,9704,10916,7564,12184,4400,12284,12336,15948,14148,4836},{1646,6878,2254,6936,8412,6000,7476,3126,4984,8410,6302,6608,3824,6746,7672,9914,9678,4066},{2268,9641,2271,4781,8854,4570,5506,2977,8899,7399,4685,10847,2578,10858,10068,13020,10728,2961},{1824,7694,2130,5582,8116,5020,6172,2878,6418,7474,5222,8090,3052,8164,8280,10704,9576,3342},{483,2048,510,1169,1972,1090,1324,676,1831,1708,1124,2255,634,2263,2160,2793,2367,714},{2911,12293,3329,8506,12722,7700,9446,4481,10414,11575,7997,13058,4644,13161,13172,17029,15063,5111},{1072,4580,956,1588,3800,1640,1928,1220,4492,2908,1652,5372,840,5352,4688,6064,4704,1028},{1054,4368,1628,5498,5992,4660,5848,2296,2742,6312,4920,3846,3044,3974,5024,6490,6774,3188},{1608,6741,2091,6141,7854,5370,6666,2877,5139,7659,5625,6687,3378,6798,7428,9600,9108,3621},{1224,5214,1170,2262,4596,2220,2652,1518,4938,3714,2262,5970,1212,5964,5400,6984,5616,1422}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 60")
	end.

test_61() ->
	A = {{65,58,88,95,31,21,96,36,51,26,5,12,21,28,14,29,57,74,42,3,19,90,49,38,62,81},{23,34,98,30,3,78,90,95,76,11,28,58,90,3,44,86,37,18,75,83,66,35,6,27,48,78}},
	B = {{97,85,22,88,13,72,38,97,3,62,73,98,19,64,6,41,53,24,3,58,99,24,13,8,26,53,37,80,91},{54,97,65,63,3,22,94,52,46,71,80,8,27,36,11,14,70,79,14,77,71,14,20,26,3,27,82,82,89},{21,94,47,99,23,8,32,90,23,55,52,82,64,84,58,86,97,96,2,51,98,97,92,80,49,10,47,61,12},{48,13,15,53,12,89,92,12,67,35,13,68,27,15,12,60,29,30,38,23,64,95,10,92,21,50,29,62,61},{48,70,9,49,11,57,64,97,22,16,10,32,12,91,19,46,18,47,58,59,92,12,86,82,98,61,40,33,41},{71,88,9,92,86,57,89,99,6,72,1,15,41,32,2,72,93,11,36,14,65,46,23,4,25,74,16,51,79},{28,43,26,14,28,95,39,10,51,25,87,13,95,60,9,72,68,72,30,69,23,71,52,68,18,38,15,35,42},{93,35,92,31,22,22,10,27,34,47,13,57,39,95,23,23,10,13,89,17,56,62,16,11,46,57,20,37,77},{62,19,89,5,41,75,14,18,46,94,68,16,98,76,33,54,49,18,37,92,40,61,17,30,26,34,36,82,15},{26,68,81,34,29,90,63,68,96,31,53,81,34,1,94,69,95,38,91,20,58,87,64,74,98,70,62,24,25},{82,42,78,7,96,92,91,14,73,96,34,8,17,98,46,54,82,17,79,38,36,74,96,2,86,21,32,75,94},{79,96,68,77,24,29,77,90,76,47,36,9,12,97,33,57,45,94,29,48,25,11,99,58,12,77,86,43,29},{88,64,85,98,82,76,47,74,94,66,49,79,63,20,4,73,77,53,18,31,99,52,96,72,69,33,30,79,75},{81,21,39,53,89,78,51,26,70,17,85,26,78,41,67,74,45,40,16,80,72,59,60,10,52,12,9,20,9},{61,55,78,56,47,67,14,95,62,24,44,97,14,17,11,58,8,69,71,81,5,75,64,57,16,22,10,68,42},{51,72,77,35,39,9,41,89,28,50,92,81,13,9,44,60,93,34,85,37,71,20,40,28,88,29,64,86,87},{35,81,8,89,32,34,8,5,58,13,60,93,36,39,36,45,7,85,77,64,94,22,21,48,56,28,54,35,27},{66,11,63,79,69,78,57,54,10,90,19,34,86,76,37,51,68,26,37,45,91,87,47,90,96,36,61,5,68},{78,47,45,15,83,10,25,27,37,34,68,68,99,76,46,53,70,18,20,78,18,45,29,47,47,70,50,6,62},{54,3,89,55,95,40,29,75,20,9,63,71,32,81,86,66,28,72,93,2,14,98,70,20,79,65,31,24,87},{34,54,90,83,62,60,49,86,2,61,6,93,43,28,15,58,49,47,52,30,76,60,22,73,52,96,79,44,92},{43,63,72,77,95,38,39,43,54,53,81,25,85,91,61,50,82,88,29,62,82,56,19,75,15,74,28,67,77},{76,37,96,95,58,96,65,46,97,95,32,12,79,91,33,70,77,9,89,37,76,94,13,27,89,23,81,11,94},{84,74,27,39,49,74,3,86,43,23,33,77,34,35,57,86,16,17,44,43,99,40,68,75,52,80,23,52,38},{79,5,52,30,97,33,4,25,12,5,97,34,96,59,98,88,42,32,85,69,62,20,42,83,43,93,34,21,74},{98,9,11,75,7,28,42,97,78,14,6,90,42,64,46,87,48,15,56,49,52,3,34,33,35,4,7,78,7}},
	C = {{71090,58727,56400,70764,51140,64583,52167,61501,53920,54463,61085,62096,68600,69996,44078,72648,67439,54652,50395,63448,81206,64233,46529,66479,51930,52683,46630,59052,64152},{82435,68395,76496,74346,65776,61223,52998,78909,56247,60707,64691,74590,68608,75756,47077,81617,75258,61164,63178,61431,76214,70115,62356,62100,59733,62612,50604,69494,75890}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 61")
	end.

test_62() ->
	A = {{42,95,56,33,98,18,66,98,21,78,42,26,36,92,89,36,51,96,30,27,75,31,73,83,74,13,9,61,83},{83,88,5,33,41,36,68,92,3,98,58,7,80,70,94,53,54,65,63,65,1,56,56,56,81,41,1,37,4},{66,46,4,12,52,64,89,25,62,54,52,47,65,6,76,30,1,68,44,68,74,39,77,51,37,57,49,62,37},{63,15,24,88,36,58,66,85,79,75,51,87,69,28,70,32,96,5,10,49,40,5,42,8,39,30,89,47,29},{27,60,31,90,62,31,7,26,6,69,1,91,91,36,91,90,29,92,64,48,1,8,35,59,89,57,68,61,30},{98,77,93,11,45,61,96,56,90,50,66,43,39,94,77,29,89,97,14,4,83,29,61,27,21,55,90,97,89},{19,54,26,92,84,7,56,54,73,23,79,55,53,76,82,93,63,82,95,34,75,20,27,9,89,62,96,35,16},{42,14,53,6,50,4,94,77,52,88,81,97,76,10,45,26,28,73,77,61,98,21,13,59,73,65,21,55,94},{42,22,98,94,23,44,79,12,30,37,91,22,6,78,86,66,30,60,95,64,12,35,26,87,87,41,50,21,36},{57,47,57,47,99,79,50,95,24,79,25,92,17,77,21,43,13,72,14,71,78,95,91,7,48,43,21,38,9},{3,43,65,68,68,23,28,4,60,83,21,2,63,67,15,67,42,45,92,61,51,23,15,43,88,78,29,74,92},{37,23,9,55,26,48,51,55,4,46,11,87,11,25,29,51,71,3,93,75,83,26,52,28,96,41,7,72,69},{85,82,80,57,93,26,39,67,74,44,43,13,78,61,35,50,38,59,85,17,12,56,10,64,25,67,28,3,40},{74,63,76,80,89,54,26,15,44,46,99,40,75,57,69,89,76,63,59,53,92,89,64,43,52,43,60,52,15},{93,20,98,56,49,65,40,20,67,74,84,97,89,60,40,12,95,9,95,24,19,69,9,64,12,22,71,94,59},{94,69,52,31,92,22,7,64,88,74,7,51,67,52,25,56,58,71,98,55,98,74,35,46,27,89,24,51,44},{94,87,98,38,74,16,59,37,26,59,5,11,4,84,3,25,69,50,42,97,30,11,23,77,82,63,71,76,66},{85,20,73,80,94,13,82,92,18,34,59,57,98,78,90,98,59,45,74,95,32,5,62,97,5,92,34,24,65},{98,5,6,89,30,78,14,45,45,83,55,45,78,33,7,59,12,28,93,71,80,69,88,22,97,4,81,30,91},{8,4,36,68,82,54,95,82,68,96,62,54,29,71,98,51,26,71,73,45,6,59,34,39,16,33,43,62,57},{75,52,23,63,93,37,93,35,12,10,21,38,84,91,44,40,98,11,32,15,64,47,39,77,35,6,81,1,72},{54,34,95,85,16,58,84,36,61,97,64,30,66,86,44,39,5,96,8,61,46,49,70,33,63,10,92,48,98},{13,16,32,45,88,15,55,42,64,51,75,2,17,14,73,42,11,52,26,61,41,27,83,96,23,14,29,22,79}},
	B = {{74,54,62,95,46,84,93,11,36},{56,89,35,55,45,16,3,82,39},{9,28,12,8,60,79,92,75,16},{21,82,75,30,50,36,89,82,2},{90,77,25,85,64,75,50,86,71},{77,89,51,77,47,25,82,83,53},{37,44,95,49,31,22,80,9,95},{80,45,26,45,19,2,22,1,25},{41,68,53,94,36,68,16,78,18},{5,80,14,17,17,52,70,89,43},{47,74,18,38,65,77,55,31,92},{97,7,46,88,38,98,47,54,10},{40,27,92,69,78,91,98,50,30},{92,69,68,87,40,22,31,43,61},{77,66,68,55,64,77,70,82,48},{24,1,72,64,91,60,13,61,44},{42,91,30,40,73,91,65,18,69},{20,21,95,43,85,73,2,49,1},{78,15,72,32,1,43,25,29,5},{25,25,14,14,27,14,29,67,62},{30,44,14,6,41,87,25,50,53},{4,40,98,42,57,76,82,25,43},{48,72,33,17,13,79,1,31,72},{49,50,50,34,36,92,28,35,4},{7,24,14,63,15,63,71,52,76},{15,15,73,96,67,61,65,18,94},{11,53,25,28,31,36,9,32,47},{25,19,40,42,55,7,9,98,85},{30,6,94,46,27,80,37,17,24}},
	C = {{75330,81480,79918,78747,72780,94134,70152,82061,73996},{68345,75589,77098,76324,66987,80724,73799,71672,71484},{61606,65952,73596,71921,62865,82911,63863,71006,68949},{63970,74260,66294,73251,62985,80569,72617,70758,65959},{61951,62232,76504,75646,69702,85045,66883,81340,58444},{78241,88720,90585,92124,84486,103916,79895,85756,85216},{71478,76443,82343,84492,77354,93319,70692,82074,75060},{65396,61532,77388,75579,66845,96087,73719,71695,69888},{60845,68688,76277,69568,66076,84226,74435,73432,64988},{69400,73987,71185,76564,66535,83807,70574,77463,70751},{51922,60592,72101,69213,63187,79880,65163,76732,64024},{56999,53864,60982,61206,50227,71865,59192,61493,61161},{65931,69979,77797,78606,68349,85008,71624,69178,57173},{74051,87614,86402,86177,87494,108591,85818,91448,81721},{73386,77746,81376,82464,73673,98958,86246,80505,68024},{71707,73521,82588,85415,74579,98314,72693,80487,67688},{59525,69290,67091,72364,63350,78779,66777,73337,69713},{83763,78761,93894,90450,83810,104706,86119,80833,78100},{62781,70448,77002,73160,60711,90582,74297,73445,65533},{69693,73610,82404,76828,67983,82432,71785,78619,68116},{67118,72568,75017,72747,64163,85210,70787,60968,63633},{60789,77623,84320,75392,71810,91921,78571,83172,71025},{51447,60273,59589,54524,53006,74334,50902,60979,54603}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 62")
	end.

test_63() ->
	A = {{34,85,78,11,83,79,35,71,72,72,83,93,59,74,92,94,85},{64,82,40,38,90,69,86,59,45,87,71,44,14,11,85,32,43},{38,56,51,2,39,87,47,71,6,9,8,60,55,78,14,47,96},{63,10,66,25,26,54,9,55,39,66,80,19,86,58,73,49,78},{27,72,53,37,78,57,37,94,97,8,59,49,25,29,79,54,69},{7,98,23,75,80,31,89,9,28,33,40,29,61,43,95,62,93},{46,64,96,31,39,77,67,64,75,61,59,53,22,4,51,54,60},{97,94,23,29,74,41,30,9,12,30,80,72,62,96,86,45,40},{41,71,9,18,4,16,26,66,69,64,20,51,20,10,46,94,26},{39,1,29,69,97,89,8,69,60,95,78,93,18,63,54,33,26},{34,57,93,11,77,43,20,68,58,18,86,39,3,47,97,74,96},{21,77,8,25,35,29,55,22,75,40,95,39,93,62,64,83,82},{71,68,75,62,45,44,68,79,44,9,56,76,98,90,55,47,43},{46,13,52,86,29,77,71,16,70,23,63,18,77,84,6,28,29},{58,93,7,82,77,72,30,35,30,39,9,17,55,16,3,23,50},{29,88,38,97,90,17,82,40,72,85,4,80,20,74,82,66,8},{46,18,72,47,22,6,63,70,37,15,69,40,27,2,57,51,51},{21,16,33,19,93,45,36,86,80,96,6,43,83,19,75,68,99},{50,67,10,5,32,13,95,14,25,90,63,2,27,72,61,43,3},{65,8,53,62,48,79,72,11,47,19,44,79,49,62,90,35,30},{11,88,58,2,86,11,56,62,61,70,6,86,9,32,27,2,65},{92,56,89,84,89,58,96,48,34,48,76,75,8,8,8,21,19},{86,10,25,62,19,91,96,15,82,81,59,37,83,3,3,98,49},{47,64,13,19,4,38,37,67,80,35,99,86,63,68,49,43,27},{86,45,51,59,10,74,31,47,59,60,19,29,97,81,79,25,98},{54,58,74,78,90,87,14,83,45,55,81,14,67,7,30,62,64},{68,32,38,57,78,60,13,31,42,10,23,55,26,9,25,87,87}},
	B = {{5,45,42,50,94},{7,47,5,54,85},{29,18,30,52,96},{95,54,51,61,48},{18,67,62,64,8},{54,30,44,98,67},{80,81,71,80,8},{67,56,17,88,92},{46,19,96,45,66},{40,70,40,91,30},{27,99,72,30,41},{65,96,43,23,62},{28,63,52,52,50},{72,28,85,75,55},{14,83,57,15,9},{10,94,64,47,11},{23,7,46,2,57}},
	C = {{43030,68674,61363,62126,61014},{35853,57628,47299,54122,46201},{30950,37571,36102,42758,44242},{30182,46372,44761,44137,45410},{35012,50199,47425,47387,49091},{33816,52385,46718,44535,37582},{35381,50265,45138,50455,50641},{30928,55287,47602,46072,46480},{23162,39909,31726,34814,33937},{40848,54835,49555,53261,45468},{30194,50158,47295,43542,47616},{32151,53617,50662,43840,41860},{43104,57640,52382,55681,57245},{37677,40602,46004,46757,41474},{27355,35741,31942,41598,38198},{42756,58577,51211,55474,44121},{27505,41490,35143,34007,36186},{33901,50663,47598,49364,42706},{25174,42909,37042,40094,28330},{36816,49593,47678,44996,41258},{29126,39139,34221,39728,39639},{39013,53306,44451,52724,49442},{36755,52495,50046,52028,43475},{34178,50738,45088,43396,46120},{37304,46080,48471,50516,53395},{35490,52373,46224,54431,52295},{25967,39948,37554,36641,38457}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 63")
	end.

test_64() ->
	A = {{13,64},{42,68},{74,16},{74,86},{19,28},{76,22},{28,8},{64,30},{75,52},{76,56},{32,77},{13,54},{78,25},{45,30},{53,31},{76,68},{33,7},{92,8},{16,55},{87,87},{93,99},{23,55},{27,55},{17,71}},
	B = {{38,48,85,11,37,93,46,88,65,68,62,26},{4,23,48,35,62,76,68,57,12,25,83,84}},
	C = {{750,2096,4177,2383,4449,6073,4950,4792,1613,2484,6118,5714},{1868,3580,6834,2842,5770,9074,6556,7572,3546,4556,8248,6804},{2876,3920,7058,1374,3730,8098,4492,7424,5002,5432,5916,3268},{3156,5530,10418,3824,8070,13418,9252,11414,5842,7182,11726,9148},{834,1556,2959,1189,2439,3895,2778,3268,1571,1992,3502,2846},{2976,4154,7516,1606,4176,8740,4992,7942,5204,5718,6538,3824},{1096,1528,2764,588,1532,3212,1832,2920,1916,2104,2400,1400},{2552,3762,6880,1754,4228,8232,4984,7342,4520,5102,6458,4184},{3058,4796,8871,2645,5999,10927,6986,9564,5499,6400,8966,6318},{3112,4936,9148,2796,6284,11324,7304,9880,5612,6568,9360,6680},{1524,3307,6416,3047,5958,8828,6708,7205,3004,4101,8375,7300},{710,1866,3697,2033,3829,5313,4270,4222,1493,2234,5288,4874},{3064,4319,7830,1733,4436,9154,5288,8289,5370,5929,6911,4128},{1830,2850,5265,1545,3525,6465,4110,5670,3285,3810,5280,3690},{2138,3257,5993,1668,3883,7285,4546,6431,3817,4379,5859,3982},{3160,5212,9724,3216,7028,12236,8120,10564,5756,6868,10356,7688},{1282,1745,3141,608,1655,3601,1994,3303,2229,2419,2627,1446},{3528,4600,8204,1292,3900,9164,4776,8552,6076,6456,6368,3064},{828,2033,4000,2101,4002,5668,4476,4543,1700,2463,5557,5036},{3654,6177,11571,4002,8613,14703,9918,12615,6699,8091,12615,9570},{3930,6741,12657,4488,9579,16173,11010,13827,7233,8799,13983,10734},{1094,2369,4595,2178,4261,6319,4798,5159,2155,2939,5991,5218},{1246,2561,4935,2222,4409,6691,4982,5511,2415,3211,6239,5322},{930,2449,4853,2672,5031,6977,5610,5543,1957,2931,6947,6406}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 64")
	end.

test_65() ->
	A = {{39,66},{71,8},{30,3},{64,60},{86,60}},
	B = {{60,95,99,10,5,30,39,7,54,54,1,32,1,14,56,24,92,65,14,96,4,5,8,75,54,18,52,66},{52,36,95,44,90,67,89,34,21,37,60,20,51,88,40,27,93,60,30,69,84,2,23,10,81,76,75,23}},
	C = {{5772,6081,10131,3294,6135,5592,7395,2517,3492,4548,3999,2568,3405,6354,4824,2718,9726,6495,2526,8298,5700,327,1830,3585,7452,5718,6978,4092},{4676,7033,7789,1062,1075,2666,3481,769,4002,4130,551,2432,479,1698,4296,1920,7276,5095,1234,7368,956,371,752,5405,4482,1886,4292,4870},{1956,2958,3255,432,420,1101,1437,312,1683,1731,210,1020,183,684,1800,801,3039,2130,510,3087,372,156,309,2280,1863,768,1785,2049},{6960,8240,12036,3280,5720,5940,7836,2488,4716,5676,3664,3248,3124,6176,5984,3156,11468,7760,2696,10284,5296,440,1892,5400,8316,5712,7828,5604},{8280,10330,14214,3500,5830,6600,8694,2642,5904,6864,3686,3952,3146,6484,7216,3684,13492,9190,3004,12396,5384,550,2068,7050,9504,6108,8972,7056}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 65")
	end.

test_66() ->
	A = {{72,93,36},{94,40,54},{30,94,30},{16,7,76},{22,18,28},{47,99,36},{50,23,75},{23,48,82},{74,39,88},{63,56,28},{37,36,86},{87,19,69}},
	B = {{47,79,21,22,38,95,39,23,5,5},{25,30,76,19,47,67,63,82,36,37},{65,98,73,78,13,8,27,15,91,36}},
	C = {{8049,12006,11208,6159,7575,13359,9639,9822,6984,5097},{8928,13918,8956,7040,6154,12042,7644,6252,6824,3894},{5710,8130,9964,4786,5948,9388,7902,8848,6264,4708},{5867,8922,6416,6413,1925,2597,3117,2082,7248,3075},{3304,5022,3874,3010,2046,3520,2748,2402,3306,1784},{7024,10211,11139,5723,6907,11386,9042,9739,7075,5194},{7800,11990,8273,7387,3956,6891,5424,4161,7903,3801},{7611,11293,10117,7814,4196,6057,6135,5695,9305,4843},{10173,15640,10942,9233,5789,10347,7719,6220,9782,4981},{6181,9401,7623,4634,5390,9961,6741,6461,4879,3395},{8229,12431,9791,8206,4216,6615,6033,5093,9307,4613},{9049,14205,8308,7657,5096,10090,6453,4594,7398,3622}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 66")
	end.

test_67() ->
	A = {{47,69,79,60,65,12,96,85,34,79,78,75,67,16,54,27,13,21,17,89},{43,37,55,94,49,11,73,81,76,64,63,84,27,43,46,79,49,38,1,19},{76,32,72,86,46,2,87,8,7,52,64,63,6,65,35,15,34,8,15,96},{53,31,95,81,78,31,55,9,86,87,11,93,73,75,98,23,14,72,8,52},{98,13,25,49,21,29,67,46,91,47,18,87,28,67,89,43,18,19,88,34},{17,3,3,56,31,33,75,89,34,22,78,20,43,41,17,8,69,86,19,60},{55,92,86,55,73,85,53,43,29,86,67,75,5,99,79,27,35,75,89,74},{57,70,25,16,42,26,25,22,24,34,4,59,21,60,86,49,22,78,80,12},{13,33,67,99,51,49,93,75,31,21,92,39,40,53,89,85,67,16,90,21},{38,60,73,57,53,27,48,89,96,66,18,75,20,84,9,86,98,45,46,62},{87,58,7,26,15,96,85,5,23,57,66,24,7,61,52,15,97,66,77,15},{8,78,33,88,51,46,80,21,2,64,65,77,77,48,91,2,1,13,93,87},{30,48,22,63,75,27,69,96,55,60,29,64,7,80,41,59,61,75,71,66},{39,92,77,50,76,63,8,62,84,46,28,55,47,21,38,36,14,71,25,53},{73,86,32,58,36,61,45,77,58,20,83,64,65,38,94,88,95,26,92,36},{98,15,23,91,93,93,39,32,96,65,75,10,61,50,95,85,73,84,10,20}},
	B = {{42,79},{4,26},{45,47},{88,91},{59,24},{2,95},{51,82},{81,60},{6,17},{16,70},{81,82},{38,21},{46,38},{52,10},{52,74},{78,5},{28,7},{7,77},{10,17},{70,11}},
	C = {{53100,54244},{50683,50017},{44907,42992},{47048,54344},{40758,45361},{38894,42391},{51045,61627},{29230,35816},{55998,54931},{49238,43907},{31980,50157},{46051,50790},{48610,47555},{38396,45487},{53555,55163},{52652,63863}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 67")
	end.

test_68() ->
	A = {{14,44,61,20,77,69,47,90,86,84,12,42,31,38,16,90},{19,93,85,5,26,73,86,29,93,81,44,62,78,23,66,49},{69,22,46,20,83,94,50,76,67,11,59,77,35,61,46,33},{52,8,14,52,18,50,68,68,14,2,57,59,77,46,92,56},{5,63,45,90,92,1,35,71,90,71,29,96,88,59,89,48},{25,46,63,21,25,12,57,15,22,71,30,68,66,58,36,58},{69,78,76,63,76,71,73,7,17,8,58,17,72,69,38,77},{38,59,17,47,50,30,53,15,47,21,56,70,36,29,74,92},{26,27,72,13,1,69,43,8,89,70,82,94,66,30,87,65},{50,40,48,60,88,87,92,36,8,1,38,15,44,60,59,82},{60,49,59,83,56,67,95,91,8,67,18,37,88,58,37,6},{38,19,96,60,24,57,23,97,39,45,13,41,35,41,39,93},{1,98,90,37,16,98,2,74,96,78,58,21,25,20,82,95},{23,23,50,16,50,96,73,84,19,11,2,33,35,41,83,62}},
	B = {{21,9,2,98,26,53,54,17,27,10,75,89,21,31,62,18,66,67,69},{26,35,90,28,26,90,26,1,78,26,13,72,91,24,4,29,24,48,60},{17,53,8,92,50,6,12,68,50,70,83,92,36,36,30,61,97,42,76},{36,81,20,43,36,51,22,96,31,92,61,55,24,90,62,40,94,99,3},{72,38,79,18,14,73,99,72,62,13,33,71,60,80,49,50,29,57,89},{19,9,41,51,33,57,46,77,53,67,16,81,93,48,65,84,79,25,46},{3,66,65,94,78,16,22,37,21,6,91,93,84,32,28,36,63,32,30},{52,49,84,83,4,44,16,77,33,14,49,82,66,41,99,43,50,30,58},{65,83,5,93,4,41,15,16,9,59,43,87,86,53,1,97,14,68,71},{56,36,5,15,52,62,55,1,94,55,67,76,61,88,31,23,97,21,94},{37,62,85,25,13,23,99,89,28,75,42,65,4,63,62,66,79,1,34},{70,80,51,63,28,78,98,18,79,34,60,74,87,55,25,28,15,2,93},{76,39,52,90,90,30,46,24,14,30,56,3,8,45,98,52,56,62,5},{50,61,84,69,27,6,47,99,99,3,36,23,78,17,21,26,41,5,75},{64,77,34,5,41,88,67,44,57,5,44,34,56,33,85,15,32,35,17},{71,45,87,67,35,88,28,71,70,91,46,59,70,13,52,51,35,49,92}},
	C = {{40219,40653,41593,49595,26325,43126,34361,40760,43600,35896,40535,58508,54529,38907,36958,40929,42808,32700,54832},{40797,47133,42528,54273,35893,46134,39607,36717,45558,37717,46615,62210,57582,40811,38875,43866,48293,34586,52524},{38928,42361,43642,52288,25455,41654,43627,46125,41018,31130,41430,58663,51817,39021,42415,41181,43116,31254,50782},{34673,39557,39382,44544,28067,36677,36175,40521,33145,26657,38514,43742,39465,31557,43997,30828,38906,28233,34332},{52549,56767,48288,53014,33552,52549,47150,46408,50310,37869,48916,59455,57046,49475,46487,42117,46922,41728,54989},{32141,35606,33603,40255,28090,32893,31952,30104,37804,26846,37001,42236,39264,29994,29557,27511,36694,24244,40901},{36151,41233,46727,51891,33329,41964,39920,48092,43206,36050,43423,55477,47689,37390,41877,39525,49105,37777,46809},{36079,40258,39845,39889,25193,42530,37377,35939,37761,31033,36111,47142,43910,32655,34516,32011,34862,29799,41687},{40886,46476,36817,48829,31409,42692,42213,37686,42203,39071,43707,54942,49244,38721,38782,41020,45068,29011,48410},{34177,39082,45315,47216,30190,40559,37450,48320,39991,31593,40245,52557,47615,35018,42148,36598,44695,34185,42976},{36757,42806,42672,54196,35540,40162,37854,45133,42286,31011,47850,57467,49198,42831,47025,36667,53401,37082,44897},{35223,38648,35927,48835,25765,37795,29193,43172,38827,35717,40403,51849,44388,33728,39867,35516,44111,31858,46035},{41416,45290,42814,47605,27575,49532,35590,44344,47121,44967,40128,61320,56268,40202,41399,45533,48634,35301,53016},{31177,34440,38006,42425,25598,36528,30264,39551,35392,24724,34653,46775,46014,28626,38939,32020,36710,26344,38628}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 68")
	end.

test_69() ->
	A = {{85,1,80,82,87,20,20,75,33,30},{22,44,70,88,87,40,89,60,96,94},{36,45,90,95,95,64,62,90,23,26},{78,41,6,12,4,60,87,41,62,42},{19,49,10,72,52,28,20,48,44,16},{85,92,57,41,75,90,59,11,7,28},{56,98,46,10,82,16,54,13,4,68},{44,32,89,66,6,61,41,15,16,12}},
	B = {{59,28,47,95,81,78,70,7,77,15,91,44,98,68,22,83},{74,24,95,63,89,50,50,92,66,94,71,42,99,2,67,99},{54,81,73,13,78,52,67,8,16,83,44,45,70,91,86,49},{25,30,76,79,32,37,86,58,17,28,60,80,91,73,49,11},{71,48,1,52,61,40,56,9,58,29,33,31,10,38,37,27},{83,47,71,41,51,75,59,62,97,83,17,76,5,33,75,35},{58,18,52,98,8,84,27,96,71,30,17,66,31,79,2,20},{4,75,93,84,16,54,32,76,28,23,85,55,88,14,64,83},{90,63,28,21,75,92,40,46,9,49,11,83,65,25,87,79},{5,65,31,42,56,56,22,9,55,27,27,90,96,1,19,15}},
	C = {{23876,26474,27538,31213,27680,29300,29384,17514,21738,19240,27345,29043,34706,26499,25835,24707},{34543,34298,35749,38614,35457,42104,33461,31495,30173,29875,27244,44345,43793,29369,34139,30083},{30902,30801,37440,37705,31157,35493,34112,29529,29074,28726,30013,36224,38031,30144,32896,28620},{24524,18303,24550,28723,22477,31128,19773,23516,25257,18679,18925,27991,27922,17979,19205,23838},{18495,16262,21022,22150,18708,20512,19394,18837,15853,15861,17496,21896,23865,13824,19357,18194},{32957,22413,31632,33470,32737,33223,30246,25222,33406,28569,26011,30214,32299,24982,26433,27648},{24324,19253,23515,27126,27732,25924,21828,19054,25968,21807,21559,23939,29826,17180,19058,22983},{20847,17995,25305,21498,21383,23315,22745,17548,18446,20823,17859,23326,24864,22075,21459,17713}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 69")
	end.

test_70() ->
	A = {{77,76,10,49,99,80,8,40,64},{9,81,81,42,26,42,17,66,79},{46,17,31,14,42,15,78,30,94},{20,29,63,73,85,66,53,6,45},{68,72,79,11,8,93,11,72,69},{74,26,99,92,54,17,14,53,53},{80,91,71,39,85,57,75,23,56},{63,14,67,70,44,45,88,86,48},{87,39,50,94,99,20,28,49,82},{95,13,14,66,77,58,94,96,80},{57,74,9,46,24,43,75,35,38},{83,37,57,33,18,76,31,35,85},{34,34,57,37,52,68,33,42,70},{62,25,98,26,77,15,93,17,40},{72,15,43,79,46,57,80,96,95},{86,23,80,49,86,20,72,44,45},{72,32,83,22,80,78,5,82,85},{16,99,13,38,31,49,11,59,83}},
	B = {{88,6,30,38,30,31,71,22,54,89,45,23,16,5,37,79,86,75,25,10,73,46,85,1,48,7,13,82,25},{70,86,62,66,88,17,44,27,98,75,7,89,40,23,66,89,78,19,81,84,52,80,42,97,90,63,97,14,10},{29,30,17,62,80,43,67,73,22,22,19,3,86,59,72,14,62,90,24,39,34,24,65,96,14,27,33,69,60},{25,72,24,41,36,19,28,56,7,8,92,40,79,35,60,6,98,26,93,68,33,81,4,73,97,42,22,65,13},{81,68,14,80,54,10,67,38,73,58,71,20,98,88,34,75,94,18,30,78,5,15,49,63,4,59,61,70,63},{28,62,94,64,13,65,49,29,67,84,92,64,10,37,92,18,93,2,96,15,3,35,58,54,56,62,39,30,2},{9,20,53,10,52,75,32,81,10,20,97,4,40,24,27,29,73,76,24,98,71,37,37,6,1,17,58,38,25},{5,76,61,83,36,22,49,90,35,97,85,66,50,55,55,60,99,92,70,19,87,63,58,90,81,94,14,46,24},{32,11,64,92,69,49,99,22,44,39,67,4,39,56,58,51,44,15,35,82,32,1,35,9,88,17,4,45,52}},
	C = {{26190,26422,24234,32899,24220,15846,29958,18958,29052,32163,31548,20553,24321,22086,28379,28042,42078,16583,28760,26590,18361,20996,24930,26767,29185,23440,20220,25607,14807},{16154,23071,21972,30116,26051,15525,26205,21911,21168,23853,24637,17287,23697,20461,27450,20494,33831,19697,25241,24965,18742,18966,20532,29367,27701,21091,17021,20508,14280},{14169,12336,17275,21604,19945,15825,23304,17635,14967,17995,24842,7692,17740,15977,17912,17941,26719,17811,14535,23472,17169,11379,17539,13163,17318,11970,12045,19023,13596},{18122,21643,18670,25765,22345,16661,24335,20877,19166,19796,29789,12862,25830,21083,24903,17236,35613,16536,23303,26675,13867,16634,19182,24392,20068,18071,17855,23383,14815},{19509,22523,26356,31711,24658,18853,29401,21713,25024,31449,27011,19833,20076,19275,30703,23384,37808,22689,27338,20680,21329,20062,26767,28132,29072,21973,16754,22935,13584},{20440,21891,17444,29261,25170,15199,28350,24324,18774,23498,28669,13927,28745,21629,26869,20743,38804,25087,24041,24233,20778,20627,23264,28467,26341,19054,14498,28888,17060},{27507,26422,25695,33306,31415,21251,33092,25844,29116,31452,33435,19102,29341,23837,31090,29459,45709,25433,28094,33729,23987,23373,28933,30027,27205,22786,25372,29356,18485},{17799,23238,23405,29176,24947,20611,28473,29476,18967,26997,36972,15676,27314,22107,27805,21851,42895,29043,26279,27480,25536,22253,25268,26865,25986,21854,16867,28425,16267},{25886,25302,21121,33925,27910,16782,32903,24705,24448,28453,35030,16316,31348,24983,28446,27327,44505,23898,27138,30909,22611,22326,25418,28165,30233,21921,18089,31778,19204},{23073,25748,27966,34182,26266,22644,33736,29781,24501,33916,44145,18308,28264,24848,29753,28639,49038,29026,29556,31548,28410,23883,28778,25425,30794,24755,18485,31946,17984},{16821,19164,20475,21317,20235,15578,20786,18705,19130,22570,25942,15758,17294,13684,21327,20278,32607,17695,22341,23913,19668,19367,18527,19233,22742,16529,17361,18461,9592},{19132,17917,23159,27822,22191,18660,28316,19253,21274,26438,28060,14691,19146,17609,26893,20898,35020,20243,23514,21622,19294,17186,23888,20892,25987,16873,13965,23555,13615},{16813,19876,20896,27355,21654,16555,25625,19840,19913,23318,27664,14035,21655,19724,25111,18903,33595,17782,22683,22783,16110,15746,20770,23061,22690,18456,15041,21618,13976},{19557,17092,16714,24289,25397,18109,26459,23953,18047,20552,27212,9139,26300,20315,22324,20453,34771,25269,16917,27258,19808,15542,23264,21902,15258,15079,18111,25842,17712},{20170,25303,27895,34467,27160,22769,33409,30163,22374,31184,42225,17884,28474,24684,31248,25500,46919,28888,30211,30926,27578,23731,27274,27373,32663,24175,16941,30877,17813},{22557,20789,19006,28427,26105,18161,29507,25727,20859,25662,31744,12597,28510,22370,25138,24088,40488,27144,21373,27834,22681,19156,25837,24869,21131,18708,18065,29484,18471},{23372,24801,25242,36964,26819,18977,34472,24696,26730,33371,33071,17997,27543,26079,31543,26634,42987,24845,27153,24569,21311,19012,29307,30177,28447,24479,16963,29236,19095},{16598,22499,22285,27765,22334,13145,23365,16728,22491,24533,23508,18764,18491,17152,24260,21784,31395,13404,25198,23725,16884,18433,17610,24363,28508,20307,16674,16572,10722}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 70")
	end.

test_71() ->
	A = {{48},{67},{34},{33},{89},{31},{9},{15},{70},{75},{79},{26},{47},{27},{93},{94},{33},{91},{8},{78},{80},{85},{55},{43}},
	B = {{5,39,93,78,39,17,42,22,38,28,26,81,89}},
	C = {{240,1872,4464,3744,1872,816,2016,1056,1824,1344,1248,3888,4272},{335,2613,6231,5226,2613,1139,2814,1474,2546,1876,1742,5427,5963},{170,1326,3162,2652,1326,578,1428,748,1292,952,884,2754,3026},{165,1287,3069,2574,1287,561,1386,726,1254,924,858,2673,2937},{445,3471,8277,6942,3471,1513,3738,1958,3382,2492,2314,7209,7921},{155,1209,2883,2418,1209,527,1302,682,1178,868,806,2511,2759},{45,351,837,702,351,153,378,198,342,252,234,729,801},{75,585,1395,1170,585,255,630,330,570,420,390,1215,1335},{350,2730,6510,5460,2730,1190,2940,1540,2660,1960,1820,5670,6230},{375,2925,6975,5850,2925,1275,3150,1650,2850,2100,1950,6075,6675},{395,3081,7347,6162,3081,1343,3318,1738,3002,2212,2054,6399,7031},{130,1014,2418,2028,1014,442,1092,572,988,728,676,2106,2314},{235,1833,4371,3666,1833,799,1974,1034,1786,1316,1222,3807,4183},{135,1053,2511,2106,1053,459,1134,594,1026,756,702,2187,2403},{465,3627,8649,7254,3627,1581,3906,2046,3534,2604,2418,7533,8277},{470,3666,8742,7332,3666,1598,3948,2068,3572,2632,2444,7614,8366},{165,1287,3069,2574,1287,561,1386,726,1254,924,858,2673,2937},{455,3549,8463,7098,3549,1547,3822,2002,3458,2548,2366,7371,8099},{40,312,744,624,312,136,336,176,304,224,208,648,712},{390,3042,7254,6084,3042,1326,3276,1716,2964,2184,2028,6318,6942},{400,3120,7440,6240,3120,1360,3360,1760,3040,2240,2080,6480,7120},{425,3315,7905,6630,3315,1445,3570,1870,3230,2380,2210,6885,7565},{275,2145,5115,4290,2145,935,2310,1210,2090,1540,1430,4455,4895},{215,1677,3999,3354,1677,731,1806,946,1634,1204,1118,3483,3827}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 71")
	end.

test_72() ->
	A = {{1,4,45,36,6,2,51,65,86},{32,22,41,92,14,19,58,40,61},{86,39,20,76,58,37,9,7,45},{59,48,79,66,23,64,1,92,60},{82,15,34,74,89,57,20,64,76},{79,83,33,21,44,4,83,51,41},{8,68,89,84,28,25,2,16,56},{25,32,29,37,2,74,46,26,59},{89,16,5,86,6,99,1,49,85},{64,92,13,90,29,43,87,76,59},{13,63,21,54,79,50,64,97,5},{95,22,12,34,81,59,82,92,63},{91,47,30,7,61,43,40,94,82},{60,8,16,4,76,6,6,98,39},{63,57,78,93,88,26,79,29,84},{23,83,45,26,48,48,75,24,70}},
	B = {{22,64,97,81,46,14,59,92,45,24,68,69,25,48,67,13,97,24,38,53,25,28,75,88,29,46,64},{4,21,5,99,82,25,8,80,2,63,24,30,68,47,36,34,14,48,69,98,3,77,54,9,81,24,84},{9,80,70,44,18,47,46,82,23,55,38,97,36,48,61,17,45,1,32,13,83,34,49,55,48,54,78},{90,60,55,33,11,66,44,1,4,54,88,64,33,82,60,48,16,60,66,1,44,17,8,40,47,2,67},{72,17,50,59,86,90,75,22,78,68,36,60,65,36,61,62,11,27,12,80,1,21,84,38,5,65,18},{62,84,7,66,22,41,92,17,99,8,4,72,30,48,34,24,27,9,53,9,54,47,34,71,56,52,12},{3,78,17,15,80,47,55,84,40,88,83,9,89,49,65,29,71,29,63,12,1,70,50,65,17,71,45},{96,64,7,99,62,94,16,32,15,33,44,51,76,26,17,24,24,18,64,90,24,45,52,73,10,66,70},{67,62,89,27,19,61,44,92,56,16,85,76,4,4,90,39,62,56,99,56,91,66,33,45,44,47,76}},
	C = {{16394,19648,14537,13653,11884,18980,12008,18580,9729,13128,19669,17672,13378,10193,17710,9455,13387,10066,20195,12842,14907,14869,12124,16339,9648,15091,19835},{19728,24010,18672,18167,14927,21243,17310,20553,12104,17881,24697,22139,16734,17624,22397,12622,16256,13752,23546,13480,15926,16621,15148,20265,14206,15921,23784},{19252,20517,21483,22122,16161,18698,19991,19773,15884,15708,21348,23910,14423,17820,22496,13100,16238,13322,19742,16947,13599,14255,18573,20011,14750,15034,21235},{26620,30517,22722,31509,19108,27144,22183,25954,17742,18509,24289,32647,20497,20873,25068,14449,18986,14001,27997,22992,22228,20817,22338,27508,19769,22050,30619},{30068,29392,26880,29766,22348,29944,27165,25253,23399,20375,28108,32806,21179,21229,29143,17672,21064,16066,27092,24221,19812,19709,25468,29002,16664,24081,27560},{15565,24063,19188,27022,25718,21438,18620,30047,14773,22741,24684,21878,23907,18332,24326,13472,20897,14018,24463,24209,11185,22005,24179,23273,15754,21704,27270},{17669,21328,18671,20496,13644,20098,16036,20431,10994,17611,19688,25171,14988,17686,21453,12923,12058,13048,21743,15394,18347,16233,15287,16228,18158,13924,25064},{15588,21972,13483,17549,12916,16374,17193,18701,15020,12787,17171,19538,13722,13920,18196,9841,14338,10211,20877,11897,14793,16583,13603,18436,14240,15291,18327},{26779,28494,22711,25900,13869,21994,23530,21251,20300,12328,24270,29066,13844,18947,24284,13182,19714,14793,27255,16989,20736,18020,17745,26415,17980,17758,24423},{26257,31881,21541,32805,27945,28952,23798,30941,18166,26331,31770,28176,28224,24983,29281,17979,22660,19730,33949,26562,16546,26882,25272,28788,21550,24121,33625},{24214,24128,12528,28655,25859,27899,20430,19540,16817,23037,20995,22523,26870,19943,20438,15737,13353,13062,23410,23738,10259,20031,22583,23044,14499,22268,23452},{28135,32065,24143,32235,28489,30742,28086,29931,25078,23402,29797,29881,27002,21368,29440,17300,25027,15668,29146,27184,16223,23852,28946,32726,15506,28802,28226},{24786,28500,23534,32132,25435,27292,23276,30584,21524,19599,25866,29189,23069,17583,26800,15055,22959,14368,27788,28625,17355,23050,27069,28884,16156,26047,28807},{19739,16482,15301,22213,17713,21015,14382,16478,13516,12642,16117,19196,16010,10374,15930,10419,12910,8308,15349,21386,9335,12190,19019,19005,6858,17803,17562},{27283,33955,30575,30479,27853,32660,29350,34515,22852,29860,35045,35301,27399,26450,36051,20890,25090,20033,32544,25568,22223,25835,28875,30289,21784,27207,35000},{17234,24949,17635,24309,22962,22567,20840,27852,18116,21820,22705,23661,22036,17908,24977,14743,17899,14396,26068,21216,15364,23221,21592,21295,18295,21347,25511}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 72")
	end.

test_73() ->
	A = {{20,50,48,99,97,4,9,24,69,68},{37,83,49,11,33,21,62,81,26,55},{16,30,69,74,88,48,67,81,64,2},{11,12,50,19,46,13,96,72,19,35},{59,44,85,66,14,89,18,5,11,61},{23,99,33,91,61,93,24,48,55,71},{71,39,26,97,7,28,22,49,55,88},{73,84,67,90,55,98,10,61,73,22},{30,84,27,85,27,23,24,64,56,48},{90,13,4,82,93,4,61,80,90,90},{50,64,17,96,25,97,70,44,57,71},{78,80,96,7,46,83,68,70,78,12},{78,46,48,71,57,1,3,37,35,30},{82,92,65,74,2,62,49,32,68,52},{32,4,71,72,53,40,46,8,52,63},{26,19,62,85,99,95,27,18,61,40},{34,69,46,16,13,67,94,21,38,56},{81,79,85,29,36,73,16,35,83,82}},
	B = {{5,79,21,65,90,97,56,1,32,10,20,95},{56,55,15,61,70,18,53,71,28,94,90,20},{60,9,18,64,60,93,75,57,90,99,18,83},{46,79,14,1,33,72,34,84,63,93,13,15},{15,59,45,88,10,86,57,35,28,57,4,42},{31,21,73,94,20,61,94,25,59,28,36,69},{99,66,40,69,40,23,64,5,97,71,36,91},{52,85,25,60,99,19,81,78,82,49,81,31},{74,42,84,62,43,62,29,75,5,15,61,71},{49,23,8,43,27,54,63,40,87,11,1,22}},
	C = {{22490,25486,15377,25696,20036,31631,25446,27929,24651,28098,14128,20677},{24394,24520,13205,28608,26295,22098,29123,22105,28345,25881,20557,23451},{27791,29622,20625,33153,25467,31489,32536,28108,31155,32761,20183,29161},{22063,20526,12112,23563,18907,18694,24224,16165,26796,21955,13581,21636},{19709,19233,13737,26470,20923,30290,29138,20032,28089,24928,12573,25175},{28044,29907,20718,34846,26447,33261,35815,31866,32122,33009,22917,26387},{22642,26603,13690,23655,24983,28900,26838,24992,27746,22910,15899,22726},{27734,32820,23121,38121,32122,39115,38056,32954,31961,34544,24920,33066},{23702,26504,14108,24457,24735,24610,26116,27425,25242,27165,20199,19967},{27978,36586,20502,34000,29626,36845,33158,28379,32367,26148,18880,30955},{29567,31106,21122,33713,26882,32376,35444,27824,34253,30030,21538,29967},{30947,30426,23911,42195,34059,35835,39510,27633,33772,32961,26639,38902},{16279,23620,11049,22016,22151,27495,22257,20790,20342,22617,13021,20407},{28913,29395,18812,32933,30878,33696,33777,28076,31667,31274,22848,31920},{21896,20391,15235,24951,17695,29797,25627,20540,26765,23693,10405,24591},{23337,25002,21501,32989,19650,35964,32051,25603,28556,28546,14458,28210},{25756,21206,16202,29331,21633,23116,28941,18227,28387,24374,17849,26972},{27630,26860,20914,37459,30585,37428,36430,28371,31567,28442,21965,33552}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 73")
	end.

test_74() ->
	A = {{53,88,60,68,72,93,68,48},{88,5,34,41,26,75,82,19},{27,31,47,24,17,9,60,32},{15,4,88,78,4,55,89,66},{23,70,53,72,49,73,36,57},{7,70,95,39,89,86,55,93},{80,8,82,3,68,38,29,50},{13,15,78,93,53,70,50,22},{25,23,35,83,46,26,20,39},{70,70,74,48,63,95,31,3},{66,31,67,79,84,65,46,38},{4,85,1,2,1,98,43,51},{37,40,24,40,15,50,22,36},{6,30,38,64,22,95,52,99},{50,82,15,54,81,93,69,18},{20,17,71,25,55,12,75,93},{58,44,92,74,71,6,55,21},{60,22,47,63,30,99,22,1},{80,85,91,45,10,65,66,7},{63,36,2,23,68,94,58,1}},
	B = {{14,70,91,79},{35,9,39,65},{83,9,17,61},{60,71,55,84},{1,67,17,8},{89,31,10,56},{81,43,47,46},{82,75,73,38}},
	C = {{30675,24101,21869,30015},{21590,18440,17469,21697},{15106,10694,11320,13647},{29854,18166,16926,23079},{25627,19198,17100,23950},{32597,22713,18874,25766},{18285,17354,15700,18000},{24898,17871,13766,22052},{16218,15838,13161,16803},{23727,18328,16695,25990},{25021,23582,19713,25824},{19622,9975,10547,15482},{15509,12207,11952,15647},{28935,19656,16877,21768},{23478,20834,17837,24445},{23092,18224,16434,17212},{21210,19421,18013,23502},{19996,15394,13189,21163},{26063,16427,19050,28198},{16902,16424,13331,17885}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 74")
	end.

test_75() ->
	A = {{43,4,69,92,92,35,93,83,68,71,9,6,89,94,12,88},{2,48,62,99,81,99,63,65,48,35,1,14,30,89,39,56},{55,63,70,86,74,47,10,55,36,38,25,37,86,43,13,23},{91,90,65,92,16,56,78,78,48,16,3,52,15,70,54,83},{50,84,3,80,75,2,27,88,64,11,4,72,37,94,21,69},{55,53,77,34,77,75,78,36,94,92,25,79,53,18,43,12},{70,55,36,77,5,4,93,26,94,9,44,3,43,95,68,27},{96,54,98,27,10,52,59,74,8,44,82,3,92,84,42,80},{73,73,85,73,69,71,95,25,52,86,25,24,53,12,14,92},{40,3,97,29,2,81,26,94,5,13,4,88,57,88,71,94},{51,30,17,98,48,67,69,28,50,92,52,32,44,41,72,88},{78,26,20,82,58,50,88,25,60,37,8,56,66,77,44,53},{55,64,2,35,50,97,80,98,64,3,60,36,64,11,84,36},{61,65,51,83,46,57,49,75,7,64,22,57,13,86,94,85},{27,95,53,78,98,90,84,25,23,14,71,46,23,99,39,98},{57,68,13,33,47,58,97,26,78,39,84,4,52,20,56,40},{65,55,45,85,37,58,76,78,40,34,61,38,31,40,71,80},{62,2,60,10,1,96,89,31,38,67,6,73,64,13,29,40},{12,36,37,76,96,98,38,69,22,10,28,99,76,66,65,30},{24,83,50,32,17,16,60,75,62,98,82,3,11,24,34,68},{6,54,91,61,88,69,87,29,1,26,73,85,42,2,78,66},{6,55,18,64,38,12,59,76,8,60,67,17,55,73,72,43},{64,33,82,11,18,8,66,63,91,92,62,79,79,75,97,17},{43,73,30,93,85,82,60,30,24,79,81,51,68,81,78,9},{30,79,49,33,19,49,96,41,91,84,54,71,89,52,85,71},{80,15,86,99,45,15,5,30,46,71,70,37,29,92,9,33}},
	B = {{18,60,20,2,39,64,13,61,64,2,14,45,44,83,83,91,44,84},{84,30,92,84,3,47,55,14,81,23,61,27,86,29,28,95,31,62},{58,63,63,43,15,9,95,48,28,71,34,7,13,42,28,49,18,62},{40,25,3,63,77,76,89,19,88,16,79,73,88,15,66,40,45,68},{86,66,37,66,96,10,50,88,3,65,67,48,76,77,93,61,3,83},{24,20,18,69,41,48,50,18,38,35,72,73,48,86,81,69,53,47},{23,99,54,42,69,55,34,2,21,84,70,58,98,29,82,29,35,27},{8,58,64,28,79,37,55,41,5,49,39,80,76,53,90,70,51,76},{75,33,68,92,65,93,73,74,23,88,55,32,99,17,96,41,73,23},{9,5,84,14,7,9,68,25,37,47,21,96,25,96,60,14,15,43},{3,80,10,26,89,20,92,93,91,49,28,89,77,3,77,39,8,77},{42,37,43,40,61,79,14,20,19,42,69,96,67,89,72,16,85,19},{29,24,71,92,74,46,45,81,39,19,26,44,75,3,22,59,88,45},{83,34,1,4,37,21,9,80,57,75,8,2,34,62,98,95,19,63},{6,10,55,55,57,99,70,72,70,33,56,29,41,17,39,8,70,42},{54,12,89,85,24,51,54,64,9,89,64,47,90,66,29,32,20,46}},
	C = {{41572,40189,46060,48330,51993,40700,50746,49043,32663,52616,44158,47204,63208,45793,64275,49210,35846,52397},{38956,32439,37164,45095,43480,37769,46161,38094,32350,44323,44014,40606,54313,41062,56668,44939,31565,45860},{33998,30433,35600,40645,40408,33660,42338,38357,32778,32963,35785,38812,48789,35858,48029,43331,31669,44788},{38774,37081,43641,45196,42695,48170,46201,38735,39293,43724,45782,43914,60217,44487,58651,50022,38106,49686},{39815,30749,37487,40837,42558,39935,36786,39456,30939,39006,38874,38771,56418,38720,54279,45108,33103,44034},{36980,37926,46625,46635,45895,43276,48932,40955,33413,45269,44681,49330,57057,46729,60433,42773,39164,45171},{32308,33212,32910,36808,39972,41582,39822,39035,37620,38310,34001,31913,51509,26694,51054,40251,32199,39860},{32665,39661,43606,40955,43003,37446,48425,48491,40620,43346,35936,43313,54265,41281,54798,51331,33889,53138},{38661,38537,49086,49787,43070,41438,51862,40459,36082,46611,46660,48720,60949,46904,56870,46294,33898,49657},{29883,29108,37888,37532,37907,38501,38937,38841,27858,40590,36694,39087,45225,42987,48650,40133,36517,41420},{31832,32124,41626,45172,45671,44349,49565,42061,38852,42935,44308,50189,58387,42622,57060,39517,35045,46339},{35080,33915,36432,41831,45199,43580,39430,40140,33982,40584,40810,42261,55851,40739,56963,42561,36637,43178},{28870,36506,40538,46416,49613,45738,44703,40863,34900,38693,43770,46831,60075,36174,56952,43733,39802,45071},{36117,33891,43103,42458,43669,44607,47755,42348,39977,43802,44659,47390,56184,48156,58607,46317,35601,51031},{45786,41488,42262,51118,49666,42758,50939,46878,41908,51015,50605,47753,65497,46819,63473,52427,32838,54170},{28970,35082,37943,41780,42603,39017,43361,39163,35341,38513,38069,41029,55176,31208,51572,38886,31238,41083},{32796,37710,42045,44839,47582,45453,49755,42346,39286,43346,44993,48472,60476,40899,58200,44528,36229,49595},{21655,27923,34912,33243,32472,34174,33178,27522,23278,33571,32892,39445,41143,38155,43858,31029,32848,31447},{36134,33848,36475,46286,50812,42240,43634,42071,33414,40083,45564,47236,56287,42947,57789,43867,39548,46207},{27501,31055,42443,36118,34221,31701,45829,34948,32129,39788,33748,41163,49558,32941,46629,35467,24864,40495},{33333,38517,41841,46865,47170,39991,50204,39613,34581,43408,47586,47846,56610,39800,51574,37273,33552,45447},{26316,29332,34928,34345,39659,32359,40755,36904,33721,35393,33158,39041,47901,29869,46120,35575,27456,40791},{34055,38773,48386,42175,47713,46197,50072,49805,39031,47494,38723,47548,56054,42459,60744,43198,42552,47154},{37809,38743,40797,47090,52663,44319,52766,47642,47095,42966,46517,53147,61167,45188,64448,49405,38194,54139},{38650,38174,54649,53595,49078,51051,53820,47651,41223,51206,47846,51992,66317,43682,61024,45442,44801,47617},{32399,31800,29786,31272,38557,31758,43355,41467,36475,36589,31035,39121,44390,37885,52204,40685,26341,45770}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 75")
	end.

test_76() ->
	A = {{44,38,87,15,21,70,63,36},{4,67,83,2,28,48,76,48},{14,42,34,37,82,74,56,90},{28,15,69,97,21,71,57,38},{53,95,29,34,46,42,56,32},{94,89,53,68,92,3,6,84},{61,29,45,75,8,90,87,70},{85,71,19,9,6,78,70,17}},
	B = {{89,49,20,5,20,41,48,95,7,26,46,44,65,35,62},{46,53,71,66,95,71,24,69,67,78,37,86,34,94,38},{43,86,95,32,30,61,9,88,4,72,5,79,3,71,21},{88,97,53,72,81,84,7,39,87,26,20,87,97,27,89},{27,71,85,57,7,86,42,69,68,98,22,18,46,77,69},{48,53,88,59,90,32,59,45,71,5,89,62,19,25,39},{53,5,90,6,73,65,10,36,82,54,54,44,58,99,93},{18,78,90,51,79,57,95,72,24,17,25,39,79,18,70}},
	C = {{18639,21431,29493,14133,22205,21262,12974,24502,16935,17184,15159,22276,14662,21946,19892},{15135,19735,30592,14574,22953,21772,11889,22669,17719,19262,13310,21365,13381,24129,18947},{18250,26469,35075,20560,26719,26928,19165,26147,23849,20010,16772,22171,21565,23179,26523},{22365,26013,29904,17988,25612,24519,12255,22982,21971,15525,14937,25182,20569,19627,24567},{20128,21692,27888,16979,24427,24307,13333,24852,21280,20046,15352,22895,18750,24474,22791},{25181,33750,33022,22677,25421,32304,19682,35134,21726,25753,13957,27275,27164,26520,29278},{25705,26904,34259,18917,31437,26818,17720,27455,24823,16160,20238,27540,25015,22820,29557},{20362,16671,24227,12598,23259,18972,13187,22665,18305,14397,18091,20817,16030,20889,20324}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 76")
	end.

test_77() ->
	A = {{68,13,54,55,21,99,60,52,82,19,54,24,47,17,66,18,43,88},{54,85,13,90,91,77,17,35,85,52,33,9,49,85,15,28,39,26},{66,46,79,24,56,81,68,95,55,67,32,30,6,72,77,1,59,80},{68,82,75,60,60,88,82,80,5,93,79,31,88,32,70,16,59,23},{15,68,15,5,92,63,29,47,34,75,35,84,71,79,87,43,80,85},{54,36,62,37,49,69,5,43,72,29,32,10,89,59,48,30,59,57},{69,2,67,94,91,96,86,46,94,24,30,9,73,85,81,45,69,90},{46,64,31,20,94,55,38,13,60,78,60,82,94,79,15,16,81,25},{79,21,64,66,23,51,49,60,34,92,52,57,8,71,95,9,39,69},{18,29,2,38,73,88,14,47,36,3,46,48,61,41,60,23,75,72},{15,95,42,98,83,16,93,99,60,64,40,21,52,60,45,17,91,38},{60,7,33,13,50,10,36,35,51,62,93,60,70,83,20,49,29,90},{43,12,1,75,39,23,17,95,95,60,19,32,78,91,67,33,75,43},{9,90,12,24,12,30,54,86,14,88,16,85,54,22,41,5,57,97},{13,41,23,57,69,49,29,62,55,20,95,65,42,12,41,33,78,53},{4,48,78,22,14,40,89,51,10,43,73,30,36,36,98,9,39,62},{13,81,38,93,65,60,43,8,13,28,41,26,80,76,35,78,6,49},{41,14,43,53,69,89,49,99,9,25,32,43,77,87,18,83,69,99},{77,54,43,60,66,17,21,14,59,37,55,13,77,83,61,56,53,54},{40,87,84,14,47,85,92,20,73,21,16,67,25,14,46,89,52,88},{69,11,85,50,72,93,79,24,35,92,57,96,66,28,78,40,79,97},{86,51,44,92,72,32,35,38,78,10,23,24,32,77,16,58,62,21},{95,62,14,68,20,73,3,93,36,3,97,84,11,21,74,13,44,89}},
	B = {{91,95,19,50,54,97,43,68,30,26,38,40},{72,35,17,15,29,88,95,7,4,92,14,82},{85,49,63,91,46,38,6,27,56,98,20,61},{1,53,4,75,41,68,85,46,26,30,35,68},{71,20,20,27,62,59,24,21,41,87,47,64},{44,13,63,68,36,5,15,15,10,98,51,61},{21,34,9,74,68,46,31,75,96,7,50,74},{91,19,86,8,11,61,60,77,65,93,22,18},{2,20,89,34,60,45,23,79,47,27,56,67},{53,39,3,15,66,91,73,40,62,26,50,99},{17,21,72,13,61,34,24,67,12,72,84,69},{36,12,14,81,90,92,73,52,84,57,20,78},{15,83,70,71,1,11,26,79,52,47,90,50},{29,99,46,90,14,58,77,11,72,21,55,1},{29,20,57,85,75,41,76,47,84,60,29,87},{11,4,49,88,12,59,62,13,33,43,9,81},{32,79,37,70,61,90,18,46,11,89,66,37},{31,47,34,7,53,54,89,60,62,26,22,20}},
	C = {{33975,35523,41682,46195,42672,44554,39717,45731,40968,48070,38524,49470},{35428,39302,35601,43747,37436,51160,45002,36497,34700,48910,39706,50345},{47745,41649,43007,49741,48587,57224,48999,45994,50270,57560,39939,53931},{50114,46273,44230,56147,50147,60790,51602,50789,49456,65873,48940,66687},{40940,40632,40985,51865,48426,58823,53933,43107,49914,58589,43087,58165},{34354,39264,40972,45373,35245,43781,37976,39022,36659,48858,38544,45020},{42585,51265,50719,66157,52893,59459,52531,54714,55777,59896,51462,62501},{38429,43370,37542,49719,45692,56191,43825,42561,42858,53931,46593,55911},{40873,40800,36743,50101,48464,56739,51025,44569,49037,48682,37903,54271},{29030,30912,35408,40388,35912,40593,37239,35452,33702,47878,35329,41742},{42482,43900,40120,50620,46840,62327,53318,48550,48410,58416,44335,59401},{32136,38525,37007,41902,39871,48749,42726,42827,43104,41031,39671,45792},{32413,41915,41706,47528,38564,52585,47585,45852,44897,45297,41110,46972},{35022,31595,29198,35037,38463,50685,48139,39104,41580,44703,30796,46373},{31247,29933,37520,40422,41495,47224,39496,41011,35607,51823,37679,49416},{32051,30156,34330,42206,39273,40799,39070,37660,41883,45480,32947,47268},{29355,35033,31903,48002,32951,44188,45782,32138,36446,45015,34747,50091},{41125,43528,44066,54715,39783,54064,49513,44737,47315,56891,41897,49667},{34558,43724,37844,49144,39536,51974,45717,40600,39998,46648,40457,50520},{39316,33656,39373,53481,46918,53890,46131,41226,45215,55079,34837,59630},{46803,46953,44501,64058,60490,65075,54016,54462,57500,63355,49549,69897},{34434,40192,34188,48181,37137,52114,41586,37512,35770,45208,35619,46552},{39659,34768,39655,41666,44702,54008,49640,45243,38362,54159,35261,49415}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 77")
	end.

test_78() ->
	A = {{81,12,26,65,72,60,27,51,89,73,66,50},{87,52,4,55,96,82,49,40,67,70,69,19},{60,27,65,82,77,53,9,69,57,60,73,25},{91,18,87,58,5,12,36,16,4,67,45,6},{9,8,90,10,57,83,29,38,61,46,96,79},{56,71,52,35,88,81,84,47,49,83,15,57},{50,36,73,89,69,13,80,81,30,65,34,63},{71,13,9,72,18,2,60,44,21,5,79,17},{52,54,60,6,78,73,92,95,17,53,67,29},{27,63,53,39,63,73,30,20,77,24,8,63},{80,84,63,1,24,79,65,8,71,64,60,38},{89,33,16,36,8,42,7,99,69,76,71,13},{43,4,93,50,98,49,87,11,38,16,18,55},{59,40,80,83,95,83,57,73,42,82,12,49},{71,93,52,72,45,71,22,74,9,76,72,59},{66,37,86,97,52,11,51,75,52,52,23,26},{88,88,85,49,67,62,44,58,52,6,35,9},{67,22,55,53,73,74,15,67,66,3,69,2},{87,89,98,18,95,86,29,63,62,77,52,75},{81,61,28,87,7,36,34,92,86,75,21,84},{55,24,14,74,15,52,83,93,67,47,92,42},{66,18,94,83,95,38,7,79,97,93,90,21},{95,5,43,26,2,40,31,59,49,18,57,63},{81,7,60,93,4,99,86,18,23,61,17,35},{79,32,87,3,12,6,11,10,39,70,63,43},{17,19,29,70,58,67,3,39,54,59,32,2},{69,94,46,90,89,97,77,98,14,53,78,60},{93,12,85,7,78,27,87,54,36,22,5,94},{66,58,19,82,67,95,22,45,99,26,85,78}},
	B = {{67},{92},{68},{63},{25},{50},{18},{44},{19},{85},{77},{31}},
	C = {{34452},{36617},{36442},{28822},{30768},{36763},{35278},{22101},{35232},{26383},{36094},{32778},{24846},{39276},{43716},{33838},{35450},{29219},{45836},{37289},{33722},{42905},{25394},{31416},{28455},{24406},{47479},{26651},{38071}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 78")
	end.

test_79() ->
	A = {{73,11,43,24,15,29,79,82,45,24,89,4,91,47,22,51,38,39,67},{87,24,17,75,73,25,39,76,94,17,37,92,42,42,46,29,82,89,52},{46,45,90,66,53,37,95,33,7,22,13,20,44,72,2,86,33,43,71},{49,85,90,71,65,50,81,53,53,55,42,65,3,18,88,95,41,89,37},{74,99,7,39,33,67,20,21,74,84,40,48,30,29,10,67,22,8,75},{67,68,59,54,32,95,67,9,92,75,65,67,61,11,88,76,72,34,34},{49,7,7,57,50,48,49,89,7,25,48,35,25,45,14,82,67,96,38},{90,49,17,45,30,79,79,70,6,54,48,80,10,18,82,75,31,36,94},{38,26,24,80,93,38,87,23,37,97,49,5,38,47,83,48,66,25,81},{4,98,44,46,54,96,72,29,3,71,47,2,81,55,64,59,67,45,59},{61,84,28,24,80,2,94,64,61,30,9,57,42,54,22,86,58,49,96},{34,38,13,72,13,26,4,26,91,94,56,75,5,82,63,80,94,39,84},{11,64,24,24,68,71,31,93,92,43,18,9,33,51,3,79,42,90,24},{36,80,25,36,84,95,75,76,29,68,79,36,43,32,78,78,82,35,41},{98,93,88,29,75,64,31,69,87,53,13,39,75,44,40,21,89,32,10},{9,37,11,51,38,6,96,90,25,95,52,40,22,89,94,74,31,68,17},{11,53,94,26,98,34,23,40,80,33,2,63,13,95,41,44,72,11,57},{29,90,27,78,28,78,20,83,84,26,58,61,82,54,25,62,82,29,30},{26,5,5,68,42,1,94,30,46,24,90,65,49,84,91,74,1,74,14},{84,44,63,35,97,91,15,52,14,49,61,16,38,26,26,54,37,98,46},{76,22,80,91,92,99,13,70,58,21,52,15,89,43,23,18,32,64,3},{41,5,13,49,57,48,13,54,99,32,68,63,2,70,38,44,53,51,60},{71,85,44,95,53,67,69,65,60,82,19,47,34,46,45,76,21,38,25},{88,91,16,72,37,95,37,62,90,46,24,75,76,92,7,28,85,97,75}},
	B = {{43,47,77,9,2,92,46,93,71,99,9,29,49,20,4,64,91,69,81,66,43,16,76,46,93,58,67,88},{22,70,68,45,13,30,11,27,75,97,68,52,44,16,91,25,79,9,20,70,35,85,19,3,77,76,22,51},{12,23,77,60,82,33,81,80,53,15,5,1,66,78,45,98,57,69,57,32,42,84,5,45,41,20,18,43},{4,4,72,25,26,96,93,12,69,94,6,63,30,96,15,9,23,31,62,87,86,14,86,28,84,2,31,61},{86,71,38,23,78,31,77,82,41,99,95,6,66,51,80,26,80,44,49,47,36,97,36,24,47,6,41,62},{39,37,94,55,41,17,2,38,3,89,21,21,81,16,88,29,55,31,3,48,50,80,58,5,84,34,70,92},{62,81,56,32,93,72,76,38,66,24,52,54,17,96,75,58,89,30,26,48,68,94,82,28,76,73,79,8},{98,5,85,34,41,49,11,66,53,18,50,55,45,90,54,80,56,37,21,26,15,97,71,16,59,4,78,78},{96,55,86,54,41,37,37,46,75,53,11,4,71,48,11,25,84,27,40,71,64,12,17,25,31,91,2,50},{99,71,25,7,60,21,60,54,9,27,64,53,83,57,23,88,91,12,55,88,58,5,73,62,54,23,54,32},{92,83,38,64,41,9,41,92,91,23,50,38,76,2,68,33,92,2,88,58,85,25,63,13,63,77,52,20},{37,93,93,79,19,44,61,10,61,89,94,17,73,14,1,94,75,79,59,93,21,58,39,14,46,22,3,3},{15,44,93,85,1,89,39,36,43,57,89,15,51,88,76,93,92,20,63,32,31,3,56,38,32,70,72,98},{68,6,27,42,6,70,34,28,48,32,73,89,14,94,71,84,69,26,74,70,6,42,2,61,95,41,32,6},{82,70,38,39,80,52,70,97,97,34,59,75,75,23,19,7,66,65,14,29,43,42,8,76,23,95,3,81},{8,9,72,2,66,42,96,73,87,60,1,40,64,23,39,44,36,55,61,35,51,98,66,1,45,84,56,44},{80,27,20,30,19,95,95,90,99,80,40,35,53,9,42,63,77,6,40,59,16,37,92,60,38,34,8,68},{36,92,17,71,58,31,33,91,82,96,63,18,69,8,10,74,38,10,19,18,23,50,52,10,83,11,55,50},{99,77,13,93,97,18,77,34,62,58,42,85,62,47,95,38,31,82,39,33,92,62,67,57,11,82,79,4}},
	C = {{52230,42229,50856,41007,39499,45279,45950,52850,55993,45238,38533,35586,47306,45157,45807,50935,60773,31196,43362,41694,42226,44002,49583,28390,49476,46623,46679,43762},{61809,54098,59984,47276,43083,55694,57517,60513,69352,69644,49476,37879,58977,45463,40977,55949,69346,39933,47953,56631,44648,50875,55407,32754,59082,45116,41835,53116},{41848,39120,50025,37509,44452,45753,53690,47300,53613,51857,37124,36612,44544,48919,47618,50401,54873,35506,41813,44120,41288,54397,46317,27541,52655,40110,43050,39005},{59291,59648,65143,46773,58636,51905,65564,67762,74195,69357,49166,43190,66271,48495,49362,57621,72692,44311,47753,58521,52565,67386,55694,33118,65000,52906,45649,54801},{48476,44992,51010,35745,35274,37080,42876,43092,49567,56046,36979,34432,50616,33935,42160,42035,58428,31524,39722,50676,42911,42461,44586,24792,48849,45709,38051,40649},{61347,60036,68611,48877,51282,54192,62921,65059,71106,69319,48125,40748,68727,45059,50223,56693,78689,41449,50137,62331,54825,55690,57693,35800,61981,60342,44889,58906},{47180,38976,45361,34460,38093,43004,46526,51650,54294,53299,38159,34017,46416,37284,38602,46993,51877,29063,37812,41124,35733,48357,50764,23248,51748,33434,42210,42482},{57829,53971,57267,42379,49574,46647,55106,56640,62268,61127,44629,44660,57973,40658,47081,50820,64538,43551,42689,52207,48638,57646,56248,31364,57097,50217,48330,47657},{62945,51618,48380,38780,52438,49242,61853,57716,60463,57157,46927,44616,55625,49350,49715,47369,66587,35684,45000,53105,50765,49860,54546,37512,53698,48259,44524,47186},{53945,50297,53820,44374,47498,46887,53231,55234,58639,59556,49703,43012,56276,46484,58649,51168,66784,31535,40842,50336,45965,56325,51599,32307,57225,49753,46576,51524},{58426,52660,55497,43341,48633,50285,57934,55104,65520,62634,49177,41538,53298,48084,51464,54802,67194,40053,44855,51960,44586,60475,52329,30966,55030,51235,45779,44353},{62336,48922,50506,42305,43123,47633,59010,54470,65450,59491,43516,44960,58681,40448,40174,51211,64230,36468,48169,58814,47136,44006,51107,36008,52909,49957,35858,42325},{50813,40461,51112,36878,39757,38190,41037,50309,52016,54381,39712,30904,50338,40209,43788,46529,56256,26692,34531,43137,35824,52121,43475,21579,51531,38140,39874,46052},{66615,57110,62266,45362,53016,51144,59506,66601,68511,66521,53835,45008,65069,46505,58942,55126,76352,37605,46567,57394,50525,64620,59750,33507,63065,54150,50173,57955},{58127,49729,65778,44334,41024,55029,53203,62384,63231,66763,48280,34592,60079,48566,49443,59770,76054,37502,46954,56950,41728,54493,50206,34652,60412,47546,41676,60981},{59173,47922,48329,36281,47314,46490,52942,55084,60573,48037,49214,45703,51076,48943,42587,52496,63556,31635,41682,49730,41102,51847,48575,32261,55998,44331,41971,41545},{53601,41293,49677,39674,42753,41869,52211,49140,54100,52805,43085,33815,50431,44297,44819,49363,59543,36632,40590,48769,36060,52849,36292,31511,46638,39399,30218,39867},{54940,45890,65391,47172,37304,52519,51070,53389,64549,64999,46838,39201,57715,46837,50847,53797,68871,33249,46181,56980,44689,52471,53235,28565,59011,48984,42060,55241},{50087,48100,48219,39031,42221,45390,51343,50790,60957,48521,45284,38836,47771,43328,37580,45783,59571,31989,43840,46629,41822,44159,43493,27757,52379,46221,37688,37514},{51736,48837,52682,40932,44646,41672,48665,61308,55685,62867,43077,32361,57776,37899,47084,50942,61924,34509,42632,46161,42193,53586,50053,27133,57553,38815,46287,52540},{48951,42235,61799,42985,38719,49605,47828,57069,54678,62264,41986,30054,55388,48725,45995,51822,64191,33448,45169,49224,42269,48280,48805,28037,59175,36832,43899,58857},{56630,43445,47174,39172,38439,39537,46512,49681,55410,52728,38753,34061,51106,36342,37122,43530,56569,32342,40981,48025,40040,42475,42994,27307,48186,40221,34128,39224},{54474,49499,64456,39926,46294,52171,56070,55391,61902,65192,45164,42204,57839,51598,47436,53890,69194,38421,46510,58988,48820,56609,54459,30888,63917,47491,45969,53512},{65611,59426,69993,56723,43718,61718,57544,61571,72160,81564,56792,46515,65924,53162,56829,66546,79660,40696,52923,66737,50532,58211,62525,36317,73019,53847,52426,61037}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 79")
	end.

test_80() ->
	A = {{39,98,91,22,44,93,66,46,65,99,69,71,39,92,48,27,60,99,69,56,24,82,31},{28,70,43,85,27,15,83,11,81,6,76,5,17,20,82,46,46,71,55,20,74,5,52},{56,93,45,10,47,1,94,58,28,8,96,63,87,63,43,19,30,45,62,87,99,65,8},{85,34,41,66,1,35,60,53,47,47,97,24,2,97,28,67,80,6,5,45,74,84,19},{85,9,45,41,66,29,80,24,29,74,65,91,22,44,36,35,29,40,85,12,22,46,51},{62,78,51,35,44,37,81,18,72,6,1,42,66,19,95,91,76,59,76,3,13,34,27},{28,16,63,59,3,97,97,65,4,12,44,92,70,14,30,99,80,68,57,86,75,34,40},{89,35,22,88,92,50,45,78,4,40,61,23,51,53,7,64,65,69,19,50,8,71,35}},
	B = {{10,16,11,49,1,83,71,76,62,34,34,99,43,78,56,98,95,78},{53,44,4,70,81,15,45,79,24,18,50,89,76,73,64,83,47,40},{79,93,55,73,32,11,84,76,55,75,17,10,98,94,76,45,5,23},{51,58,38,50,95,34,53,85,38,98,29,55,99,8,96,7,7,6},{97,52,63,56,34,87,20,74,10,79,16,6,80,92,86,72,35,8},{74,42,60,40,37,13,12,15,65,89,3,47,93,35,82,88,87,8},{98,58,14,39,90,7,30,41,28,79,46,64,62,63,61,27,16,36},{62,82,13,67,51,92,32,4,84,38,43,48,79,50,30,91,1,21},{18,27,31,43,9,49,86,30,69,92,46,74,9,56,98,3,22,20},{46,62,57,61,23,54,71,60,62,99,4,12,22,71,67,58,57,52},{78,81,2,11,56,70,92,95,26,40,21,92,63,82,46,72,78,54},{39,99,75,74,42,83,35,53,29,21,55,43,88,61,4,17,9,36},{3,42,10,55,66,53,56,12,58,65,21,78,87,27,87,41,19,45},{69,11,60,40,91,57,64,92,71,32,85,32,17,23,70,41,3,37},{8,6,38,71,2,65,84,63,29,50,22,23,4,84,45,62,12,58},{9,17,17,62,25,45,96,96,25,56,90,34,51,52,50,43,11,33},{11,20,21,33,24,20,14,46,9,10,52,32,11,42,69,55,75,88},{64,47,94,56,33,60,66,39,23,75,5,36,14,34,60,80,80,49},{21,87,19,29,10,47,71,37,18,82,5,48,92,98,18,5,94,83},{90,28,71,58,33,15,30,40,25,67,8,47,31,19,48,78,45,29},{30,89,77,18,99,62,52,44,90,42,39,84,37,72,92,38,65,69},{22,11,91,96,32,75,85,80,2,51,4,17,18,85,96,64,48,69},{83,54,62,24,21,31,20,63,93,25,34,61,98,51,20,43,37,78}},
	C = {{73914,70513,64935,75929,60523,66909,80376,80772,58811,83609,41999,65906,75532,85941,88814,78571,62706,62403},{49276,50676,38219,46520,47477,44983,60060,60374,42563,60120,33894,56584,54409,61023,64858,47730,42493,46212},{60341,63143,48031,60777,61271,61359,67687,67573,48970,63042,39005,67650,65918,74477,73448,65366,50418,56418},{51210,48832,43753,53631,52553,54538,65279,70076,48799,57282,41444,57630,51996,63095,71863,59409,45850,51328},{52748,56850,45107,53014,41701,56625,60089,63399,43383,62184,32298,50774,61935,68612,59831,52215,46689,50075},{42861,46844,38740,57974,41138,49728,62739,60753,40500,62076,38365,53561,58573,66889,66864,53322,43138,50108},{60557,65472,53060,61764,56675,54006,62470,62948,51567,70260,40470,61488,74559,66176,71799,63186,50809,53589},{57587,50644,46417,58585,49611,58874,58737,66624,44308,63928,35134,53740,63713,61483,71692,66578,48097,47135}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 80")
	end.

test_81() ->
	A = {{33,33,53,71,33,2,91,3,90},{98,79,95,18,46,37,77,93,64},{22,90,46,4,80,37,51,92,21}},
	B = {{38,30,65,36,49,6,89,28,61,99,1,76,6,64,41},{22,47,5,58,72,92,31,6,77,11,72,22,4,58,26},{87,47,49,4,75,12,38,79,53,65,99,34,84,90,33},{4,29,7,26,31,95,62,16,15,83,23,52,81,77,93},{92,14,30,30,31,14,31,76,48,2,15,82,96,26,31},{57,93,73,89,70,11,10,22,54,64,82,52,58,98,97},{59,80,84,19,32,58,89,53,99,81,57,62,56,51,54},{79,78,94,21,83,21,98,88,49,59,82,28,65,67,43},{52,69,64,92,79,88,79,3,84,48,76,47,98,48,84}},
	C = {{20311,21463,20226,16400,21603,24360,26922,14354,26836,25030,22221,21494,27928,24479,24383},{35358,33555,34933,22935,37428,23808,38716,27778,39128,35496,36208,29434,33533,38842,29429},{27672,24434,23539,16826,27129,17609,24808,22610,27929,19585,27429,20633,25400,26555,19675}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 81")
	end.

test_82() ->
	A = {{55,27,57,42,28,9,42},{13,16,12,17,48,70,16},{68,81,2,75,75,73,27},{62,86,8,23,48,35,26},{78,44,85,88,86,1,81},{43,48,26,39,59,45,7},{56,74,1,23,47,46,1},{62,17,2,94,95,32,8},{48,7,20,78,57,65,79},{42,21,1,24,68,31,49},{93,29,50,62,36,12,39},{64,94,39,40,10,17,38}},
	B = {{28,72,64,73,43,85,78,33},{11,90,41,99,27,46,49,71},{27,92,34,61,30,49,76,85},{85,31,89,85,23,71,1,85},{96,64,23,20,18,43,17,32},{92,14,87,2,94,18,47,36},{49,78,54,90,24,25,49,53}},
	C = {{12520,18130,13998,18093,8128,14108,12944,15593},{14141,9307,11467,7250,9570,7360,7617,8934},{24463,22623,23950,23556,15756,20143,15529,20999},{13955,19243,15366,18853,10535,14595,13416,14961},{24760,31960,23957,31727,12702,24808,20266,27484},{15896,15969,14725,14692,10282,13428,11182,14231},{13157,15227,13836,14552,10159,12720,11103,12355},{22423,16244,18500,17005,10257,17685,9426,16029},{23914,19064,22213,20427,13679,16516,13580,18762},{15255,14358,12626,13078,8269,10996,9419,10891},{16014,21342,18337,22234,10420,18830,15624,18299},{11665,21738,16597,23411,10070,16201,15433,18447}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 82")
	end.

test_83() ->
	A = {{71,94,97,36,10,38,82,48,95,46,20,52,68,20,59}},
	B = {{65,85,35,72,6,28,73,78,67,15,40,30,98,79,42,85,28,66},{51,81,81,79,55,38,6,47,34,50,38,5,7,51,30,66,2,79},{31,32,59,6,81,40,14,33,41,93,82,69,74,60,26,21,18,97},{10,87,80,31,56,92,96,54,40,34,81,97,97,87,27,53,43,94},{5,69,34,8,57,14,60,59,96,21,16,94,19,22,54,8,96,87},{41,91,38,28,50,12,84,76,14,14,67,20,63,75,67,71,18,30},{3,44,43,21,55,69,31,12,84,67,25,11,21,15,46,21,12,29},{90,88,30,16,34,46,10,38,53,31,7,37,68,54,82,9,87,17},{80,24,20,77,29,93,37,83,39,64,39,11,37,49,4,68,70,57},{23,67,97,69,88,36,66,37,56,37,1,39,86,84,95,99,33,33},{55,96,83,59,55,30,23,20,53,91,74,88,84,58,62,3,46,68},{63,22,25,33,78,68,59,37,48,91,18,9,91,13,89,91,59,69},{13,53,51,25,20,5,16,25,13,79,37,24,71,83,16,15,48,89},{55,95,97,12,11,75,14,13,91,69,6,88,37,27,48,29,58,71},{43,86,51,53,76,25,73,83,27,6,7,22,2,62,44,50,98,37}},
	C = {{36505,50869,43191,36322,42104,39156,33129,40155,38428,45174,31590,26920,45425,46444,35352,41472,34636,51645}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 83")
	end.

test_84() ->
	A = {{30,23,44,73,90,29,40,77,20,12,12,45,82},{9,34,94,25,19,80,41,40,27,14,65,24,92},{45,13,1,86,57,93,88,90,9,93,44,48,28}},
	B = {{97,84,7,83,47,53},{37,40,65,21,34,8},{95,54,94,94,73,73},{65,99,6,21,76,83},{52,11,43,8,72,4},{57,67,54,21,64,68},{5,57,81,40,91,11},{47,84,43,20,84,10},{62,71,51,79,3,92},{99,91,90,66,80,17},{64,21,60,83,6,21},{71,25,30,99,97,47},{64,17,11,84,63,95}},
	C = {{34477,30007,23338,27822,40019,26788},{35131,27653,29706,33650,33635,30008},{41247,44004,33458,31242,48941,26369}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 84")
	end.

test_85() ->
	A = {{94,2,49,87,67,98,69,58,94,87,25,34,96,68,34,73,48,72,23,23},{51,19,40,16,47,98,46,43,44,7,32,5,47,93,93,43,1,18,84,34},{56,53,84,61,84,73,92,95,34,10,95,80,19,79,19,18,66,51,1,34}},
	B = {{20},{90},{82},{87},{69},{76},{69},{71},{64},{45},{69},{38},{51},{30},{1},{35},{32},{73},{71},{35}},
	C = {{66300},{45134},{65827}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 85")
	end.

test_86() ->
	A = {{59,3},{22,61},{82,45},{63,87},{2,32}},
	B = {{33,33,37,43,89,35,74,43,10,50,49,50,15,52,70,86,37,13,96,44},{62,84,67,70,59,10,64,84,17,33,50,73,98,85,85,10,28,33,7,60}},
	C = {{2133,2199,2384,2747,5428,2095,4558,2789,641,3049,3041,3169,1179,3323,4385,5104,2267,866,5685,2776},{4508,5850,4901,5216,5557,1380,5532,6070,1257,3113,4128,5553,6308,6329,6725,2502,2522,2299,2539,4628},{5496,6486,6049,6676,9953,3320,8948,7306,1585,5585,6268,7385,5640,8089,9565,7502,4294,2551,8187,6308},{7473,9387,8160,8799,10740,3075,10230,10017,2109,6021,7437,9501,9471,10671,11805,6288,4767,3690,6657,7992},{2050,2754,2218,2326,2066,390,2196,2774,564,1156,1698,2436,3166,2824,2860,492,970,1082,416,2008}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 86")
	end.

test_87() ->
	A = {{27,50,58,66},{86,60,71,83},{81,4,13,96},{69,37,24,75},{5,24,11,44},{79,60,91,5},{31,18,22,39},{77,59,51,78},{18,72,28,31},{43,89,28,12},{23,50,89,77},{93,83,89,43},{51,68,78,55},{48,33,37,37},{71,56,24,29},{2,3,88,75},{38,1,95,19},{7,30,39,66},{85,27,11,5},{51,64,54,31},{61,45,38,34},{49,36,3,81},{66,97,26,98},{24,17,6,72},{13,78,44,35},{88,82,68,57},{38,90,75,25},{68,34,20,25},{28,87,65,34}},
	B = {{91,71,23,98,62,51,33,54,53,49,50,88,52,89,39,41,63,55,7,56,20},{35,76,79,99,43,66,77,16,34,44,27,27,16,78,54,79,73,60,38,34,68},{71,43,37,47,34,23,87,1,71,95,89,56,41,1,39,84,49,25,85,94,15},{44,11,94,62,99,90,6,36,96,29,11,93,79,54,51,74,55,83,41,59,16}},
	C = {{11229,8937,12921,14414,12330,11951,10183,4692,13585,10947,8588,13112,9796,9925,9381,14813,11823,11413,9725,12558,5866},{18619,14632,17147,22851,18543,17449,14133,8663,19607,16006,13152,20883,14900,16887,13596,20372,17842,16994,12320,18427,8193},{12658,7670,11684,14897,15140,13334,4688,7907,14568,8164,6371,16892,12393,12718,8778,11833,11312,12988,5760,11558,3623},{12578,9568,12448,16203,14110,13263,7664,7042,13819,9464,7410,15390,11089,13101,9450,13318,12349,12840,7004,11803,5456},{4012,3136,6554,6111,6072,6052,3234,2249,6086,3622,2361,5796,4571,4704,4164,6281,5026,5642,3686,4726,2601},{15970,14137,10394,18269,11067,10532,15174,5497,13168,15301,13724,14133,9194,12072,10125,15993,14091,10635,10773,15313,7105},{6729,4944,6615,8272,7305,6785,4557,3388,7561,5532,4423,8073,5883,6291,5028,7427,6490,6572,4370,6717,2798},{16125,13002,15651,20620,16767,16014,11989,7961,17196,13476,10840,18479,13201,15718,12156,17874,15947,15524,10314,15714,7565},{7510,8295,10052,12130,8233,9104,8760,3268,8366,7609,5677,7979,5685,8920,7263,11072,9467,8583,6513,7917,6172},{9544,11153,10184,15085,8633,9791,10780,4206,8445,9031,7177,8871,5756,11445,8187,12034,11238,9401,6555,8774,7524},{13550,10107,15010,16161,14225,13450,12814,4903,16630,14015,11268,15519,11728,10194,10995,18067,13695,12881,12783,15897,6427},{19579,17211,16031,24180,16618,16138,17461,7987,18198,17911,15285,19408,13210,17162,13773,21028,18644,15889,13133,18933,9527},{14979,12748,14601,18806,14183,13833,14035,5900,15833,14496,11933,15807,11283,12891,11508,18085,15024,13400,11826,15745,7694},{9778,7914,8558,12004,9316,8807,7566,4489,9845,8392,6991,10628,7464,8881,6984,10421,9281,8616,6252,9471,4351},{11401,10648,9671,15428,10497,10479,8917,5798,10155,9064,7517,11801,7863,12277,8208,11497,11332,10272,5854,9847,6052},{9835,4979,10589,9279,10670,9074,8403,2944,13656,10765,8838,12160,9685,4550,7497,13261,8782,8715,10683,12911,2764},{11074,7068,6254,9466,7510,5899,9710,2847,10617,11482,10591,10458,7388,4581,6210,11023,8167,6102,9158,12213,2557},{7360,5180,10178,9581,9584,9174,6330,3273,10496,7282,5357,9748,7657,6566,6780,10817,8172,8638,7210,8972,3821},{9681,8615,4965,11830,7300,6820,5871,5213,6684,6543,6013,9290,5698,9952,5457,6912,8140,6985,2761,7007,3781},{12079,11148,11141,15794,10819,10857,11495,4948,11689,11344,9425,12123,8339,11259,9132,13977,12236,10568,8650,11937,6678},{11320,9759,9560,14327,10375,10015,8988,5276,10725,9565,8021,11873,8136,10813,8025,11764,10860,9827,6761,10524,5394},{9496,7235,11696,13529,12707,12234,5136,6141,11810,6619,4580,12985,9646,11546,8103,11099,10317,11653,5287,9029,4769},{15559,14254,19355,23369,18849,19186,12497,8670,18050,12814,9311,18997,13792,18758,13824,19805,17903,18234,10376,15220,9874},{6373,4046,8885,8781,9551,8964,3055,4166,9188,4582,2985,9603,7454,7356,5760,8159,7007,8466,4276,6734,2878},{8577,9128,11379,13234,9121,9973,10473,3254,9825,9264,7057,8969,6493,9175,8220,12981,10594,9400,8230,9581,6784},{18214,16031,16376,23472,16937,16594,15476,8184,17752,16033,13293,19067,13179,17374,13419,20016,17997,16191,11849,17471,9268},{13033,13038,13109,17709,11251,11853,14859,4467,12799,13672,11280,12299,8466,11827,10542,16818,14014,11440,11086,13713,8405},{9898,8547,7340,12520,8833,8422,6752,5136,8580,7453,6373,10347,6875,10074,6543,9004,9121,8355,4493,8319,4372},{11704,11769,13118,16520,11053,11725,13482,4193,12321,12361,9908,11615,8199,11179,10059,15997,13170,11207,10421,12642,7995}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 87")
	end.

test_88() ->
	A = {{64,52,43,69,26,14},{71,70,1,38,17,21},{74,70,20,68,33,99},{35,34,33,62,8,84},{43,89,78,58,36,86},{64,98,1,73,59,38},{53,55,9,69,98,38},{60,54,6,80,10,87},{30,33,44,83,2,29},{30,10,87,25,41,15},{3,49,18,63,81,69},{55,54,90,71,75,66},{79,61,93,65,20,53},{74,19,16,47,58,98},{63,52,83,85,16,81},{74,63,72,25,69,65}},
	B = {{55,81,80,76,16,29,10,32,50,86,53,36,90,56,73,74,65,99,46,5},{44,26,48,94,32,59,74,43,74,71,10,99,25,98,87,96,72,39,46,32},{33,10,22,84,14,73,30,99,10,63,44,89,85,64,48,65,49,68,23,90},{56,36,56,75,48,23,58,88,52,21,72,68,40,53,75,73,26,40,49,95},{93,70,37,23,39,96,50,32,29,76,70,4,70,59,61,76,1,19,31,18},{87,73,28,22,99,98,21,77,64,27,19,46,54,44,29,53,7,8,27,27}},
	C = {{14727,12292,13780,19445,9002,13518,11374,16523,12716,15708,12858,16719,16051,17239,18427,20278,11929,14654,10890,13255},{12554,11672,12407,15763,7956,10826,9415,10886,12553,13796,8832,13193,12069,14841,15817,17218,10856,11838,9465,7168},{23300,19999,17521,21921,18056,22170,14193,22021,19909,19203,14589,20684,20486,22191,22436,26215,13324,15555,14112,14137},{16034,12973,11278,15310,13714,15856,9616,18029,13428,11681,10267,15675,14381,14858,14671,17585,8548,10339,9487,12535},{22933,17463,16416,25256,17330,25410,16326,25803,19080,21207,14931,25345,22209,25104,23666,28324,15171,16724,14146,18563},{20746,17274,17181,21828,13741,18778,15904,17599,18401,19568,14524,19043,17397,22274,23422,26036,13488,14571,13907,12569},{21916,17931,15632,18219,13630,20158,14570,17086,15672,18953,16305,14986,18582,20045,21341,24286,10004,12930,12620,12180},{18853,16255,14810,18284,15615,16690,11743,18895,17074,14161,12097,17522,15858,17694,18499,21225,10781,12540,11961,12697},{11911,8973,10486,15987,9085,10972,9585,16336,10612,10373,10523,15249,12291,13523,14361,15996,8845,10839,8822,13870},{11479,8425,8131,13676,6302,13792,7465,14670,6559,12817,10473,12367,15025,12632,12047,14571,7729,11175,6742,11818},{19979,14672,11445,14452,14882,20279,13349,17434,13997,14213,12958,14343,14941,17276,17013,20508,6807,8043,10267,12509},{25064,19383,17571,25318,16735,26652,16500,26722,17737,23207,19031,23500,25604,25224,24847,29485,14256,18464,14670,19980},{20209,16524,17158,26051,13665,21288,13977,24799,16746,21300,15976,24098,23402,23311,23170,26821,16165,19928,13815,18683},{21986,19554,14706,15769,16236,20688,10310,18307,15664,16762,14122,13905,19727,17255,17728,21373,8928,12921,11393,10573},{21787,17378,16982,25173,16557,22383,14399,26698,17896,19527,16290,24373,22919,22949,22807,26763,14699,18261,14047,19999},{22690,18827,16301,22486,14534,24688,13827,21618,16543,22897,15585,20275,23695,23182,22308,26718,14048,17510,13077,14238}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 88")
	end.

test_89() ->
	A = {{4,89,91,85,39,94,71,83,33,72,53,85,38,23,90,27,70},{61,50,92,29,78,2,24,15,31,13,46,76,6,58,32,77,39},{39,64,67,59,30,93,37,66,16,23,87,96,53,45,2,21,86},{14,24,88,79,68,95,73,59,48,85,72,79,99,29,88,79,29},{89,54,10,3,64,90,58,72,52,56,26,65,15,47,34,49,79},{38,13,12,24,72,95,78,51,48,42,7,62,82,81,45,76,78},{82,42,28,14,31,91,90,15,43,22,92,52,29,62,23,32,2},{43,70,35,69,69,37,45,49,5,7,23,34,25,54,63,66,99},{65,65,67,8,32,72,78,36,59,25,85,51,27,19,63,52,11},{3,16,87,33,21,38,98,73,41,88,24,64,10,50,35,18,11},{76,80,85,9,17,66,6,99,76,28,30,27,75,47,86,92,71},{22,85,61,90,46,54,92,34,44,80,8,92,95,20,14,85,49},{63,57,76,99,99,13,89,8,88,89,94,38,99,67,22,95,88},{25,97,10,51,9,44,14,15,1,65,25,31,20,71,79,38,22},{7,91,48,85,95,64,88,64,10,27,10,85,9,88,36,81,15},{38,3,79,89,99,36,66,45,63,62,83,40,67,88,82,50,87},{1,31,31,3,45,13,29,50,92,76,68,18,73,3,83,48,17},{91,2,61,85,88,22,75,31,10,85,14,62,90,30,20,33,1},{63,96,56,66,10,35,52,22,94,3,29,84,97,44,83,36,45},{62,28,55,69,37,96,37,3,85,46,94,65,56,75,64,7,63},{31,21,66,43,91,31,55,92,95,34,33,20,33,55,94,83,24},{24,77,1,21,93,51,7,11,61,90,96,89,18,2,75,11,16},{82,82,32,17,19,79,19,27,34,9,63,64,41,22,81,7,13},{54,29,63,67,65,10,33,94,95,67,18,78,49,47,24,95,63},{16,63,80,93,57,47,95,50,73,96,65,28,99,69,21,88,35},{89,54,6,79,22,39,66,83,79,72,22,71,77,13,87,93,56},{5,17,27,65,80,15,40,31,39,13,90,42,92,3,41,80,54},{45,78,89,88,54,79,41,32,4,94,68,43,47,46,84,88,87}},
	B = {{77,52,82,56,90,71,40,81,98,89,70,14,61,39},{25,46,51,46,38,77,33,61,91,38,28,36,21,27},{58,44,44,60,82,87,51,88,37,17,31,15,27,47},{1,15,66,98,96,43,23,67,2,43,24,33,99,3},{68,35,23,23,72,87,5,15,93,66,18,92,57,7},{20,84,20,31,5,41,29,3,9,79,24,67,99,82},{92,76,31,12,32,65,94,87,51,33,76,93,8,34},{57,95,51,91,61,78,38,32,99,77,40,7,71,26},{96,11,91,37,27,87,38,79,65,79,40,57,44,47},{6,39,19,23,76,77,92,7,36,47,95,77,44,73},{29,62,20,5,41,53,65,40,38,31,43,79,60,87},{11,63,51,25,6,4,56,55,23,20,25,57,72,91},{78,59,66,40,78,56,45,71,12,8,97,6,79,96},{53,50,36,41,8,33,73,49,69,11,9,83,51,62},{81,96,11,63,6,79,51,99,51,89,51,43,73,45},{78,69,17,54,68,31,48,38,13,7,93,12,18,77},{75,33,49,20,30,19,26,91,68,17,92,66,56,77}},
	C = {{48592,60140,41673,46582,46647,60773,49620,59193,48789,46954,49305,51908,60046,55390},{40008,37516,30777,30735,36724,41376,33189,43245,39309,28135,32932,35096,35533,37924},{39636,49120,38607,35854,39772,45093,40050,47947,41637,34877,40718,43791,52942,52328},{56263,63833,42956,47269,54184,64359,54210,59594,45122,47584,57121,53929,64239,63341},{47337,49595,36823,33734,37044,48691,39743,45064,49905,43259,44304,45545,47626,47529},{52707,52267,36871,35403,38437,47669,42687,48326,43461,38503,48499,47839,51519,53091},{39622,44236,30974,26331,31147,42578,39382,40517,37329,34874,35072,42168,40531,43463},{43576,43569,32453,36261,37638,43137,33167,47494,42975,33447,39295,38525,43720,38869},{45305,48603,33278,31928,35724,50111,40814,47399,41356,38958,39827,40501,41784,45269},{35433,40983,27909,29946,32578,43495,40870,39022,34109,30473,34328,38429,35620,37361},{57901,56718,43648,46450,46199,58847,42927,58246,52435,45205,51554,36989,52634,54673},{47914,50783,42853,41432,50504,53564,47109,54525,40981,36029,52973,45527,51183,53336},{65610,56231,52287,46594,64813,69039,57182,68957,56548,44893,65142,61163,60749,63866},{26504,35178,22965,28176,25907,34815,30978,33609,30407,27102,29113,30980,34447,33039},{43239,51015,34622,40913,40886,49803,41938,46370,45194,36845,36994,47711,47521,42188},{59985,56028,44173,45074,53209,62669,51164,62886,52475,45582,53897,57511,61154,57077},{40544,38132,27551,27118,32527,45604,34340,38166,33613,32664,38940,33200,36043,39369},{41208,41595,36045,35442,49495,48485,39530,43999,37138,34812,43217,37935,45884,40054},{51594,48579,45737,41262,40820,52670,41996,61742,44402,39690,45188,39484,51108,49975},{47419,48835,41667,36649,40042,52364,44802,54709,43020,43142,43642,51349,57467,55175},{55773,50753,37215,42383,43771,58178,41213,51513,48941,44632,43444,42972,47807,43133},{32269,39654,28038,25282,31085,45443,34602,35504,38302,38222,33668,44268,43279,41676},{34691,41879,30353,29184,28065,41015,31262,40884,36352,36281,30875,31891,41652,38971},{52912,48339,44761,44344,50635,54994,43530,53545,49159,40820,49751,42300,50952,49776},{56292,55433,45584,45664,57285,64080,54512,58868,47825,41122,57204,53213,55647,57987},{56340,56832,46545,47330,50661,58101,47867,60046,49467,48406,58037,43169,57065,54132},{41468,39228,30091,29686,39045,40729,31980,41664,31353,27735,40468,35350,41982,41689},{51203,58561,40261,46442,53737,60355,50439,58996,48268,44043,56003,51774,59132,58888}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 89")
	end.

test_90() ->
	A = {{25,51,25,32,43,21,82,28,25,40,70,83,60,27,77,24},{1,49,42,41,60,78,2,88,17,92,82,5,34,70,71,24},{54,82,94,63,87,98,93,91,78,50,36,49,15,74,55,73},{87,4,38,74,46,42,35,83,32,1,74,42,20,43,75,54},{26,83,59,43,61,5,73,46,25,8,40,19,78,65,83,47},{54,93,83,39,18,50,91,45,47,74,57,92,47,37,94,90},{87,48,83,4,41,30,18,69,63,36,30,73,82,92,54,39},{39,63,75,70,14,52,53,44,32,29,79,27,35,44,58,25},{2,86,40,48,23,51,71,49,8,3,94,70,96,23,95,67},{1,47,3,81,32,32,62,71,13,95,53,21,36,22,63,93},{96,87,99,11,83,97,43,39,55,23,4,60,77,53,50,10},{14,61,61,60,17,87,30,46,80,9,49,15,41,48,34,80},{71,85,36,99,67,30,72,71,51,32,21,2,75,50,88,28},{94,6,68,13,37,12,65,96,74,71,75,74,25,25,9,39},{99,24,87,4,10,44,51,90,81,15,51,82,68,80,49,57},{25,63,37,9,88,87,73,56,34,82,94,26,19,17,98,72},{31,36,44,45,58,53,91,5,64,7,86,75,28,94,10,73},{40,49,88,8,38,41,33,9,74,45,13,15,23,97,73,43}},
	B = {{68,86,71,38,2,5,32,64,38,17,94,28,62,29,35,22,71,69,13,61,17,44,47,77,8,14,70},{31,76,19,10,84,39,63,15,30,4,30,20,51,33,50,25,49,7,99,29,53,35,65,69,91,3,84},{44,26,95,1,17,68,33,36,5,75,97,79,20,58,99,87,10,27,87,29,19,59,67,24,25,83,36},{5,8,92,6,90,27,85,97,68,9,93,71,73,80,94,64,20,23,32,63,14,63,43,94,57,46,52},{67,7,30,80,44,12,70,21,48,60,4,69,67,78,30,87,77,25,85,10,92,6,92,46,42,95,75},{97,69,14,54,20,51,60,5,31,30,35,62,86,75,77,84,28,80,46,90,16,5,55,48,15,13,60},{9,30,72,15,54,6,69,72,67,13,44,27,1,32,41,24,19,51,59,50,37,24,17,18,34,7,28},{41,53,6,45,31,77,79,26,61,78,54,99,81,8,19,90,25,68,79,10,42,58,52,69,56,42,84},{75,8,5,8,37,37,26,84,83,88,67,52,10,65,62,57,67,36,82,51,20,48,65,21,85,54,65},{75,26,58,64,10,86,10,53,48,81,30,48,5,87,78,54,34,15,32,89,24,94,96,80,52,66,22},{49,2,58,39,14,37,95,29,51,40,71,9,9,64,44,37,72,37,84,59,17,66,78,75,74,95,38},{79,44,43,94,35,28,80,48,60,7,23,14,94,52,58,71,40,47,94,47,22,47,2,30,23,30,76},{70,27,32,19,25,82,33,54,15,86,12,27,49,45,74,89,14,81,72,43,57,38,20,55,84,46,49},{85,3,57,84,56,27,86,31,41,80,34,15,51,70,27,98,77,2,84,72,39,75,81,58,88,68,51},{70,22,5,45,35,29,45,42,40,71,14,7,89,60,73,49,73,28,54,32,38,52,26,70,84,3,11},{25,44,57,22,90,93,15,21,16,68,94,17,49,27,20,26,8,38,13,93,2,36,8,85,53,42,9}},
	C = {{38692,22109,31005,29434,28324,28306,42165,32058,32714,32492,30034,23206,35252,37954,39543,40492,31448,28307,48314,34531,24476,32985,32174,39207,40217,29123,34584},{45340,22414,29521,33759,27845,38049,44209,26784,32219,44022,33135,33960,38821,44615,42254,50580,34366,27370,49758,39017,25990,38931,46960,47889,45204,38432,37316},{58818,38009,47961,41502,46514,46670,61224,45105,48539,54106,56034,49257,54671,58002,58661,66808,45522,42103,70434,54994,35194,48014,57666,59633,56499,47069,57014},{40030,25008,34517,29745,29236,29650,45067,33628,34491,36268,42764,31306,42645,38256,38539,44567,34375,32435,44289,37446,21755,35329,35827,46328,38468,32856,38154},{38173,23341,33437,26219,35004,32061,43558,32258,31023,39511,34689,27917,37743,38370,40587,45438,32856,27684,52041,33884,28908,34382,36849,43321,47055,32270,37173},{53523,36743,46138,37023,42076,46108,52785,43434,42467,47989,50930,35761,48807,51695,57068,55301,40179,38834,63528,53268,29266,48124,46004,57107,54360,38942,47161},{52701,29980,36345,35582,29760,38484,44571,35706,34399,47977,41417,33174,44097,43183,45169,55122,38514,34876,57365,41181,28104,41534,43103,46374,46728,38390,45723},{37972,24069,35687,24562,29971,31590,43586,32472,31772,34553,40247,29805,35328,40073,43753,43405,30857,28248,48093,37698,21574,36215,38352,43249,41248,32188,36306},{41899,27648,34155,29135,36748,37927,49516,32849,33608,38059,37231,26988,43917,41215,46227,47406,32281,34661,55990,40226,27124,36306,34173,48242,49488,31956,39192},{34260,22559,32573,27048,34503,37306,39337,31773,33036,37142,35909,29182,35247,38727,39094,40180,26635,26791,40561,40653,21824,36608,35261,48078,42516,30886,31319},{55023,35625,36790,35054,31260,36072,46772,35364,34713,43370,40390,38027,48034,47111,50847,57057,39232,38255,60009,41608,32111,35827,46431,45498,43783,35797,50598},{39152,24517,30819,22779,33487,35631,39754,30123,30770,38259,41134,31290,36055,39240,41632,44650,28444,29405,46533,40356,20108,32486,36689,41807,42226,31721,36570},{44272,29469,37925,29097,39287,35152,49253,41874,39564,43068,42621,37289,46052,45678,48808,51791,38333,34208,54444,40784,31886,39978,44352,53050,51709,34243,45773},{43675,27045,37491,31536,24310,34821,41758,36856,37534,40974,44490,34346,33733,38645,39747,45604,33704,34182,49753,39145,22330,39938,40779,42427,37416,38276,41383},{53003,32448,39235,34880,30673,39983,47705,39079,38076,48503,48485,35001,44807,42698,46244,55404,38410,40019,58470,44902,25578,43007,41518,47284,46447,38300,46893},{49409,29373,34432,36437,33712,39655,47889,32102,38031,45164,39255,34095,42235,48424,46537,49397,39590,34270,55058,45585,29566,38469,47517,51523,47838,38684,40496},{43375,22600,39673,32792,35716,30261,48908,34858,36743,36785,41671,27464,35995,44274,40566,47047,35771,29911,53514,44563,24010,35335,39446,41853,43020,38424,39831},{42127,20936,30471,26505,27292,29879,33899,28768,27624,40816,34249,26219,31327,39391,39185,43067,32695,22448,45372,36286,21877,33756,38818,36491,40088,31461,32188}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 90")
	end.

test_91() ->
	A = {{30},{22},{51},{40},{28},{20},{89},{42},{3},{67},{49},{49},{26},{99},{16},{12},{82},{73},{94}},
	B = {{86,42,59,10,45,14,94,21,64,54,63,70,24,65,15,58,85,94,20}},
	C = {{2580,1260,1770,300,1350,420,2820,630,1920,1620,1890,2100,720,1950,450,1740,2550,2820,600},{1892,924,1298,220,990,308,2068,462,1408,1188,1386,1540,528,1430,330,1276,1870,2068,440},{4386,2142,3009,510,2295,714,4794,1071,3264,2754,3213,3570,1224,3315,765,2958,4335,4794,1020},{3440,1680,2360,400,1800,560,3760,840,2560,2160,2520,2800,960,2600,600,2320,3400,3760,800},{2408,1176,1652,280,1260,392,2632,588,1792,1512,1764,1960,672,1820,420,1624,2380,2632,560},{1720,840,1180,200,900,280,1880,420,1280,1080,1260,1400,480,1300,300,1160,1700,1880,400},{7654,3738,5251,890,4005,1246,8366,1869,5696,4806,5607,6230,2136,5785,1335,5162,7565,8366,1780},{3612,1764,2478,420,1890,588,3948,882,2688,2268,2646,2940,1008,2730,630,2436,3570,3948,840},{258,126,177,30,135,42,282,63,192,162,189,210,72,195,45,174,255,282,60},{5762,2814,3953,670,3015,938,6298,1407,4288,3618,4221,4690,1608,4355,1005,3886,5695,6298,1340},{4214,2058,2891,490,2205,686,4606,1029,3136,2646,3087,3430,1176,3185,735,2842,4165,4606,980},{4214,2058,2891,490,2205,686,4606,1029,3136,2646,3087,3430,1176,3185,735,2842,4165,4606,980},{2236,1092,1534,260,1170,364,2444,546,1664,1404,1638,1820,624,1690,390,1508,2210,2444,520},{8514,4158,5841,990,4455,1386,9306,2079,6336,5346,6237,6930,2376,6435,1485,5742,8415,9306,1980},{1376,672,944,160,720,224,1504,336,1024,864,1008,1120,384,1040,240,928,1360,1504,320},{1032,504,708,120,540,168,1128,252,768,648,756,840,288,780,180,696,1020,1128,240},{7052,3444,4838,820,3690,1148,7708,1722,5248,4428,5166,5740,1968,5330,1230,4756,6970,7708,1640},{6278,3066,4307,730,3285,1022,6862,1533,4672,3942,4599,5110,1752,4745,1095,4234,6205,6862,1460},{8084,3948,5546,940,4230,1316,8836,1974,6016,5076,5922,6580,2256,6110,1410,5452,7990,8836,1880}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 91")
	end.

test_92() ->
	A = {{95,69,20,68,59,50,88,21,88,87,80,20,74,49,34,91,16,94,87,97},{78,62,45,6,27,23,83,61,3,59,81,65,7,89,63,98,65,81,3,81},{61,20,79,68,63,93,5,18,66,37,24,28,97,90,40,83,34,31,60,41},{99,36,41,88,37,63,25,95,46,28,88,39,73,82,37,28,39,24,63,68},{25,31,80,95,3,40,5,87,2,67,88,6,52,84,92,66,33,3,86,36},{51,37,70,29,27,52,24,1,90,1,16,61,19,66,40,82,84,50,32,61},{84,75,61,35,87,38,7,92,34,86,22,63,68,18,94,47,81,2,21,47},{7,23,68,79,58,71,35,15,80,23,83,12,79,16,70,81,98,30,22,88},{23,53,91,94,67,4,4,15,54,79,84,77,38,85,78,44,53,45,66,21},{62,52,30,9,74,57,73,90,20,23,35,17,48,9,23,31,16,6,67,8},{47,85,54,29,95,68,91,50,44,44,91,81,62,82,9,81,40,46,98,2},{3,17,87,93,13,37,81,5,11,57,82,56,18,55,64,15,13,40,4,41},{95,1,11,82,43,51,3,91,10,29,53,22,74,74,41,64,98,42,37,58},{60,66,58,11,84,26,83,96,17,27,69,62,22,65,26,41,86,55,17,4},{34,98,6,67,60,72,86,44,40,20,33,99,67,38,63,29,57,35,90,21},{69,75,20,71,83,81,1,55,51,93,27,2,36,90,22,58,27,32,8,29},{22,39,26,54,58,8,75,37,38,65,82,7,30,43,77,77,65,55,93,25},{5,59,64,68,29,47,29,7,42,65,14,34,61,39,61,76,44,95,38,99},{17,28,94,86,3,73,58,41,93,64,54,82,26,84,71,86,52,34,20,81},{64,86,72,8,71,43,4,36,80,73,82,59,21,14,42,26,64,68,80,75}},
	B = {{93,74,5,37,2,41,14,78,27},{7,11,94,87,96,36,91,57,55},{18,55,88,18,42,29,22,42,98},{44,30,39,17,44,60,54,88,2},{40,59,96,33,9,60,62,39,50},{13,44,96,80,99,71,53,53,30},{16,92,29,77,20,35,66,81,6},{90,76,66,76,5,43,42,93,97},{66,84,27,5,9,36,74,78,75},{33,67,16,50,59,87,82,87,10},{24,99,89,99,7,8,96,33,70},{71,58,7,65,23,20,12,15,35},{22,34,6,99,10,80,67,90,23},{27,88,36,59,69,10,31,17,52},{79,79,3,29,22,50,65,35,33},{51,87,68,40,51,68,7,92,73},{27,11,33,74,57,85,11,97,24},{15,54,19,13,33,31,58,64,61},{35,21,42,75,1,58,79,11,42},{32,14,65,28,30,26,14,67,76}},
	C = {{49266,74471,57574,65853,41458,60029,69468,81651,58400},{43862,67839,49508,58206,39723,44645,47390,66032,53958},{40549,58260,49286,52183,38449,51972,48519,62229,48954},{48124,62863,51523,61397,34120,48948,53989,66798,52629},{40737,57172,47997,54786,34665,46732,50878,57300,48160},{36088,49713,40884,41072,34236,39951,35952,53538,45717},{49685,57846,48353,56822,36099,55177,50280,68209,49605},{38061,56024,52866,52594,36617,52315,50864,67928,50097},{42709,61813,48685,53062,37159,48304,56205,58262,50471},{31981,44139,39729,46495,21769,36905,41019,46352,35611},{43829,71465,61552,72116,41510,54216,64045,66916,56359},{27459,49094,36596,39819,29576,32279,41409,44685,34071},{44276,54155,42396,53655,31746,49484,41564,65341,44358},{39561,59800,49001,56901,32723,42453,46653,59117,48465},{41539,55430,47245,63512,37613,50712,57186,60749,42541},{37325,53725,47795,47487,40029,47012,48125,60035,42334},{37701,58238,44452,52767,30418,47573,54456,59148,43868},{33755,49534,44521,45426,39146,47568,47381,61629,46434},{46349,68688,52650,55168,44490,50793,52222,69801,56218},{42183,56850,53690,54995,35522,48182,56452,60979,55660}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 92")
	end.

test_93() ->
	A = {{37,36,72,88,47,4,54,62,8,66,64,85,23,11,89,30,86,34},{86,97,35,34,44,54,62,44,33,82,1,54,74,69,54,26,95,84},{4,80,65,44,51,64,48,95,41,73,2,83,71,38,28,86,87,37}},
	B = {{48,95,93,1,87,26,47,35,85,43,50,50,81,18},{41,56,69,23,34,64,5,71,19,83,46,26,42,92},{33,63,52,81,14,44,10,80,51,49,15,32,3,29},{11,99,43,84,15,36,8,40,24,32,38,62,81,27},{86,17,82,85,72,5,89,72,89,95,19,74,53,66},{82,47,8,83,49,88,5,63,34,14,76,18,21,67},{29,22,87,18,63,16,98,65,91,39,97,90,41,32},{4,79,79,80,20,74,34,8,98,55,19,41,38,77},{88,36,71,80,90,62,1,49,57,41,56,31,22,35},{28,94,83,1,38,74,89,61,91,62,65,80,56,69},{85,59,10,12,61,19,12,99,60,89,8,14,68,71},{99,8,56,93,44,47,79,26,24,57,51,93,6,7},{40,61,13,88,5,2,4,90,25,17,65,92,67,84},{36,45,43,98,15,4,3,54,21,56,43,62,58,99},{70,22,28,33,16,22,53,95,91,91,33,14,53,73},{48,28,18,31,19,54,47,20,69,47,43,11,31,79},{4,9,32,83,87,88,29,78,37,91,91,50,94,12},{59,80,34,58,9,7,89,66,16,82,63,21,1,2}},
	C = {{40523,44990,46093,49806,35927,37706,40083,54408,51965,57051,41291,45215,43676,41275},{46259,53796,54871,57241,42687,43063,43334,62121,53025,60721,56923,52923,48931,51912},{44373,47675,50108,62941,37517,48705,39242,55232,52582,56235,51230,50440,42018,53887}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 93")
	end.

test_94() ->
	A = {{96,7,48,50,2,71,15,74,54,87,92,77,91,77,68,38,30,97,34,67,30,50,97,62,7,12},{18,12,32,46,48,33,90,76,8,3,22,97,53,62,3,99,67,47,38,97,1,11,17,73,41,25},{10,68,35,63,99,62,87,55,73,12,42,95,74,96,79,26,68,26,57,54,83,82,1,87,30,55},{39,76,18,85,99,81,1,27,76,2,74,18,29,77,86,85,4,36,71,72,34,51,25,9,17,26}},
	B = {{23,45,26,30,63,47,52,3,12,10,84,96,52,37,44,86,90,75},{96,75,56,9,28,82,27,30,84,16,48,21,28,46,25,70,86,53},{10,79,6,13,27,49,72,23,86,94,87,18,88,79,69,9,89,87},{96,74,5,51,44,3,86,62,96,87,46,21,8,53,52,56,95,46},{27,77,96,7,39,5,45,8,65,84,38,15,72,13,88,79,53,51},{82,47,36,78,7,46,63,52,36,97,34,69,23,48,86,81,92,71},{43,31,36,94,8,63,30,58,17,88,53,58,6,18,34,24,59,43},{96,33,25,53,13,54,81,88,38,23,7,54,13,76,61,84,48,21},{60,90,75,50,48,25,99,38,52,11,78,36,29,4,54,10,6,88},{5,85,58,87,33,38,5,86,51,40,62,68,90,72,82,19,98,21},{73,76,43,96,42,51,55,28,80,17,35,17,67,16,8,18,80,40},{53,53,2,40,54,72,82,63,85,76,49,34,48,67,15,75,30,74},{91,90,75,86,15,10,4,2,37,83,88,37,11,79,85,71,81,58},{20,90,67,89,15,21,68,37,86,51,92,35,93,19,34,12,39,88},{87,88,72,8,63,67,93,65,88,29,86,15,74,13,79,93,43,65},{28,35,11,99,93,98,54,13,76,98,18,8,40,9,22,3,67,82},{84,27,34,18,41,19,91,39,63,62,18,4,76,47,25,55,91,69},{61,63,23,23,63,71,12,85,28,9,55,23,5,82,65,15,90,13},{36,24,51,57,28,33,48,95,99,99,20,43,18,23,98,38,94,9},{82,83,84,38,8,13,17,11,97,17,58,82,36,20,57,74,52,35},{72,7,26,56,74,58,60,2,70,29,63,46,76,68,23,34,30,67},{90,2,88,38,17,14,79,30,96,21,66,4,87,38,40,41,99,27},{66,97,81,52,21,13,27,49,61,1,13,68,3,40,3,84,82,89},{31,42,84,77,35,4,96,5,87,25,52,70,78,55,55,95,68,52},{19,29,8,21,51,52,46,17,72,98,1,29,9,77,76,85,75,92},{9,69,99,25,59,86,21,56,74,36,40,22,77,32,68,40,72,96}},
	C = {{83438,91149,69170,79267,52391,56299,76635,61494,90506,60600,77505,62790,65144,66272,72064,75448,101252,79931},{61076,61445,48597,61966,40222,47355,61580,44093,74797,66595,50001,44007,45937,48137,55115,59497,74188,63627},{89692,85490,79760,75485,54527,59942,91208,58394,106326,80540,80416,53132,76002,62109,79293,81259,96783,87898},{73966,76676,63925,59732,47925,50067,69845,46753,88186,62009,62250,41483,55525,40685,65468,62459,81534,70190}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 94")
	end.

test_95() ->
	A = {{5,44,41,19,40,84,4,50,65,26,10,74,99,95,32,41,4,52},{71,2,3,47,58,70,17,23,78,77,78,44,52,77,22,3,75,18},{47,19,47,66,17,52,83,19,50,49,76,92,7,20,27,81,44,69},{83,99,69,21,80,55,78,99,67,84,29,36,42,50,31,86,98,92},{93,5,21,91,82,61,83,44,53,23,73,9,73,86,80,75,46,78},{38,36,69,26,75,87,69,85,49,50,62,58,74,73,19,59,25,93},{17,77,37,17,43,1,31,74,72,22,58,62,26,45,71,71,75,77},{29,72,48,31,11,65,43,32,57,32,49,46,90,27,33,66,96,35},{48,30,54,52,4,98,88,61,33,66,28,44,70,16,11,15,65,99},{46,80,27,87,1,59,72,63,44,23,63,76,28,53,81,16,4,74},{45,50,20,16,12,4,90,4,31,97,37,45,71,11,81,59,18,91},{68,89,2,55,64,60,4,12,67,40,98,67,66,69,79,51,96,90},{32,11,14,60,63,97,82,57,60,15,34,33,6,15,16,76,32,78},{56,32,27,29,86,57,90,59,31,77,60,82,59,8,26,27,37,56},{86,51,94,12,92,82,63,36,61,29,79,69,56,32,84,98,79,10},{5,55,68,41,32,4,57,82,67,56,27,61,31,96,63,31,1,27},{53,98,57,59,10,15,82,59,19,84,35,66,67,71,18,6,80,56},{5,61,92,30,80,7,35,66,81,27,41,38,97,93,36,24,87,12},{68,56,43,94,79,43,59,82,44,35,98,76,95,45,43,38,81,77},{5,14,66,82,6,49,73,29,45,25,41,38,93,45,21,22,77,94},{35,92,46,37,31,67,15,47,4,83,61,54,93,8,73,39,20,51},{61,86,22,96,82,94,89,91,80,19,97,61,60,11,66,53,11,95},{41,74,22,73,19,39,19,91,35,20,57,61,13,98,34,91,8,78},{31,5,12,77,61,43,98,68,10,73,6,48,9,92,21,54,76,44},{99,14,80,40,51,37,23,48,42,29,24,21,5,26,87,71,32,46},{75,6,46,34,20,29,44,39,90,57,96,19,23,26,75,83,32,77},{97,11,86,76,72,54,79,90,23,69,64,14,57,33,26,83,93,7}},
	B = {{62,10,50,94,10,79,44,31,55,60,15,55,56,52,68,58,93,53,71,94,26},{44,29,62,55,45,38,37,93,95,4,22,20,12,88,77,80,12,61,67,84,28},{34,47,79,27,81,32,80,63,85,70,6,2,9,19,18,55,69,81,94,32,28},{34,7,52,2,63,22,35,19,77,74,91,94,40,97,47,31,33,29,29,61,28},{12,14,60,61,43,99,64,47,26,94,65,38,22,33,1,69,85,83,57,34,84},{54,71,77,42,85,2,5,20,92,69,91,17,14,60,37,33,87,87,85,11,84},{29,7,74,41,50,89,82,56,12,91,94,58,11,75,89,37,60,11,70,1,58},{95,13,46,15,20,42,74,16,60,52,16,9,89,51,34,15,88,82,54,78,64},{92,24,66,58,66,98,47,23,1,22,34,3,88,19,76,91,70,7,39,30,8},{10,79,58,71,95,18,13,95,85,62,93,63,2,12,80,82,27,96,70,56,17},{89,47,54,70,40,78,33,2,72,26,86,37,28,34,9,93,76,85,28,14,50},{60,34,23,95,9,36,28,68,27,3,69,61,15,22,64,14,79,50,6,86,12},{53,75,20,6,14,80,98,84,90,81,27,22,26,53,11,17,22,16,22,45,34},{96,68,6,65,91,45,98,54,48,88,19,56,77,31,9,30,20,31,51,67,82},{65,54,44,25,33,91,67,90,35,43,65,61,77,11,57,11,49,65,67,93,67},{27,92,94,79,26,30,45,1,46,13,23,41,98,56,86,31,2,57,85,79,64},{29,5,46,36,13,17,30,57,95,10,44,38,94,97,85,56,94,13,39,38,31},{75,64,7,11,14,9,53,25,33,99,28,15,74,94,93,27,73,42,78,63,92}},
	C = {{47308,39921,35069,35787,37367,37536,44473,38687,44784,44272,34165,25433,36244,35595,34879,30881,41555,40276,42051,43198,40072},{46056,32682,38707,43112,39503,43028,38169,36406,47931,44136,45237,33652,37910,37592,38620,42683,51524,41787,40517,39652,36602},{44874,35652,46644,44971,37247,40101,39549,34855,45718,42999,48550,36388,38616,45010,51792,39900,51720,44465,48193,44063,39464},{61009,47294,63620,57936,51037,57260,61672,56355,69302,63206,52902,41054,58689,64361,69257,58265,70887,64112,73042,65385,58107},{59336,43922,53323,48532,46142,60036,60039,43611,57161,66157,54877,45327,55599,56709,53438,46504,62294,52625,60976,56107,58205},{58308,46721,52067,48290,47450,51052,57253,45478,58575,62353,50111,35256,46453,51962,50541,46093,62499,57665,60803,52180,55626},{50683,35092,42949,41612,33088,44825,46488,40656,46435,39013,37723,30131,49024,44601,50007,40636,50437,44481,47973,51197,42218},{44964,37260,45238,39241,35595,40620,43170,41923,55013,39796,40424,29540,40817,47296,47650,40100,47942,41219,46947,43968,37815},{46091,36466,43937,35696,38986,36747,43440,40726,54352,52821,46452,31361,36756,51046,50945,37651,55242,44420,51594,41991,42458},{53899,34908,42782,39738,39331,44309,45815,41576,49266,47650,47680,37137,39794,47754,49212,37363,51002,46301,48781,51332,43362},{38403,37551,38400,37228,31620,41552,41134,43627,41492,43237,41469,32704,33377,38862,50221,35124,39173,39266,46099,44193,36134},{60808,45572,49869,53501,42993,54232,51229,50426,63337,51841,53377,42144,53973,57058,57374,52480,62211,54604,56172,60734,51907},{41075,30624,43948,35730,34426,36964,37199,26163,39185,45182,43271,28806,38697,44527,44784,34099,49650,40510,47020,36628,43425},{44578,34669,45990,44886,37115,47703,44693,43118,49067,50927,50811,35339,34066,44454,47514,42035,56912,49936,49057,44638,42900},{56219,45637,63149,58524,47066,61478,57084,51478,63277,54162,53924,40394,50654,51113,55836,53345,68242,61803,64993,57353,52762},{47111,33540,39030,37430,40639,42855,47939,41705,41674,43634,36824,30757,37735,34010,39544,35280,41763,42343,44437,45996,37516},{48337,35352,43562,42739,41460,42546,49744,51798,59030,50038,44905,37801,38257,51896,52447,43423,51120,45639,50465,51754,39446},{49896,35323,44249,39750,42067,50656,55729,47897,53877,48419,37737,30069,43930,42761,39449,43901,51229,43676,47212,46034,41102},{63089,42968,55219,51547,45043,59616,60678,51561,67917,62641,58202,45298,53022,62579,56942,52269,70162,58861,59091,61228,54677},{44358,34451,38295,29455,36151,36867,45719,37956,49651,49618,41676,30581,38102,48269,43787,33933,47660,35336,43892,38169,39369},{43697,41115,42980,38481,36767,40059,41585,46670,56989,43886,43906,31808,32093,42176,43476,38606,45141,51674,48512,49049,39578},{66108,44315,61388,52141,48480,62829,58782,47889,63277,64186,62901,43563,52140,63732,61479,53635,71040,62894,64932,60760,59450},{53557,38504,41670,42473,37846,38377,45679,34027,48616,44435,38257,34195,47149,46666,45960,36327,45465,47310,49116,54353,45802},{40224,31185,41021,39020,39362,36989,43699,37489,44987,50165,45963,38584,40599,45578,46060,33907,47552,40874,46800,43412,43524},{40932,31180,42822,37976,32957,40820,40752,33260,41910,42132,33776,29790,41139,35712,41653,34596,47980,44486,49503,46197,38304},{50489,38566,46603,43568,37374,47545,43585,33922,44981,44638,42717,32572,47069,40205,49584,43462,51770,46560,51296,46431,41566},{49311,38387,58651,48608,45538,52089,54171,43853,64112,57702,51311,41285,48180,53555,51564,48729,63123,56689,60506,51951,48242}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 95")
	end.

test_96() ->
	A = {{82,80,43,94,88,85,9,59,84,98},{8,68,7,21,69,49,48,8,6,78},{18,5,80,9,81,49,33,70,76,80},{7,17,89,16,72,11,65,35,45,14},{92,87,90,83,43,76,34,98,10,29},{7,62,57,4,88,21,12,94,74,29},{14,12,60,6,63,78,19,18,47,52},{51,31,48,3,54,26,85,13,48,47},{14,65,9,73,35,78,70,92,94,76},{7,17,86,83,83,26,37,98,58,87}},
	B = {{36,21,33,35,10,23,76,23,58,46,36,81,38,38,55,44,41,92,81,57},{56,54,55,22,23,98,26,3,49,86,44,63,71,82,91,62,92,93,41,9},{60,72,94,81,89,28,44,34,88,75,5,34,89,23,41,16,50,44,85,81},{20,89,60,52,81,78,5,20,59,81,25,23,51,74,15,11,47,33,57,68},{71,65,32,63,89,73,58,30,49,91,93,68,20,33,47,86,82,96,10,31},{17,25,72,57,29,86,17,41,10,70,3,31,93,44,46,28,32,5,44,85},{75,84,63,87,21,21,80,55,47,56,32,85,50,41,87,69,12,23,16,21},{93,75,83,82,84,30,97,44,9,93,10,48,29,17,74,5,86,59,28,15},{32,22,3,90,82,43,12,94,79,89,8,61,13,21,10,72,88,51,75,73},{87,10,66,11,63,4,35,33,19,10,69,17,80,10,79,28,84,54,25,69}},
	C = {{36961,33358,37908,37649,42605,37959,28104,25814,32620,49896,25788,34312,38175,28381,36740,29946,48032,42115,34101,39190},{21990,17467,20512,16805,18616,19751,15042,11255,13806,22897,17450,18020,21713,15038,23717,18185,23491,21024,11466,16315},{30869,24193,28446,31915,34619,20354,23736,22447,23024,34710,17057,23888,25863,13368,26052,21158,33655,27044,22130,27650},{22951,23067,21647,26552,25282,16175,18958,15976,20844,28117,12330,20457,18643,12096,19512,17754,22235,20247,16690,18157},{34096,35908,40329,35994,35278,33511,30776,19582,29104,46618,18041,31879,36836,27165,36030,21989,38287,36402,31937,31669},{28362,24176,24261,28906,31377,22745,22114,18575,21025,36021,15529,23677,20266,14719,24557,20702,34093,28765,19085,19424},{19822,16341,21018,22272,23152,18121,14676,15577,16657,25296,12327,17000,21787,11443,18524,16229,22902,18384,16763,22445},{23997,20269,21360,24693,21072,16394,20665,16954,20581,26300,15092,23839,21073,13916,23923,21041,23054,22808,17836,19889},{33381,30782,33343,36026,35420,30477,25183,25773,24579,43069,17879,29404,31095,23226,33224,24973,39209,29824,25153,29747},{35673,33293,35139,36044,42225,25563,26636,23022,26887,41548,19933,25787,29844,18934,29724,21172,38974,31135,25140,30429}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 96")
	end.

test_97() ->
	A = {{52,3,90,76,13,52,21},{28,4,9,32,20,66,17},{66,73,93,8,11,86,64},{55,70,97,49,81,86,92},{66,57,59,28,40,58,33},{63,7,74,27,95,53,12},{96,76,5,58,52,92,96},{36,86,52,40,61,8,97},{19,25,66,55,79,23,35},{46,69,42,17,60,65,47},{43,61,81,44,16,3,23},{15,67,9,11,33,92,81},{9,6,87,82,94,11,42},{95,37,63,86,56,6,63}},
	B = {{81,7,5,89},{12,87,37,13},{29,35,2,25},{69,63,80,69},{77,16,84,50},{68,95,56,99},{81,21,93,3}},
	C = {{18340,14152,12588,18022},{12190,9822,9823,12562},{21350,20262,15549,18956},{31026,24355,27155,24451},{19370,16093,14474,17863},{21087,12148,14946,19444},{30871,22701,26390,25655},{21314,15847,21259,12515},{18030,12267,16731,13793},{19792,16988,17278,16790},{12899,12239,9805,10847},{18397,17911,18909,14191},{20370,12227,19419,14627},{25723,14296,19749,20028}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 97")
	end.

test_98() ->
	A = {{46,17,17,68,51,65,74,93,7,99,38,19,69,87,97,93,55,52,70,50,30,88},{86,71,73,25,42,18,57,98,10,26,44,8,42,16,43,81,84,5,97,4,24,75},{99,24,8,95,70,73,50,68,13,78,64,64,29,78,69,90,15,76,85,61,11,33},{65,56,71,67,41,60,90,45,75,58,34,5,63,46,25,6,40,3,30,82,23,96},{98,7,80,75,80,44,36,85,72,85,68,29,43,2,20,84,43,24,42,67,85,88},{64,88,98,69,99,57,53,75,89,93,95,95,39,21,57,55,59,51,57,16,34,83},{27,94,17,97,60,73,25,19,3,77,10,48,11,55,31,84,35,19,98,50,44,50},{78,60,74,70,15,5,50,36,91,26,25,2,77,47,26,87,75,54,21,56,53,20},{63,29,25,13,46,80,69,43,25,41,50,85,11,76,11,57,13,46,59,47,47,87},{74,15,3,84,69,31,46,9,92,82,92,93,66,14,42,21,84,79,44,43,30,18},{52,91,60,2,99,5,3,75,66,11,64,89,32,2,36,77,40,27,99,7,41,61},{9,94,87,67,23,14,65,57,21,89,13,21,27,6,73,16,24,50,20,51,78,69},{55,23,21,12,83,85,45,59,91,60,41,81,17,36,82,94,98,60,66,86,1,49},{92,85,6,20,45,84,10,23,88,72,45,3,11,59,34,68,68,64,97,47,66,24},{60,79,95,5,74,89,8,95,71,49,55,43,22,27,81,26,40,78,52,27,58,62},{38,7,9,1,76,43,4,95,61,3,66,52,45,4,50,86,71,6,11,20,66,36},{74,51,44,75,89,22,24,85,52,54,2,99,67,15,93,75,78,7,98,74,60,29},{18,46,84,6,14,28,31,28,40,72,55,31,34,70,95,89,23,93,31,46,25,62},{30,52,36,33,18,98,25,4,2,30,3,30,12,5,3,9,77,99,71,22,3,86},{34,66,85,97,53,28,91,90,23,11,22,98,69,99,10,14,17,38,7,73,92,79},{81,5,95,5,59,14,82,15,40,93,91,63,63,99,92,92,25,11,56,63,32,58},{92,54,1,92,29,78,24,43,2,98,78,42,52,89,46,94,5,22,8,60,71,44},{79,10,83,95,73,70,9,61,38,35,48,23,47,14,33,60,95,66,12,34,42,67},{52,80,65,15,72,69,60,43,9,83,57,22,15,6,2,83,16,29,91,33,64,63},{36,49,10,58,56,33,62,12,38,47,40,84,46,24,95,6,25,63,15,59,89,1},{84,68,58,32,23,79,98,29,4,35,50,37,83,23,20,73,52,14,17,30,84,49},{35,91,93,2,40,49,59,2,2,27,28,81,72,35,23,24,90,83,78,97,41,20}},
	B = {{72,27,85,57,76,36,17,18,35,17,53,98,19,73,89,5,86,86,66,30,71,13,74,22,3,43,26,57},{80,68,41,63,4,80,45,68,7,74,86,87,99,98,9,2,92,85,4,50,73,31,20,25,15,80,61,32},{75,25,58,90,2,62,73,22,21,1,13,28,35,19,93,89,95,79,14,96,30,23,14,37,46,53,38,96},{22,11,62,37,48,89,60,76,9,3,85,95,67,53,89,95,65,84,90,41,21,27,62,27,69,35,4,87},{17,48,48,67,15,16,3,27,69,4,71,72,27,8,58,11,22,3,55,95,10,25,32,68,88,31,12,38},{93,41,21,40,91,31,16,22,61,70,88,27,73,18,25,54,12,26,22,64,77,98,89,15,61,23,77,89},{59,87,63,59,46,65,80,18,13,4,79,40,24,46,70,71,1,68,83,88,95,32,30,67,89,63,30,35},{81,41,67,95,1,64,34,60,12,70,82,98,89,34,75,53,90,66,32,56,80,69,33,8,4,75,22,27},{63,33,97,66,85,39,64,42,72,20,20,84,74,37,25,12,22,95,46,25,36,49,41,37,49,22,92,66},{71,76,69,58,25,57,72,73,18,49,90,76,56,10,78,98,15,42,28,59,12,75,32,79,8,8,61,79},{89,5,68,82,11,17,12,27,2,51,10,48,20,98,70,2,10,28,77,63,84,32,39,86,76,20,2,95},{67,12,82,48,4,91,6,30,18,34,11,8,86,97,11,72,40,15,84,30,64,74,40,45,25,3,11,2},{61,49,1,7,37,63,43,41,85,99,73,45,63,25,8,10,61,55,40,91,43,27,5,78,67,7,54,36},{9,60,99,85,39,93,71,6,15,19,29,43,12,39,77,92,68,20,71,60,16,84,10,83,91,2,96,57},{20,59,6,32,34,77,19,44,1,18,47,57,25,70,45,42,94,37,50,65,1,88,78,45,92,92,40,89},{65,20,34,98,17,46,39,78,28,61,37,88,94,20,69,67,25,65,79,53,82,48,27,20,76,38,40,36},{12,81,65,43,5,20,33,68,84,11,68,57,40,43,78,39,74,32,70,68,30,22,72,45,47,13,34,90},{34,1,67,96,59,77,99,16,34,74,36,98,53,88,50,79,44,80,99,24,11,37,14,82,85,10,85,76},{28,61,26,12,31,74,58,46,32,28,2,41,71,31,20,43,72,3,9,78,35,22,30,71,5,86,80,34},{19,48,28,52,57,13,94,2,3,28,80,81,63,57,63,34,37,3,36,57,24,90,46,30,65,31,88,28},{88,3,1,49,98,65,85,84,2,90,49,62,93,87,84,45,43,42,38,42,50,17,30,37,65,4,95,97},{25,10,87,37,18,36,85,24,51,14,92,16,6,21,9,51,78,36,10,93,54,88,54,63,28,77,59,11}},
	C = {{61534,55439,66558,72808,44315,72243,65656,53759,38161,49044,77231,79490,65291,54098,72169,69521,67650,57518,65013,81830,56484,69771,52633,64941,69327,51911,64012,71453},{55302,44518,54584,59620,27839,54808,47482,46170,32934,36879,56941,63834,54168,45534,57756,45459,64042,52215,45472,68084,54008,43198,41417,46309,44067,50950,44741,54776},{62313,48225,68687,73866,46606,70957,58366,48871,33701,46038,68367,81769,66162,60485,71591,65572,62586,56631,69701,72298,56404,64567,52723,61314,66063,47275,58509,69440},{55946,46771,61228,59226,42041,55411,59919,39806,35410,34780,67722,64731,52793,46227,58659,50719,56898,54926,47798,70213,50539,54319,44727,51362,54191,44105,55573,59939},{70255,43239,68814,74876,47733,61274,63634,54344,39586,46004,71404,81483,67880,54862,75785,59536,63219,62800,60590,76492,59455,58008,52146,56724,60525,46426,58576,73188},{80424,54957,83390,86306,45168,78249,66590,60712,45504,51495,77340,87405,77708,69658,76611,68379,74945,72153,70285,88191,67623,68249,57828,70221,69602,56483,63983,82463},{50586,43229,51018,55675,35742,60071,51541,47782,28118,38889,60795,64108,61946,46967,53702,54903,53611,44398,47527,62039,45447,51788,42158,47275,49961,41422,53149,55568},{54877,41009,56838,63513,41363,57344,58028,45805,34676,39935,56473,72359,58911,50864,62402,48891,58071,61641,55573,60359,47465,43074,38843,47250,56509,36812,54820,63130},{55280,37759,59472,60919,38978,55841,51557,35712,29583,38471,54529,56561,53074,49709,52885,52586,48360,43227,51707,61618,52771,55355,40998,50948,51749,37234,53389,51566},{57327,42688,65330,61959,43890,59282,52051,46153,39537,40590,58738,72047,59521,60097,61025,51101,50725,53828,66911,62631,47605,50469,48011,60208,60243,32362,50970,68044},{57697,37536,56228,62042,27802,55845,43232,45448,34092,40342,48323,63204,61308,52337,49101,40244,58935,48368,46857,63479,51649,44508,38065,48556,45402,45699,46479,50734},{52825,39887,48457,56419,32823,58543,58008,44704,21981,37892,60742,61602,54904,48948,55043,52967,56034,52379,41953,60689,41283,47706,36548,45604,48289,43028,49947,58110},{60580,52605,68581,72990,44386,61359,56407,48073,43854,43018,66483,77035,67498,56423,64344,58133,59608,53290,64761,73497,55227,67524,55463,58174,65280,46371,62553,67635},{59517,46316,58866,64489,48615,57441,55696,47897,36779,46077,58902,75051,63934,54815,59443,47635,56126,53324,52076,61362,49939,52118,46867,52238,53196,40219,65982,67711},{67955,44649,63434,73210,42831,64105,56528,47486,37469,48519,63491,73808,65631,58538,62338,53967,67506,59000,51960,71900,53816,60048,48930,54643,57629,49526,61938,71785},{48452,29648,42871,51685,28797,39423,32016,38982,31041,36871,44971,53708,49783,40340,46248,32361,42264,38003,44219,50692,44061,41111,36762,36312,45093,30046,36905,47370},{62425,52651,61950,67113,42192,70886,56638,57624,39723,45562,69137,80587,75237,59901,67728,58422,72381,56742,61508,75954,54113,59798,53179,55508,59826,51468,58318,66499},{52270,38885,54678,65217,33631,58820,56571,39433,26990,40343,50739,61907,52022,49570,55649,55618,54723,50412,51071,62049,42146,55266,36708,53372,57968,39591,56047,61024},{36030,29388,40925,39613,27976,40045,41092,27765,29204,28625,44896,41837,39539,34921,33922,39655,41006,34507,33986,46216,33267,37473,33742,37115,34563,29759,42018,42966},{62515,43381,67205,70869,42292,73139,66494,45541,30728,44498,69422,69334,65430,61185,67098,64635,66364,58732,61008,73479,56930,58912,41844,56303,64480,42790,58322,61457},{63527,51158,68062,73572,40695,66430,60842,44420,33936,40090,59635,69430,55975,56006,71902,62237,61499,53920,63552,79862,54965,62579,46097,66723,68507,45565,59382,69760},{63052,40972,58844,66195,45250,62672,53993,48679,27277,48761,67292,73342,61892,56668,66723,57413,54914,53156,59654,63631,54392,59552,47005,52592,59809,36344,55145,66353},{56008,37232,60111,65038,39863,54476,52159,46033,39594,38762,63310,70468,56391,48877,66079,53982,59989,56247,57622,66440,47699,49413,48552,48910,57834,38062,48393,69225},{60984,41211,51507,61316,35006,53252,51999,44609,29378,42318,57988,62423,58698,45831,55924,49017,49702,47436,43564,66296,53413,46721,38740,49335,47209,43407,51708,56428},{49260,36684,45133,51360,40004,55970,46740,39003,23997,38122,52170,59088,53245,56007,50897,45023,45703,43672,52874,52886,39107,46140,38959,47302,55905,31438,47180,56913},{63255,41770,50302,58487,40618,55575,51041,43839,32243,44898,62081,60798,57153,51555,58266,47855,52389,53507,51356,65809,58233,45924,41922,47516,54573,38162,49850,59843},{54425,46429,52054,59499,35449,59345,57153,38797,34128,42612,55791,60461,59868,56638,54020,50861,58397,46679,51083,67413,47278,48324,38497,54341,55275,38102,57942,58567}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 98")
	end.

test_99() ->
	A = {{71,47,41,36,31,65,27,24,86,3,76,3,27,7,17,84,43,78,99,69,58,82,24,23,51,34,20,6,7},{42,8,8,26,5,53,75,41,86,22,61,28,76,30,37,62,51,18,73,72,2,6,80,93,83,80,66,41,74},{24,28,10,21,90,54,85,56,13,51,83,92,62,85,15,92,27,68,64,89,13,87,66,85,42,23,82,1,52},{69,28,73,9,6,71,9,14,51,53,90,27,2,29,42,53,90,97,48,32,11,71,78,18,51,8,40,76,65},{63,78,51,36,66,44,8,27,82,85,98,86,20,47,1,38,3,25,60,38,40,7,8,5,87,27,3,59,11},{3,28,68,91,33,7,25,61,7,50,64,13,74,45,88,9,15,36,96,18,24,69,77,28,34,78,88,11,23},{98,56,31,76,40,85,43,62,29,93,70,59,84,42,9,13,99,87,70,98,76,80,11,57,37,63,79,4,66},{31,15,92,95,99,39,17,43,98,42,79,23,11,36,1,18,65,95,36,95,35,52,89,62,48,47,6,13,76},{40,19,19,32,25,32,71,29,8,97,93,91,44,44,68,49,74,57,70,7,22,87,49,75,86,23,24,26,37},{30,58,62,26,50,90,15,26,35,20,57,17,19,40,49,26,75,86,12,92,96,85,91,1,31,36,30,52,8},{73,24,44,32,37,11,22,75,15,76,86,40,36,41,48,17,94,46,72,12,74,67,46,55,94,21,38,25,40},{89,94,73,30,71,58,81,60,30,62,80,48,48,44,31,94,96,11,17,9,88,79,83,87,53,23,85,73,45},{77,87,33,9,34,93,1,62,20,62,75,3,33,36,8,89,98,30,16,41,62,81,29,63,41,5,3,47,53},{80,12,74,93,60,56,43,59,96,4,53,3,78,4,60,89,89,63,15,79,84,50,13,47,24,56,69,96,12},{62,77,88,18,42,67,84,58,61,69,4,2,44,83,56,98,91,31,46,71,59,33,55,70,26,63,1,22,99},{89,8,32,17,76,42,79,92,74,66,90,11,79,38,84,40,56,91,71,96,64,90,99,40,68,39,66,77,3},{48,74,9,25,48,13,24,33,84,44,52,43,86,18,16,4,50,84,30,54,55,42,9,81,55,63,27,42,83},{13,98,76,49,23,45,1,81,10,37,85,85,33,84,64,47,67,2,44,4,84,94,61,40,68,88,78,69,88},{83,53,33,33,65,67,86,62,93,54,87,28,40,90,48,97,56,61,86,91,93,87,94,35,59,31,50,13,43},{82,32,88,70,96,2,86,10,87,16,45,23,57,29,42,54,27,63,62,27,79,56,2,89,92,51,5,58,92},{95,65,78,70,46,64,57,54,61,3,31,34,4,96,72,19,11,97,25,82,35,66,15,42,42,39,94,90,73},{78,46,15,90,65,81,92,69,7,98,36,72,46,17,2,82,57,34,62,26,22,89,3,18,38,19,76,49,15},{45,28,53,32,49,96,78,17,76,89,64,47,49,89,40,8,8,42,40,9,90,61,45,79,84,45,57,46,75},{28,89,15,40,73,6,68,12,17,92,16,76,48,53,81,64,52,87,53,91,23,74,20,35,61,66,32,89,83},{3,66,45,39,49,11,21,86,7,13,36,97,58,7,28,91,87,4,98,22,38,61,83,98,44,83,23,80,85},{77,6,78,69,35,67,71,6,35,24,28,40,89,27,95,51,65,49,1,39,51,36,90,12,10,74,64,65,23},{68,37,29,84,60,8,3,9,61,10,15,63,86,63,46,82,77,68,70,43,52,43,95,5,89,34,18,42,72},{6,42,55,30,33,43,22,75,17,54,4,10,37,67,31,3,45,63,48,81,57,3,39,3,23,93,51,66,50},{83,72,81,54,15,45,20,5,26,1,53,56,12,14,78,16,7,36,85,6,11,31,15,78,64,85,43,25,19}},
	B = {{94,23,65,15,40,6,62,92,26,95,22,6,37,63,27,76,35},{15,50,79,71,32,37,87,77,78,21,75,33,56,36,58,81,52},{92,42,67,96,98,39,55,36,5,66,75,77,11,49,10,81,83},{28,81,70,39,40,51,33,39,67,23,83,25,25,82,81,38,6},{29,34,94,65,86,8,52,50,83,91,61,51,26,37,46,89,1},{55,5,50,32,37,62,66,20,59,81,36,70,96,20,5,98,35},{40,35,2,8,59,6,88,13,78,40,80,12,26,45,60,28,55},{20,65,82,43,65,47,9,43,43,22,36,84,40,10,84,29,43},{59,85,98,56,76,24,3,44,25,85,92,86,6,48,92,99,86},{49,30,85,44,98,54,47,76,89,26,67,59,4,77,23,62,40},{66,86,58,11,17,19,28,22,5,99,82,92,3,68,47,58,82},{19,29,17,94,41,76,23,37,6,2,25,85,89,11,35,62,90},{1,81,88,37,78,74,20,51,83,62,23,66,81,20,73,83,32},{57,63,36,87,14,75,68,16,41,5,81,18,92,96,51,48,6},{81,54,89,73,38,13,20,41,70,68,14,72,71,81,96,96,57},{92,50,36,7,78,74,74,82,86,22,41,70,37,75,61,86,86},{57,59,67,31,25,49,91,78,75,5,87,3,55,45,21,5,7},{59,81,71,90,30,7,41,26,41,73,59,2,89,37,62,87,77},{85,78,33,94,54,63,73,67,98,78,26,58,6,46,77,93,70},{88,96,48,34,7,72,29,84,90,80,94,7,88,91,22,85,36},{31,20,62,35,38,28,82,80,28,18,76,19,11,37,56,19,31},{67,5,91,20,99,54,15,61,38,86,4,90,76,10,22,27,4},{18,37,42,33,52,60,38,58,3,89,4,77,85,36,66,55,22},{90,63,81,44,85,45,63,89,42,18,1,53,10,67,85,7,5},{96,6,59,32,83,81,61,81,80,42,57,18,76,55,3,1,69},{58,56,95,12,67,44,87,63,6,59,17,2,31,54,39,83,31},{81,17,63,63,6,96,30,49,43,55,78,26,59,28,34,59,87},{96,24,68,95,18,33,30,69,55,21,49,13,83,92,55,50,42},{84,3,97,52,64,55,4,62,4,71,69,20,19,30,22,88,21}},
	C = {{79004,64097,79601,54301,65629,54541,62159,71126,65047,76259,65775,58120,55341,60465,60212,81039,61690},{88499,69973,88699,59958,73823,71146,65335,79863,69830,76973,69405,61314,65544,71654,71217,85348,65286},{89727,74489,93326,72451,82433,79717,72392,82535,81203,83027,78277,75385,79877,73945,74592,94355,69436},{87812,57952,85222,65607,65299,59012,59712,72459,58989,76531,69071,60513,66920,66193,55864,82504,63924},{70509,57393,76748,63141,64158,54564,57703,67102,60504,62850,69810,58641,52117,63650,54360,78329,63185},{70897,64556,85795,64103,68496,62666,55706,65306,62367,70706,60102,62804,57694,61906,67790,78078,55939},{98166,82465,114068,77929,86203,82198,83107,97573,88152,90921,93335,69678,81261,80690,76038,103047,71208},{86043,76316,100419,70614,80672,63252,64078,78907,65296,86521,84043,65995,62944,73835,68969,90640,59852},{83682,62800,86519,65144,78058,66211,67268,76821,72007,69377,66022,68394,66822,69189,66068,76260,63746},{75454,60558,85986,63007,61835,58195,64382,71961,62747,75064,71711,57450,73612,63894,58150,80951,55241},{81983,61457,90280,64048,73925,62532,65963,79573,67048,69011,69204,61859,59846,66204,63317,71292,58936},{101534,71788,111855,77910,93638,79780,89644,101085,84956,84852,90098,80352,79305,83781,81250,96377,75083},{78656,55789,87546,54163,68963,59650,66527,79241,67070,64966,67227,59834,61386,63306,55565,74250,51147},{96401,79199,107014,70503,79179,66971,72416,88545,79977,83624,86490,65974,72112,81529,79783,96040,70044},{95778,73877,103518,72752,88641,71885,83932,91406,81962,78496,85227,66418,70201,81845,75417,99330,64285},{106118,87278,116324,81427,92199,77013,79457,98427,92293,104427,89183,81676,88687,89160,90053,107259,79981},{74218,64830,93643,63073,69948,56982,58395,76351,62796,68696,69423,52428,58972,61493,64768,79564,55843},{93410,67613,108334,81828,83286,82549,76555,89912,69988,75258,81722,76947,78955,76237,74580,92097,70820},{107231,87422,112955,80774,94281,83369,89124,100533,92760,101643,97853,83990,85408,91003,89543,111879,81804},{96822,70436,103766,73696,90662,61171,74207,87255,75085,83119,81817,62477,59356,78452,76147,91529,66748},{100677,70879,102910,84225,72524,68598,69715,81606,72882,84779,86999,60333,81717,81691,74109,99712,70487},{79004,59442,86325,62322,76193,67944,69580,77380,81279,68153,73205,63583,66486,65787,63487,81988,62211},{91573,63294,100687,74951,85522,71269,73848,81011,71550,81257,81451,70129,70130,75765,71181,90824,67186},{92986,70973,101890,80338,80797,71668,73592,89564,86854,75473,81303,59895,80462,81644,73109,97698,67094},{84217,67560,95405,72380,82932,74823,70954,88808,70864,66785,64186,70847,67408,67182,74975,83644,61979},{79374,63022,88910,63482,69218,61046,65670,72594,64783,76090,68165,59090,72574,69833,67217,88540,60347},{82512,69019,92949,71520,75293,70678,66770,83529,72935,75300,73267,60097,75083,72067,71294,89524,61616},{66241,56713,77523,61978,54828,55914,56400,63058,57817,56907,65064,41531,58946,59096,54128,73635,48396},{74938,53244,74809,59567,60512,50113,58793,63944,51826,63288,51049,51245,50098,58040,55792,73494,56966}},
	C = matrix_server:mult(A, B),

	MsgRef = make_ref(),
	matrix_server ! {self(), MsgRef, {multiple, A, B}},
	receive
		{MsgRef, C} -> ok;
		_Other -> exit("Failed getting mult in test 99")
	end.

